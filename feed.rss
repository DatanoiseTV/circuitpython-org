<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>CircuitPython.org Boards</title>
<link>https://circuitpython.org/</link>
<description>A list of CircuitPython and Blinka supported boards</description>
<lastBuildDate>Sat, 21 Jan 2023 05:03:43 -0500</lastBuildDate>
<item>
    <title>Helios</title>
    <link>https://circuitpython.org/board/0xcb_helios/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/0xcb_helios.jpg 300w,
               /assets/images/boards/large/0xcb_helios.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/0xcb_helios.jpg" alt="Image of Board" loading="lazy">
<p>By 0xCB</p> <p>The 0xCB Helios is our Elite-C compatible MicroController, based on the high-performance and affordable RP2040.</p>

<p>It’s a drop-in replacement for legacy ProMicro boards.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>Powerful RP2040</strong> 32-bit Cortex M0+ dual core running at 133 MHz and 264kB SRAM.</li>
  <li><strong>16MB/128Mb QSPI FLASH</strong> chip for storing files and code</li>
  <li><strong>Only 3.16 mm thick</strong> thanks to a mid-mounted USB-C port</li>
  <li>3.3V 500mA LDO, PTC fuse and <strong>ESD protection</strong> chip</li>
  <li>Elite-C, Pro Micro, SparkFun Pro Micro RP2040, and nice!Nano compatible pinout (follows the <strong>BastardKb standard</strong>)</li>
  <li><strong>8 extra I/O pins</strong>: (GP12-GP16) added along the bottom edge, (GP10-GP11) at the top and a 5V level shifted pin to drive RGB LEDs for example (GP25)</li>
  <li><strong>25 available digital pins</strong> for a maximum of 13x12 = 156 switches (using a standard matrix)</li>
  <li>Default off <strong>red power LED</strong> (selectable via a jumper on the left side)</li>
  <li><strong>blue user LED</strong> on pin GP17</li>
  <li>4 pins configurable as <strong>analog inputs</strong></li>
  <li><strong>USB D+/D- broken out</strong> for use with an external USB socket/daughterboard</li>
  <li><strong>USB VBUS detection</strong> on GPIO19 for split keyboard side detection</li>
  <li><strong>UF2 bootloader</strong> for drag &amp; drop programming via your file manager</li>
  <li>easy to use and backward compatible <strong>Single button boot and reset circuit</strong> push to reset and hold &gt;500ms to enter bootloader (legacy boards with reset buttons will continue to work!)</li>
  <li><strong>RAW / VBUS</strong> output, for powering RGB LEDs or other 5 V devices. The jumper on top lets you skip over the 500 mA fuse and Schottky diode, for up to 3A from USB ports.</li>
  <li><strong>USB-C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://keeb.supply/products/0xcb-helios">KeebSupply</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 04 Jan 2023 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/0xcb_helios/</guid>
  </item><item>
    <title>The Frood</title>
    <link>https://circuitpython.org/board/42keebs_frood/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/42keebs_frood.jpg 300w,
               /assets/images/boards/large/42keebs_frood.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/42keebs_frood.jpg" alt="Image of Board" loading="lazy">
<p>By 42. Keebs</p> <p>The Frood is a high-performance and affordable drop-in replacement for the Pro Micro (used in many DIY custom mechanical keyboard kits), based on the Raspberry Pi RP2040. It is physically and electrically compatible with Elite-C/nice!nano as much as possible.</p>

<p>It follows the SparkFun Pro Micro RP2040 pinout with 5 extra pins (GPIO12-GPIO16) added along the bottom edge (like Elite-C), and USB data lines broken out in the top corners (like nice!nano).</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powerful dual-core Raspberry Pi RP2040 MCU</li>
  <li>2 MB on-board flash memory</li>
  <li>Only 3.2 mm thick thanks to a mid-mounted USB-C socket</li>
  <li>500 mA linear regulator and resettable fuse</li>
  <li>Combined Pro Micro / Elite-C / nice!nano / SparkFun Pro Micro RP2040 compatible pinout</li>
  <li>5 extra I/O pins (GPIO12-GPIO16) added along the bottom edge</li>
  <li>23 available digital pins for a maximum of 11x12 = 132 switches (using a standard matrix)</li>
  <li>4 pins configurable as analogue inputs</li>
  <li>USB D+/D- broken out for use with an external USB socket/daughterboard</li>
  <li>USB power sensing on GPIO19 for split keyboard side detection</li>
  <li>UF2 bootloader for drag &amp; drop programming with no extra software required</li>
  <li>BOOT and RESET pads on the bottom of the PCB (in case )</li>
  <li>Orange indicator LED on pin GPIO17</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://42keebs.eu/shop/parts/controllers/frood-rp2040-pro-micro-controller/">42. Keebs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 25 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/42keebs_frood/</guid>
  </item><item>
    <title>Commander</title>
    <link>https://circuitpython.org/board/8086_commander/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/8086_commander.jpg 300w,
               /assets/images/boards/large/8086_commander.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/8086_commander.jpg" alt="Image of Board" loading="lazy">
<p>By 8086 Consultancy</p> <p>The Commander is a handheld button and LED board supplied with the UF2 bootloader and CircuitPython.</p>

<h2 id="specifications">Specifications</h2>

<ul>
  <li>Dimensions: 83 x 52 x 7 mm</li>
  <li>Atmel ATSAMD21G18A (32-bit ARM Cortex M0)</li>
  <li>48 Mhz</li>
  <li>32 KB SRAM / 256 KB FLASH</li>
  <li>Accelerometer (ADXL345)</li>
  <li>Micro SD socket</li>
  <li>16 MB SPI FLASH</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/8086net/commander/">8086 Consultancy</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/8086_commander/</guid>
  </item><item>
    <title>Seeed Studio XIAO nRF52840 (Sense)</title>
    <link>https://circuitpython.org/board/Seeed_XIAO_nRF52840_Sense/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/Seeed_XIAO_nRF52840_Sense.jpg 300w,
               /assets/images/boards/large/Seeed_XIAO_nRF52840_Sense.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/Seeed_XIAO_nRF52840_Sense.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <p>Seeed Studio XIAO nRF52840 (Sense) has equipped a powerful Nordic nRF52840 MCU which is designed in a Bluetooth 5.0 module, built around 32-bit ARM® Cortex™-M4 CPU with Floating-Point Unit(FPU) operating at 64Mhz. With the capabilities of wireless connection, it still remains the Seeed Studio XIAO series classic form-factor of small and exquisite which can be used for wearable devices and Internet of Things projects. Furthermore, it only costs 5 μA in the deep sleep model and it supports battery charge management because of the BQ25101 chip.</p>

<p>In addition, the SENSE version of the board carries two extra onboard sensors. One of them is a digital microphone created through Pulse Density Modulation(PDM) module on the nRF52840 chip. It can receive audio data in real-time which allows it can be used for audio recognition. The board not only receives audio data but also can speak through the MSM261D3526H1CPM microphone. The other one is 6-axis Inertial Measurement Unit(IMU) which can be applied in TinyML projects like gesture recognition. These onboard sensors provide a great convenience for users and the ultra-small size feature of the board has still remained.</p>

<p>The same CircuitPython firmware can be used both for the Seed Studio XIAO nRF52840 with or without additional sensor.</p>

<p>Seeed Studio XIAO nRF52840 (Sense) contains a wealthy interface. The first thing to note is that the Near Field Communication(NFC) is functional on the board. Secondly, there is a tiny and elegant reset button on one side of the Type-C interface. On the other side, it is designed in a three-in-one LED along with a power LED. There are 11 digital i/o that can be used as PWM pins and 6 analog i/o that can be used as ADC pins. It supports UART, IIC, and SPI all three common serial ports. Same as Seeed Studio XIAO RP2040, it has an onboard 2 MB flash which means it can also be programmed by Arduino, MicroPython, CircuitPython, or other program languages.</p>

<ul>
  <li>Bluetooth 5.0</li>
  <li>NFC</li>
  <li>21 x 17.5mm tiny board</li>
  <li>5 μA power consumption in deep sleep model</li>
  <li>Battery Charging</li>
  <li>built-in 2 MB flash, microphone and 6-axis IMU</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li>[Seeed Studio] SENSE version (https://www.seeedstudio.com/Seeed-XIAO-BLE-Sense-nRF52840-p-5253.html)</li>
  <li>[Seeed Studio] version without sensor (https://www.seeedstudio.com/Seeed-XIAO-BLE-nRF52840-p-5201.html)</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 28 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/Seeed_XIAO_nRF52840_Sense/</guid>
  </item><item>
    <title>TG-Watch</title>
    <link>https://circuitpython.org/board/TG-Watch/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/TG-Watch.jpg 300w,
               /assets/images/boards/large/TG-Watch.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/TG-Watch.jpg" alt="Image of Board" loading="lazy">
<p>By TG-Techie</p> <p>Why buy an Apple watch when you can spend your weekends building a microcontroller based “smart” watch instead? The TG-Watch is an open source, not-dumb watch meant for makers who want to hack on their watch, people who want to bring Python with them everywhere, or as a great starting point to learn about programming.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>240x240, 1.54” LCD</li>
  <li>capacitive touchscreen</li>
  <li>USB-C port (2.0)</li>
  <li>Step counter and pedometer</li>
  <li>Vibration motor and haptic motor driver</li>
  <li>Bluetooth 5, Bluetooth mesh, Thread, ZigBee</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/TG-Techie/TG-Watch02-PCB">Download PCB Files on Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/TG-Watch/</guid>
  </item><item>
    <title>Adafruit ESP32-S2 Camera</title>
    <link>https://circuitpython.org/board/adafruit_esp32s2_camera/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_esp32s2_camera.jpg 300w,
               /assets/images/boards/large/adafruit_esp32s2_camera.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_esp32s2_camera.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Coming Soon!</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?v=vQdIaJH_Trw">YouTube</a></li>
  <li><a href="https://www.youtube.com/watch?v=3qTod5rLvnw">YouTube</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 14 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_esp32s2_camera/</guid>
  </item><item>
    <title>Adafruit Feather ESP32 V2</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32_v2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32_v2.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32_v2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32_v2.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>One of our star Feathers is the <a href="https://www.adafruit.com/product/3405">Adafruit HUZZAH32 ESP32 Feather</a> - with the fabulous ESP32 WROOM module on there, it makes quick work of WiFi and Bluetooth projects that take advantage of Espressifs most popular chipset. Recently we had to redesign this feather to move from the obsolete CP2104 to the available CH9102F and one thing led to another and before you know it we made a completely refreshed design: the <strong>Adafruit ESP32 Feather V2</strong>.</p>

<p>The V2 is a significant redesign, enough so we consider it a completely new product. It <em>still</em> features the ESP32 chip but has many upgrades and improvements:</p>

<ul>
  <li>Compared to the original Feather with 4 MB Flash and no PSRAM, the V2 has <strong>8 MB Flash and 2 MB PSRAM</strong></li>
  <li>Additional <strong>user button tactile switch</strong> on input pin 38</li>
  <li>Additional <strong>NeoPixel mini RGB LED</strong> with controllable power pin</li>
  <li>Additional <strong>STEMMA QT</strong> port for plug and play I2C connections</li>
  <li><strong>USB Type C</strong> port instead of Micro B</li>
  <li><strong>Separate controllable 3.3V power supply for STEMMA QT</strong> to allow for ultra low power consumption even with sensors are attached</li>
  <li>Designed for low power usage: <a href="https://www.adafruit.com/product/5048">verified with a PPK</a> to <strong>draw 70uA from the Lipoly battery in deep sleep</strong> and 1.2mA in light sleep.</li>
  <li>ESP32 Pico module is much smaller, allowing for clear marking of all breakout pads and additional mounting holes!</li>
  <li>Upgrade the USB to serial converter from CP2102 to CH9102F which is available for purchase! The CH9102F has no issues with uploading at 921600 bps for speedy firmware loading.</li>
</ul>

<p>However, in order to add the PSRAM, and use the new Pico module which was small enough to allow all the fun extras, some of the breakout pads have changed, so here’s what you need to know:</p>

<ul>
  <li>The pin <em>numbers</em> for the I2C port (SDA, SCL), hardware UART (RX, TX), and SPI (SCK, MOSI, MISO) have changed. If your code has hardcoded use for those pins, you’ll want to replace them either by the new numbers or change the code to use the ‘pretty’ names like SDA or SCK.
When selecting the new Feather ESP32 V2 board in the Espressif board support package, the correct numbers will be substituted.
Note the names are in the same spots, we haven’t changed where the I2C/UART/SPI pins are located on the board, just which ESP32 pin numbers they are connected to in the module.</li>
  <li>The ‘corner’ pin next to TX has changed from pin 21 to 37. This pin is not used in any FeatherWings because its considered an ‘extra pin’. It’s also changed from a GPIO to input-only</li>
  <li>The remaining numbered pins and A0-A5 pins have not changed pin numbers.</li>
</ul>

<p>That module nestled in at the end of this Feather contains a dual-core ESP32 chip, 8 MB of SPI Flash, 2 MB of PSRAM, tuned PCB antenna, and all the passives you need to take advantage of this powerful new processor. The ESP32 has both WiFi <em>and</em> Bluetooth Classic/LE support. That means it’s perfect for just about any wireless or Internet-connected project.</p>

<p>Because it’s part of our <a href="https://www.adafruit.com/category/814">Feather eco-system, you can take advantage of the 50+ Wings</a> that we’ve designed to add all sorts of cool accessories. Plus that built in battery charging and monitoring you know and love with the ESP32 Feather is still there in this upgrade.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32 Dual core 240MHz Xtensa®</strong> <strong>processor</strong> - the classic dual-core ESP32 you know and love!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 8 MByte of Flash and 2 MByte of PSRAM - you can have huge data buffers</li>
  <li><strong>Power options</strong> - USB type C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>LiPoly battery monitor</strong> with two 200K resistor divider</li>
  <li><strong>Reset and User</strong> (I38) buttons to reset board and as a separate input</li>
  <li><strong>High speed upload with auto-reset and serial debug</strong> with ultra-reliable CP2102N chipset.</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode.</li>
  <li><strong>Charge/User</strong> LEDs + status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to 80~100uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C power for the lowest quiescent current draw.</li>
  <li><strong>Works with Arduino or MicroPython</strong></li>
</ul>

<p>Comes fully assembled and tested, with a USB interface that lets you quickly use it with the Arduino IDE or the low-level ESP32 IDF. We also toss in some header so you can solder it in and plug into a solderless breadboard. <strong>Lipoly battery and USB cable not included</strong> (but we do have lots of options in the shop if you’d like!)</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5400">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32_v2/</guid>
  </item><item>
    <title>Feather ESP32-S2</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s2.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s2.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s Feather-shaped and has an ESP32-S2 WiFi module? What has a STEMMA QT connector for I2C devices? What has your favorite Espressif WiFi microcontroller and lots of Flash and RAM memory for your next IoT project? What will make your next IoT project flyyyyy?</p>

<p>That’s right - it’s the new <strong>Adafruit Feather ESP32-S2</strong> and the <strong>Adafruit Feather ESP32-S2 with BME280</strong>! With native USB and 4 MB flash + 2 MB of PSRAM, this board is perfect for use with CircuitPython or Arduino with low-cost WiFi. Native USB means it can act like a keyboard or a disk drive. WiFi means its awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

<p>The ESP32-S2 is a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has <strong>built-in native USB</strong> as well as some other interesting new technologies like Time of Flight distance measurements. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p><strong>Please note</strong> the Feather ESP32-S2 has a single-core 240 MHz chip, so it won’t be as fast as ESP32’s with dual-core. Also, there is no Bluetooth support. However, we are super excited about the ESP32-S2’s native USB which unlocks a lot of capabilities for advanced interfacing! This ESP32-S2 mini-module we are using on the Feather comes with 4 MB flash and 2 MB PSRAM so you can buffer massive JSON files for parsing!</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 M of PSRAM - you can have huge data buffers</li>
  <li><strong>Power options</strong> - USB-C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>BME280</strong> temperature / humidity / barometric pressure sensor connected over I2C on address <code class="language-plaintext highlighter-rouge">0x77</code> for immediate ambient weather sensing (<strong>on BME280 version only!</strong>)</li>
  <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode</li>
  <li><strong>On/Charge/User</strong> LEDs and status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to 30 uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S2 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C power for the lowest quiescent current draw.</li>
  <li>Works with Arduino or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5000">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s2/</guid>
  </item><item>
    <title>Feather ESP32-S2 with BME280 Sensor</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s2_bme280/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s2_bme280.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s2_bme280.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s2_bme280.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s Feather-shaped and has an ESP32-S2 WiFi module? What has a STEMMA QT connector for I2C devices and a built in ambient sensor? What has your favorite Espressif WiFi microcontroller and lots of Flash and RAM memory for your next IoT project? What will make your next IoT project sensor project flyyyyy?</p>

<p>That’s right - it’s the new <strong>Adafruit ESP32-S2 Feather with BME280</strong> temperature/humidity/pressure sensor built right in! With native USB and 4 MB flash and 2 MB of PSRAM, this board is perfect for use with CircuitPython or Arduino with low-cost WiFi. Native USB means it can act like a keyboard or a disk drive. WiFi means its awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

<p>The ESP32-S2 is a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has <strong>built-in native USB</strong> as well as some other interesting new technologies like Time of Flight distance measurements. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p><strong>Please note</strong> the Feather ESP32-S2 has a single-core 240 MHz chip, so it won’t be as fast as ESP32’s with dual-core. Also, there is no Bluetooth support. However, we are super excited about the ESP32-S2’s native USB which unlocks a lot of capabilities for advanced interfacing! This ESP32-S2 mini-module we are using on the Feather comes with 4 MB flash and 2 MB PSRAM so you can buffer massive JSON files for parsing!</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 MB of PSRAM - you can have huge data buffers</li>
  <li><strong>Power options</strong> - USB-C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>BME280</strong> temperature/humidity/barometric pressure sensor connected over I2C on address <code class="language-plaintext highlighter-rouge">0x77</code> for immediate ambient weather sensing</li>
  <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode</li>
  <li><strong>On/Charge/User</strong> LEDs and status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to 80~100 uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S2 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C power for the lowest quiescent current draw.</li>
  <li>Works with Arduino or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5303">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s2_bme280/</guid>
  </item><item>
    <title>Feather ESP32-S2 with TFT</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s2_tft/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s2_tft.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s2_tft.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s2_tft.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>We’ve got a new machine here at Adafruit, it can uncover your deepest desires. Don’t believe me? I’ll turn it on right now to prove it to you! What, you want unlimited mozzarella sticks? OK well, that’s not something we can provide. But we can provide your <em>second</em>-deepest desire: an <strong>ESP32-S2 Feather board with a built in IPS TFT color display</strong>. It’s got all the <del>gooeyness of a mozzarella stick</del> features of a Feather main board, the comforting warmth of an ESP32-S2 WiFi microcontroller, and the crispness of a 240x135 pixel color TFT display. All that and it will even plug in nicely into a breadboard, <a href="https://www.adafruit.com/product/2926">terminal block wing</a>, or <a href="https://www.adafruit.com/product/2890">Feather Doubler</a> or even just stack on top of another wing.</p>

<p>This feather comes with native USB and <strong>4 MB flash + 2 MB of PSRAM</strong>, so it is perfect for use with CircuitPython or Arduino with low-cost WiFi. Native USB means it can act like a keyboard or a disk drive. WiFi means its awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

<p>The ESP32-S2 is a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has <strong>built-in native USB</strong> as well as some other interesting new technologies like Time of Flight distance measurements. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p><strong>Please note</strong> the Feather ESP32-S2 has a single-core 240 MHz chip, so it won’t be as fast as ESP32’s with dual-core. Also, there is no Bluetooth support. However, we are super excited about the ESP32-S2’s native USB which unlocks a lot of capabilities for advanced interfacing! This ESP32-S2 mini-module we are using on the Feather comes with 4 MB flash and 2 MB PSRAM so you can buffer massive JSON files for parsing!</p>

<p>The color TFT is connected to the SPI pins, and uses additional pins for control that are not exposed to the breakout pads. <a href="https://www.adafruit.com/product/4383">It’s the same display as you see here, with 240x135 pixels and is IPS</a> so you get bright color at any angle. The backlight is also connected to a separate pin so you can PWM the backlight up and down as desired.</p>

<p>For low power usages, the Feather has a <em>second</em> AP2112 regulator. The regulator is controlled with a GPIO pin on the enable line and can shut off power to the Stemma QT port and TFT. There is also a separate power pin for the NeoPixel that can be used to disable it for even lower quiescent power. With everything off and in deep sleep mode, the TFT feather uses about 100uA of current.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 MB of PSRAM - you can have huge data buffers</li>
  <li><strong><a href="https://www.adafruit.com/product/4383">Color 1.14” IPS TFT with 240x135 pixels</a></strong> - bright and colorful display with ST7789 chipset that can be viewed at any angle angle.</li>
  <li><strong>Power options</strong> - USB-C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode</li>
  <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to 80~100 uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S2 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C/TFT power for the lowest quiescent current draw.</li>
  <li>Works with Arduino or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5300">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s2_tft/</guid>
  </item><item>
    <title>Feather ESP32-S3 4MB Flash 2MB PSRAM</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s3_4mbflash_2mbpsram/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s3_4mbflash_2mbpsram.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s3_4mbflash_2mbpsram.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s3_4mbflash_2mbpsram.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The ESP32-S3 has arrived in Feather format - and what a great way to get started with this powerful new chip from Espressif! With dual 240 MHz cores, WiFi and BLE support, and native USB, this Feather is great for powering your IoT projects.</p>

<p>That’s right - it’s the new <strong>Adafruit ESP32-*S3* Feather</strong> with dual core and native USB - <strong>this version comes with 4 MB flash, and 2 MB PSRAM</strong> compared to the <a href="https://www.adafruit.com/product/5323">Feather ESP32-S3 with 8MB Flash / no PSRAM version here</a>.</p>

<p>Native USB means it can act like a keyboard or a disk drive, and no external USB-to-Serial converter required. WiFi and BLE mean it’s awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

<p>The ESP32-S3 is a highly-integrated, low-power, 2.4 GHz Wi-Fi/BLE System-on-Chip (SoC) solution that has built-in native USB as well as some other interesting new technologies like Time of Flight distance measurements and AI acceleration. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p>The Feather ESP32-S3 has a dual-core 240 MHz chip, so it is comparable to ESP32’s dual-core. However, there is no Bluetooth <strong>Classic</strong> support, only Bluetooth LE. This chip is a great step up from the earlier ESP32-S2! This ESP32-S3 mini-module we are using on the Feather comes with 4 MB flash and 2 MB PSRAM, as well as lots of 512KB of SRAM so it’s perfect for use with CircuitPython support or any time massive buffers are needed: for fast memory access use SRAM, for slower-but-roomier access use PSRAM. It’s also great for use in ESP-IDF or with Arduino support.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32-S3 Dual Core 240MHz Tensilica processor</strong> - the next generation of ESP32-Sx, with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 4 MByte of Flash, 2 MByte PSRAM</li>
  <li><strong>Power options</strong> - USB type C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode.</li>
  <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to ~100uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S3 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C power for the lowest quiescent current draw.</li>
  <li><strong>Works with ESP-IDF, Arduino</strong> <strong>or CircuitPython</strong></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5477">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Jun 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s3_4mbflash_2mbpsram/</guid>
  </item><item>
    <title>Feather ESP32-S3 No PSRAM</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s3_nopsram/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s3_nopsram.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s3_nopsram.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s3_nopsram.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The ESP32-S3 has arrived in Feather format - and what a great way to get started with this powerful new chip from Espressif! With dual 240 MHz cores, WiFi and BLE support, and native USB, this Feather is great for powering your IoT projects.</p>

<p>That’s right - it’s the new <strong>Adafruit ESP32-*S3* Feather</strong>! With native USB and 8 MB flash, this board will let you upgrade your existing ESP32 projects. Native USB means it can act like a keyboard or a disk drive, and no external USB-to-Serial converter required. WiFi and BLE mean it’s awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

<p>The ESP32-S3 is a highly-integrated, low-power, 2.4 GHz Wi-Fi/BLE System-on-Chip (SoC) solution that has built-in native USB as well as some other interesting new technologies like Time of Flight distance measurements and AI acceleration. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p>The Feather ESP32-S3 has a dual-core 240 MHz chip, so it is comparable to ESP32’s dual-core. However, there is no Bluetooth <strong>Classic</strong> support, only Bluetooth LE. This chip is a great step up from the earlier ESP32-S2! This ESP32-S3 mini-module we are using on the Feather comes with 8 MB flash and no PSRAM, but it does have 512KB of SRAM so its fine for use with CircuitPython support as long as massive buffers are not needed. It’s also great for use in ESP-IDF or with Arduino support.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32-S3 Dual Core 240MHz Tensilica processor</strong> - the next generation of ESP32-Sx, with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>Mini module</strong> has FCC/CE certification and comes with 8 MByte of Flash, no PSRAM</li>
  <li><strong>Power options</strong> - USB type C <strong>or</strong> Lipoly battery</li>
  <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
  <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode.</li>
  <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
  <li><strong>Low Power friendly</strong>! In deep sleep mode we can get down to ~100uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S3 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C power for the lowest quiescent current draw.</li>
  <li><strong>Works with ESP-IDF, Arduino</strong> (coming soon) <strong>or CircuitPython</strong> (not recommended since there is no PSRAM, but for some simple IoT projects without large buffers it will work)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5323">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s3_nopsram/</guid>
  </item><item>
    <title>Feather ESP32-S3 TFT PSRAM</title>
    <link>https://circuitpython.org/board/adafruit_feather_esp32s3_tft/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_esp32s3_tft.jpg 300w,
               /assets/images/boards/large/adafruit_feather_esp32s3_tft.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_esp32s3_tft.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <ul>
  <li>
    <p>We’ve got a new machine here at Adafruit, it can uncover your deepest desires. Don’t believe me? I’ll turn it on right now to prove it to you! What, you want your very own soft serve ice cream machine? OK well, that’s not something we can provide. But we can provide your <em>second</em>-deepest desire: an <strong>ESP32-S*3* Feather board with a built in IPS TFT color display</strong>. It’s got all the delicious creamy goodness features of a Feather main board, the comforting warmth of an ESP32-S3 WiFi+BLE microcontroller, and the crispness of a 240x135 pixel color TFT display. All that and it will even plug in nicely into a breadboard, <a href="https://www.adafruit.com/product/2926">terminal block wing</a>, or <a href="https://www.adafruit.com/product/2890">Feather Doubler</a> or even just stack on top of another wing.</p>

    <p>This Feather comes with native USB and <strong>4 MB Flash + 2 MB of PSRAM</strong>, so it is perfect for use with CircuitPython or Arduino with low-cost WiFi. Native USB means it can act like a keyboard or a disk drive. WiFi means it’s awesome for IoT projects. And Feather means it works with the large community of Feather Wings for expandability.</p>

    <p>The ESP32-S3 is a highly-integrated, low-power, 2.4 GHz Wi-Fi/BLE System-on-Chip (SoC) solution that has built-in native USB as well as some other interesting new technologies like Time of Flight distance measurements and AI acceleration. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

    <p>The Feather ESP32-S3 has a dual-core 240 MHz chip, so it is comparable to ESP32’s dual-core. However, there is no Bluetooth <strong>Classic</strong> support, only Bluetooth LE. This chip is a great step up from the earlier ESP32-S2! This ESP32-S3 mini-module we are using on the Feather comes with 4 MB flash and 2 MB PSRAM, as well as lots of 512KB of SRAM so it’s perfect for use with CircuitPython support or any time massive buffers are needed: for fast memory access use SRAM, for slower-but-roomier access use PSRAM. It’s also great for use in ESP-IDF or with Arduino support.</p>

    <p>The color TFT is connected to the SPI pins and uses additional pins for control that are not exposed to the breakout pads. <a href="https://www.adafruit.com/product/4383">It’s the same display as you see here, with 240x135 pixels and is IPS</a> so you get bright color at any angle. The backlight is also connected to a separate pin so you can PWM the backlight up and down as desired.</p>

    <p>For low power usages, the Feather has a <em>second</em> low-dropout 3.3V regulator. The regulator is controlled with a GPIO pin on the enable line and can shut off power to the Stemma QT port and TFT. There is also a separate power pin for the NeoPixel that can be used to disable it for even lower quiescent power. With everything off and in deep sleep mode, the TFT feather uses about 100uA of current.</p>

    <p><strong>Features:</strong></p>

    <ul>
      <li><strong>ESP32-S3 Dual Core 240MHz Tensilica processor</strong> - the next generation of ESP32-Sx, with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
      <li><strong>Mini module</strong> has FCC/CE certification and comes with 4 MByte of Flash and 2 MByte of PSRAM - you can have huge data buffers</li>
      <li><strong><a href="https://www.adafruit.com/product/4383">Color 1.14” IPS TFT with 240x135 pixels</a></strong> - bright and colorful display with ST7789 chipset that can be viewed at any angle angle.</li>
      <li><strong>Power options</strong> - USB type C <strong>or</strong> Lipoly battery</li>
      <li><strong>Built-in battery charging</strong> when powered over USB-C</li>
      <li><strong>LiPoly battery monitor</strong> - LC709203 chip actively monitors your battery for voltage and state of charge / percentage reporting over I2C</li>
      <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
      <li><strong>Serial debug output pin</strong> (optional, for checking the hardware serial debug console)</li>
      <li><strong>STEMMA QT</strong> connector for I2C devices, with switchable power, so you can go into low power mode.</li>
      <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong> with pin-controlled power for low power usage</li>
      <li><strong>Low Power friendly</strong>! In deep sleep mode, we can get down to 80~100uA of current draw from the Lipoly connection. Quiescent current is from the power regulator, ESP32-S2 chip, and Lipoly monitor. Turn off the NeoPixel and external I2C/TFT power for the lowest quiescent current draw.</li>
      <li><strong>Works with Arduino or CircuitPython</strong></li>
    </ul>
  </li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5483">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Jun 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_esp32s3_tft/</guid>
  </item><item>
    <title>Adafruit Feather HUZZAH32</title>
    <link>https://circuitpython.org/board/adafruit_feather_huzzah32/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_huzzah32.jpg 300w,
               /assets/images/boards/large/adafruit_feather_huzzah32.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_huzzah32.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Aww yeah, it’s the Feather you have been waiting for! The <strong>HUZZAH32</strong> is our ESP32-based Feather, made with the official WROOM32 module. We packed everything you love about Feathers: built in USB-to-Serial converter, automatic bootloader reset, Lithium Ion/Polymer charger, and just about all of the GPIOs brought out so you can use it with any of our Feather Wings. <a href="https://www.adafruit.com/feather">We have other boards in the Feather family, check’em out here.</a></p>

<p>That module nestled in at the end of this Feather contains a dual-core ESP32 chip, 4 MB of SPI Flash, tuned antenna, and all the passives you need to take advantage of this powerful new processor. The ESP32 has both WiFi <em>and</em> Bluetooth Classic/LE support. That means it’s perfect for just about any wireless or Internet-connected project.</p>

<p>Because it’s part of our <a href="https://www.adafruit.com/category/814">Feather eco-system, you can take advantage of the 50+ Wings</a> that we’ve designed to add all sorts of cool accessories.</p>

<p>The ESP32 is a perfect upgrade from the ESP8266 that has been so popular. In comparison, the ESP32 has way more GPIO, plenty of analog inputs, two analog outputs, multiple extra peripherals (like a spare UART), two cores so you don’t have to yield to the WiFi manager, much higher-speed processor, etc. etc! We think that as the ESP32 gets traction, we’ll see more people move to this chip exclusively, as it is so full-featured.</p>

<p><strong>Please note: The ESP32 is still targeted to developers</strong>. Not all of the peripherals are fully documented with example code, and there are some bugs still being found and fixed. We got all of our Featherwings working under Arduino IDE, so you can expect things like I2C and SPI and analog reads to work. But other elements are still under development. For that reason, we recommend this Feather for makers who have some experience with microcontroller programming, and not as a first dev board.</p>

<p>Here are <a href="https://espressif.com/en/products/hardware/esp32/overview">specifications from Espressif about the ESP32</a>:</p>

<ul>
  <li>240 MHz dual core Tensilica LX6 microcontroller with 600 DMIPS</li>
  <li>Integrated 520 KB SRAM</li>
  <li>Integrated 802.11b/g/n HT40 Wi-Fi transceiver, baseband, stack and LWIP</li>
  <li>Integrated dual mode Bluetooth (classic and BLE)</li>
  <li>4 MByte flash include in the WROOM32 module</li>
  <li>On-board PCB antenna</li>
  <li>Ultra-low noise analog amplifier</li>
  <li>Hall sensor</li>
  <li>10x capacitive touch interface</li>
  <li>32 kHz crystal oscillator</li>
  <li>3 x UARTs (only two are configured by default in the Feather Arduino IDE support, one UART is used for bootloading/debug)</li>
  <li>3 x SPI (only one is configured by default in the Feather Arduino IDE support)</li>
  <li>2 x I2C (only one is configured by default in the Feather Arduino IDE support)</li>
  <li>12 x ADC input channels</li>
  <li>2 x I2S Audio</li>
  <li>2 x DAC</li>
  <li>PWM/timer input/output available on every GPIO pin</li>
  <li>OpenOCD debug interface with 32 kB TRAX buffer</li>
  <li>SDIO controller/peripheral 50 MHz</li>
  <li>SD-card interface support</li>
</ul>

<p>Comes fully assembled and tested, with a USB interface that lets you quickly use it with the Arduino IDE or the low-level ESP32 IDF. We also toss in some header so you can solder it in and plug into a solderless breadboard. <strong>Lipoly battery and USB cable not included</strong> (but we do have lots of options in the shop if you’d like!)</p>

<p><strong>CircuitPython on ESP32</strong>
Want to learn how to load circuitpython onto this board? check out <a href="https://learn.adafruit.com/circuitpython-with-esp32-quick-start/">this</a> on the Adafruit learning system 
Want to use the supernew web workflow, <a href="https://learn.adafruit.com/getting-started-with-web-workflow-using-the-code-editor">this</a> tutorial shows you how.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3707">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_huzzah32/</guid>
  </item><item>
    <title>Feather RP2040</title>
    <link>https://circuitpython.org/board/adafruit_feather_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_feather_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>A new chip means a new Feather, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the Feather Treatment” and so we did! This Feather features the <strong>RP2040</strong>, and all niceties you know and love about Feather.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8 mm x 22.8 mm x 7 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>21 GPIO pins with following capabilities:**
    <ul>
      <li>4 12-bit ADCs (one more than Pico)</li>
      <li>2 I2C, 2 SPI and 2 UART peripherals, we label one for the ‘main’ interface in standard Feather locations</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>The 8 digital ‘non-ADC/non-peripheral’ GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>Built in 200 mA lipoly charger</strong> with charging status indicator LED</li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> with power pin on GPIO so you can depower it for low power usages.</li>
  <li>On-board <strong>STEMMA QT connector</strong> that lets you quickly connect any Qwiic, STEMMA QT or Grove I2C devices with no soldering!</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts (no unplugging-replugging to relaunch code)</strong></li>
  <li>3.3 V Power/enable pin</li>
  <li><a href="https://www.adafruit.com/product/752">Optional SWD debug port can be soldered in for debug access</a></li>
  <li>4 mounting holes</li>
  <li>24 MHz crystal for perfect timing</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li><strong>USB-C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader.</strong> What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD1). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating-point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p>There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, unofficial (but really good) <a href="https://github.com/earlephilhower/arduino-pico">Arduino support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="/downloads">CircuitPython port</a>. We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. <strong>On this board there is 8 MB</strong>, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 7 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133 MHz</li>
  <li>264 kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16 MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some header, so you can solder it in and plug it into a solderless breadboard.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4884">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 Jan 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_rp2040/</guid>
  </item><item>
    <title>Feather RP2040 SCORPIO</title>
    <link>https://circuitpython.org/board/adafruit_feather_rp2040_scorpio/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_rp2040_scorpio.jpg 300w,
               /assets/images/boards/large/adafruit_feather_rp2040_scorpio.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_rp2040_scorpio.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>If there is one thing Adafruit is known for, its mega-blinky-fun-rainbow-LEDs. <a href="https://www.adafruit.com/category/168">We just love sticking NeoPixels anywhere and everywhere</a>. When we saw the new ‘PIO’ peripheral on<a href="https://www.adafruit.com/category/875"> the RP2040 from Raspberry Pi</a>, we just knew it would be perfect for driving large quantities of NeoPixels. So we created this board, the <strong>Adafruit Feather RP2040 SCORPIO</strong>, designed specifically for NeoPixel (WS2812) driving but also good for various other PIO-based projects that want to take advantage of the Feather pinout with 8 separate consecutive outputs (or inputs).</p>

<p><a href="https://learn.adafruit.com/intro-to-rp2040-pio-with-circuitpython">The RP2040 PIO state machine</a> is perfect for LED driving: it can generate perfect waveforms, with up to 8 outputs concurrently, all through DMA. That means that you don’t need to use any processor time to bit-bang-out the LED data. Just set up the buffer and tell the PIO peripheral to ‘make it so’ and it will shove that data to the 8 outputs without delay while your code can continue to read buttons, play music, run CircuitPython - whatever you like!</p>

<p>The SCORPIO has a clever pinout, where all the standard Feather pins are the same as the GPIO pins, plus the standard I2C, SPI and UART lines - and theres <em>still</em> enough pins left over to have 8 consecutive pins for PIO usage on GPIO16 through GPIO23 inclusive.</p>

<p>To make NeoPixel usage glitch-free there is a 3V-&gt;5V level shifter so that the output logic is 5V. If you happen to want 3V signals, you can adjust the shifter voltage with a jumper on the bottom. It’s also possible to flip the direction of the level shifter to make the 8 I/O pins inputs - say for making a logic analyzer - with a directional jumper selection also on the bottom of the PCB.</p>

<p>The RP2040 SCORPIO also has a <em>ton</em> of RAM, 264KB, making it trivial to buffer huge numbers of NeoPixels…<em>several thousand</em> if needed. In fact there’s so much RAM you can even <em>dither</em> the pixels to for finer brightness control, for better-looking LEDs at low brightness or for gamma correction.</p>

<p>We have <a href="https://github.com/adafruit/Adafruit_NeoPXL8">NeoPXL8 driver code available in Arduino</a> and <a href="https://github.com/adafruit/Adafruit_CircuitPython_NeoPxl8">CircuitPython</a>, so you can jump immediately to making beautiful artworks driven by the Adafruit SCORPIO.</p>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8mm x 22.8mm x 7mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>Tons of GPIO! 21 x GPIO pins with following capabilities:
    <ul>
      <li><strong>Four</strong> 12-bit ADCs (one more than Pico)</li>
      <li>Two I2C, Two SPI, and two UART peripherals, we label one for the ‘main’ interface in standard Feather locations</li>
      <li>16 x PWM outputs - for servos, LEDs, etc</li>
      <li>8 x consecutive GPIO outputs with 5V level shifting for PIO NeoPixel driving</li>
    </ul>
  </li>
  <li><strong>Built-in 200mA+ lipoly charger</strong> with charging status indicator LED</li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> for full-color indication on <strong>D4</strong></li>
  <li>On-board <strong>STEMMA QT connector</strong> that lets you quickly connect any Qwiic, STEMMA QT or Grove I2C devices with no soldering!</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts</strong> (no unplugging-replugging to relaunch code). Bootloader button is also available as user-input button on GPIO #7</li>
  <li>3.3V Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>12 MHz crystal for perfect timing.</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li><strong>USB Type C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5650">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 22 Dec 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_rp2040_scorpio/</guid>
  </item><item>
    <title>FunHouse - WiFi Home Automation Development Board</title>
    <link>https://circuitpython.org/board/adafruit_funhouse/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_funhouse.jpg 300w,
               /assets/images/boards/large/adafruit_funhouse.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_funhouse.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Home is where the heart is…it’s also where all we keep all our electronic bits. So why not wire it up with sensors and actuators to turn our house into an electronic wonderland. Whether it’s tracking the environmental temperature and humidity in your laundry room, or notifying you when someone is detected in the kitchen, to sensing when a window was left open, or logging when your cat leaves through the pet door, this board is designed to make it way easy to make WiFi-connected home automation projects.</p>

<p>The main processor is the ESP32-S2, which has the advantage of the low cost and power of the ESP32 with the flexibility of CircuitPython support thanks to native USB support. There’s also Arduino support for this chip, and many existing ESP32 projects seem to run as-is. Note this chip does not have BLE support, but for WiFi projects its great. You can use it to connect to IoT services or just the Internet in general, with SSL support and this module has plenty of PSRAM for any kind of data processing.</p>

<p>The board is designed to make it easy to wire up sensors with little or no soldering. There are built in sensors for light, pressure, humidity and temperature sensors. <a href="https://www.adafruit.com/category/1019">Three JST PH plugs allow for quick connection of STEMMA boards</a> that use digital or analog I/O, and there’s a <a href="https://www.adafruit.com/category/620">STEMMA QT port for any I2C devices</a>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>WROVER module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 MB of PSRAM - you can have huge data buffers</li>
  <li><strong><a href="https://www.adafruit.com/product/4421">1.54” Color TFT display with 240x240 pixels</a></strong>. This petite display is one of our favorites, with SPI interface and a controllable backlight.</li>
  <li><strong>USB C</strong> power and data connector</li>
  <li><strong>Five mini RGB DotStar LEDs</strong> on the top, for animations or easily-visible notification</li>
  <li>3 <strong>buttons</strong> can be used to wake up the ESP32 from deep-sleep, or select different modes</li>
  <li><strong><a href="https://www.adafruit.com/product/4494">DPS310</a> barometric pressure and temperature sensor</strong></li>
  <li><strong><a href="https://www.adafruit.com/product/4566">AHT20</a> relative humidity and temperature sensor</strong></li>
  <li>Plug in socket for <a href="https://www.adafruit.com/product/4871">Mini PIR sensor</a> (not included)</li>
  <li>Front facing <strong>light sensor</strong></li>
  <li><strong>Speaker/Buzzer</strong> can play tones and beeps for audible notification.</li>
  <li><strong>STEMMA QT</strong> port for <a href="https://www.adafruit.com/stemma">attaching all sorts of I2C devices</a></li>
  <li>3 <strong>STEMMA 3 pin JST</strong> connectors for attaching <a href="https://www.adafruit.com/product/3919">NeoPixels</a>, <a href="https://www.adafruit.com/product/3885">speakers</a>, <a href="https://www.adafruit.com/product/4326">servos</a> or <a href="https://www.adafruit.com/product/4409">relays</a>.</li>
  <li>3 <strong>capacitive touch pads</strong> and one <strong>capacitive touch slider</strong> with 5 elements.</li>
  <li><strong>On/Off switch</strong></li>
  <li><strong>Boot</strong> and <strong>Reset buttons</strong> for re-programming</li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4985">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_funhouse/</guid>
  </item><item>
    <title>ItsyBitsy RP2040</title>
    <link>https://circuitpython.org/board/adafruit_itsybitsy_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_itsybitsy_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_itsybitsy_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_itsybitsy_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>A new chip means a new ItsyBitsy, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the ItsyBitsy teensy-weensy Treatment” and so we did! This Itsy’ features the RP2040, and all niceties you know and love about the <a href="https://www.adafruit.com/category/1008">ItsyBitsy family</a>.</p>

<p>What’s smaller than a Feather but larger than a Trinket? It’s an Adafruit ItsyBitsy RP2040 featuring the Raspberry Pi RP2040! Small, powerful, with a ultra fast duel Cortex M0+ processor running at 125 MHz - this microcontroller board is perfect when you want something very compact, with lots of horsepower and a bunch of pins. This Itsy has sports car speed, but SUV roominess with 4 MB of FLASH and 264 KB of SRAM.</p>

<p>ItsyBitsy RP2040 is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (4 of which can be analog in and 16x PWM out). It’s the same chip as the <a href="https://www.adafruit.com/products/4884">Feather RP2040</a> and <a href="https://www.adafruit.com/products/4883">Raspberry Pi Pico</a> <em>but really really small</em>. So it’s great once you’ve finished up a prototype, and want to make the project much smaller. It even comes with 4MB of SPI Flash built in, for data logging, file storage, or CircuitPython/MicroPython code.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><a href="https://www.adafruit.com/category/1008">Same size and form-factor as the rest of the ItsyBitsy family</a> and nearly-identical pinout</li>
  <li>Measures 1.4” x 0.7” x 0.2” (36 mm x 18 mm x 4 mm) without headers soldered in</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>4 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>23 GPIO pins with following capabilities:
    <ul>
      <li>4 12 bit ADCs (one more than Pico)</li>
      <li>2 I2C, 2 SPI and 2 UART peripherals, we label one for the ‘main’ interface in standard ItsyBitsy locations</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>The 10 digital ‘non-ADC/non-peripheral’ GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> with power pin on GPIO so you can depower it for low power usages.</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts (no unplugging-replugging to relaunch code)</strong></li>
  <li>3.3 V regulator with 500mA peak current output</li>
  <li>3.3 V Power/enable pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Broken-out SWD pins for debug access</li>
  <li>24 MHz crystal for perfect timing.</li>
  <li>Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other 5V-logic devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
  <li><strong>USB Micro B connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader</strong>. What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create <em>custom hardware logic and data processing blocks</em> that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. <a href="https://github.com/raspberrypi/pico-examples/tree/master/pio">Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA</a>! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>At the time of launch, there is no Arduino core support for this board. There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="https://circuitpython.org/downloads">CircuitPython port</a>!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>This Itsy comes with loose 0.1” headers you can solder in for breadboard use!</p>

<p>While the RP2040 has lots of onboard RAM (264 KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board there is 2 MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>

<ul>
  <li>Dual ARM Cortex-M0+ @ 133 MHz</li>
  <li>264 kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4888">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_itsybitsy_rp2040/</guid>
  </item><item>
    <title>Adafruit KB2040</title>
    <link>https://circuitpython.org/board/adafruit_kb2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_kb2040.jpg 300w,
               /assets/images/boards/large/adafruit_kb2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_kb2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>A wild Kee Boar appears! It’s a shiny <strong>KB2040</strong>! An Arduino Pro Micro-shaped board for Keebs with RP2040. (#keeblife 4 evah) A lot of folks like using Adafruit parts for their Keeb builds – but with the ItsyBitsy not being pin-compatible with the Pro Micro pinout, it really wasn’t very easy without some sort of adapter plate.</p>

<p>Now we’re seeing lots of people use CircuitPython for keebs, which is awesome! So why not try our hands at spinning up a pro-micro-compatible RP2040 board? The RP2040 is plenty powerful, low-cost, and makes for an excellent keeb driver chip.</p>

<p>We mixed together what we liked most about the SparkFun Pro Micro RP2040 (<strong>Qwiic / STEMMA QT I2C port on the end</strong>, so good!) and Elite-C (<strong>castellated pads &amp; pins for D+ and D-</strong>) and our existing RP2040 boards (<strong>boot button can be used for user, 8MB QSPI flash, onboard NeoPixel, jumper for skipping the diode/fuse for high power RGB LEDs or USB hosting</strong>). We even got it to all fit on a 2-layer PCB with 7/7 routing – just needed to make the smallest caps and resistors 0402.</p>

<p>With 20 GPIO available (18 on castellated pins, 2 on STEMMA QT port) you can easily make up to 100-keys matrices, or common 65% 5x15 layouts. <a href="https://www.adafruit.com/product/4209">Use a plug-and-play QT cable to connect to the last two pins</a> without having to do any desoldering/rework.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><a href="https://www.sparkfun.com/products/12640">Same size and form-factor as a Pro Micro breakout</a> and nearly-identical pinout (this board has fewer analog pins, for example)</li>
  <li>Measures 1.3” x 0.7” without headers soldered in</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3 V logic and power. 264 KB RAM, No EEPROM. 12 MHz crystal for perfect timing.</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage.</li>
  <li>20 GPIO pins with following capabilities:
    <ul>
      <li>18 GPIO on castellated/pin breakout pads. 2 GPIO on QT port that can be easily accessed for 5x15 keyboard layouts.</li>
      <li>4 12 bit ADCs</li>
      <li>2 I2C, 2 SPI and 2 UART peripherals, we label one of for the ‘main’ interface in standard Pro Micro locations</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>The 10 digital non-ADC GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>RGB NeoPixel</strong> for colorful status indiction</li>
  <li>Classic <strong>green power LED</strong></li>
  <li>Both Reset button and Bootloader select button for quick restarts. Bootloader button is also available as a generic GPIO input button.</li>
  <li><a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt/what-is-stemma-qt">STEMMA QT connector</a> on the end is compatible with the <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a> I2C connector, and can be used to plug and play I2C devices, or just as 2 extra GPIO pins.</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li><strong>RAW</strong> output, for powering NeoPixels or other 5 V devices. Jumper on bottom lets you skip over the 500 mA fuse, for up to 2 A from USB ports.</li>
  <li><strong>USB-C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
  <li><strong>Extra D- and D+ breakouts</strong> for alternative USB connection options.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5302">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_kb2040/</guid>
  </item><item>
    <title>LED Glasses </title>
    <link>https://circuitpython.org/board/adafruit_led_glasses_nrf52840/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_led_glasses_nrf52840.jpg 300w,
               /assets/images/boards/large/adafruit_led_glasses_nrf52840.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_led_glasses_nrf52840.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This board is designed to be a thin, bluetooth-enabled driver board for our <a href="https://www.adafruit.com/product/5210">Adafruit LED Glasses</a> RGB LED matrix. That said, it’s a perfectly good stand-alone development board for the Nordic nRF52840 chipset, with a very slim design, optional LiPo battery support, a few sensors, and a Stemma QT port for adding other devices or sensors with I2C plug-and-play.</p>

<p>The driver <em>looks</em> a little like a Feather but it does not have any breakout pins to keep it very compact. If you need access to GPIO pins, we recommend an <a href="https://www.adafruit.com/product/4481">nRF52840 ItsyBitsy</a>, <a href="https://www.adafruit.com/product/4062">nRF52840 Feather</a> or <a href="https://www.adafruit.com/product/4516">Feather Sense</a>.</p>

<p>In exchange for GPIO outputs, we added some sensors on instead: each board <a href="https://www.adafruit.com/product/2809">comes with a LIS3DH triple-axis accelerometer</a> that can be used for motion and orientation sensing, <a href="https://www.adafruit.com/product/3492">and a PDM digital microphone</a> for audio sensing. To add more sensors or connect to the LED Glasses front panel, there’s a <a href="https://www.adafruit.com/category/1018">STEMMA QT connector for plug-and-play I2C support</a>.</p>

<p>Unlike our Itsy/Feather boards, this driver also comes with a proper on/off switch which will cut power to the microcontroller and external sensors. There’s optional LiPo charge support because we think that many folks will want to power this board with AAA or coin cell batteries. If you’d like to enable LiPo charging, short the jumper on the back and then make sure to only use 4.2 V/3.7 V rechargeable batteries in the battery port.</p>

<p>The nRF52840 is a lovely Bluetooth LE microcontroller, with good support in both Arduino and CircuitPython. It feathers a Cortex M4 processor with 1 MB of FLASH and 256 KB of SRAM. Best of all, it’s got that native USB! Finally, no need for a separate USB serial chip like CP2104 or FT232. Serial is handled as a USB CDC descriptor, and the chip can act like a keyboard, mouse, MIDI device or even disk drive. <a href="https://github.com/adafruit/Adafruit_TinyUSB_Arduino">This chip has TinyUSB support</a> - that means you can use it with Arduino as a native USB device and act as UART (CDC), HID, Mass Storage, MIDI and more!</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64 MHz</li>
  <li>1 MB flash and 256 KB SRAM</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li>FCC/IC/TELEC certified module with up to +8 dBm output power</li>
  <li>2 MB external QSPI flash for CircuitPython file storage</li>
  <li>Built in LIS3DH accelerometer and PDM microphone</li>
  <li>Red LED for general purpose blinking, plus a tiny NeoPixel for colorful feedback</li>
  <li><a href="https://www.adafruit.com/category/1018">STEMMA QT connector for plug-and-play I2C support</a>.</li>
  <li>JST PH 2-pin battery port with optional LiPoly charger</li>
  <li>4 mounting holes/slots</li>
  <li>Reset button and User button</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE</li>
</ul>

<p>For developers, we pre-programed the chip with our UF2 bootloader, which can use either command line UART programming with nrfutil (we use this for Arduino) or drag-n-drop mass storage, for CircuitPython installation and also because mass-storage-drive bootloaders make updating firmware so easy. Want to program the chip directly? You can use our command line tools with your favorite editor and toolchain. If you want to use an SWD programmer/debugger (for even more advanced usage), we have broken out the SWD pads for easy soldering.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5217">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_led_glasses_nrf52840/</guid>
  </item><item>
    <title>MacroPad RP2040</title>
    <link>https://circuitpython.org/board/adafruit_macropad_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_macropad_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_macropad_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_macropad_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Strap yourself in, we’re launching in T-minus 10 seconds…Destination? A new Class M planet called MACROPAD! M here, stands for Microcontroller because this 3x4 keyboard controller features the newest technology from the Raspberry Pi sector: say hello to the RP2040. It’s speedy little microcontroller with lots of GPIO pins and a 64 times more RAM than the Apollo Guidance Computer. We added 8 MB of flash memory for plenty of storage.</p>

<p>Get ready to upgrade your desk’s mission control station with a CircuitPython or Arduino powered Macropad - complete with 12 buttons, OLED display, speaker and rotary encoder. Customize it for your spacecraft to help guide you through the great reaches of the unknown. (Or just have it type out your favorite emojis.)</p>

<p>Each of the 12 sockets can accept a Cherry MX-compatible key switch. No soldering required, just snap it in! Use any key switch you like - but we recommend ones with slots that will allow the matching twelve NeoPixels underneath to shine through.</p>

<p>This space-ship is also fitted with a 128x64 monochome OLED for a crisp heads-up display that can be used in Arduino or CircuitPython to display keymaps, stats, computer performance, etc. There’s also a rotary encoder with push-button soldered in. Twist and turn it or push to change volume or monitor brightness or scroll: whatever you like! A tiny speaker can give audio feedback or play fun bleepy tunes.</p>

<p>Want to add more hardware? No worries - <a href="https://www.adafruit.com/category/1018">a STEMMA QT port on the side lets you connect any I2C add-on peripherals from the massive STEMMA QT / Qwiic family of plug in boards</a>.</p>

<p><strong>Please note, the RP2040 chip does not currently have QMK support</strong> - this macropad is designed to be programmed in Arduino or CircuitPython! If QMK eventually does add RP2040 as a supported chipset (no ETA and no plans that we know of), we’ll update this page.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>Raspberry Pi RP2040 Chip + 8MB Flash memory</strong> - Dual core Cortex M0+ at ~130MHz with 264 KB or RAM. Runs CircuitPython, Arduino or MicroPython with ease and lots of space for development code and files</li>
  <li><strong>USB C Connector for Power/Data</strong> - of course this can act as an HID device but also can be MIDI, UART, etc.</li>
  <li><strong>3x4 Mechanical key switch sockets</strong> - accepts any Cherry MX-compatible switches. Individually tied to GPIO pins (not matrix wired)</li>
  <li><strong>One NeoPixel RGB LED per switch</strong>, on north side</li>
  <li><strong>Rotary encoder</strong>, 20 detents per rotation, with push-switch on GPIO pin. Push switch is also used for entering bootloader mode when held down on power-up or reset.</li>
  <li><strong>128x64 SH1106 Monochrome OLED display</strong> - On high speed hardware SPI port for quick updates</li>
  <li><strong>8 mm Speaker/Buzzer</strong> - With Class D amplifier and RC filter, can be used to make simple beeps and sounds effects.</li>
  <li><strong>STEMMA QT Connector</strong> - Allows adding any I2C sensors/displays/devices with plug-and-play cables.</li>
  <li><strong>Reset button -</strong> On the side, for quick restarting of code</li>
  <li><strong>Four M3 mounting bosses</strong> - Make custom enclosures easily</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5128">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 04 Jun 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_macropad_rp2040/</guid>
  </item><item>
    <title>MagTag - 2.9" Grayscale E-Ink WiFi Display</title>
    <link>https://circuitpython.org/board/adafruit_magtag_2.9_grayscale/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_magtag_2.9_grayscale.jpg 300w,
               /assets/images/boards/large/adafruit_magtag_2.9_grayscale.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_magtag_2.9_grayscale.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Adafruit MagTag combines the new ESP32-S2 wireless module and a 2.9” grayscale E-Ink display to make a low-power IoT display that can show data on its screen even when power is removed! The ESP32-S2 is great because it builds on the years of code and support for the ESP32 and also adds native USB support so you can use this board with Arduino <em>or</em> CircuitPython!</p>

<p>We designed this board to be low-power friendly - with a spot for a 350 or 420 mAh battery and built in battery charging over USB C. During deep sleep, with the NeoPixels and speaker amplifier disabled, we measured 250uA power draw so you can run for a few weeks between charges.</p>

<p>And of course, the Mag in MagTag stands for <em>magnetic</em>. <a href="https://www.adafruit.com/product/4631">We have four M3 standoffs that will work perfectly with these mini magnet feet</a>. (Originally they’re designed for RGB Matrices but they’ll do an excellent job here as well). Screw on the feet and you can attach this display to a metallic shelf, fridge, or bench.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>WROVER module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 MB of PSRAM - you can have huge data buffers</li>
  <li><strong>2.9” grayscale display with 296x128 pixels</strong>. Each pixel can be white, light gray, dark gray or black. Compared to ‘tri-color’ displays with a red pigment, this display takes a lot less time to update, only about a second instead of 15 seconds!</li>
  <li><strong>USB C</strong> power and data connector</li>
  <li>4 <strong>RGB side-emitting NeoPixels</strong> so you can light up the display with any color or pattern</li>
  <li>4 <strong>buttons</strong> can be used to wake up the ESP32 from deep-sleep, or select different modes</li>
  <li><strong>Triple-axis accelerometer</strong> (LIS3DH) can be used to detect orientation of the display</li>
  <li><strong>Speaker/Buzzer</strong> with mini class D amplifier on DAC output A0 can play tones or lo-fi audio clips.</li>
  <li>Front facing <strong>light sensor</strong></li>
  <li><strong>STEMMA QT</strong> port for <a href="https://www.adafruit.com/stemma">attaching all sorts of I2C devices</a></li>
  <li>2 <strong>STEMMA 3 pin JST</strong> connectors for attaching <a href="https://www.adafruit.com/product/3919">NeoPixels</a>, <a href="https://www.adafruit.com/product/3885">speakers</a>, <a href="https://www.adafruit.com/product/4326">servos</a> or <a href="https://www.adafruit.com/product/4409">relays</a>.</li>
  <li><strong>On/Off switch</strong></li>
  <li><strong>Boot</strong> and <strong>Reset buttons</strong> for re-programming</li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4800">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 09 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_magtag_2.9_grayscale/</guid>
  </item><item>
    <title>Metro ESP32-S2</title>
    <link>https://circuitpython.org/board/adafruit_metro_esp32s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_metro_esp32s2.jpg 300w,
               /assets/images/boards/large/adafruit_metro_esp32s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_metro_esp32s2.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s Metro shaped and has an ESP32-S2 WiFi module? What has a STEMMA QT connector for I2C devices, and a Lipoly charger circuit? What’s finishing up testing and nearly ready for fabrication? That’s right - its the new Adafruit Metro ESP32-S2! With native USB and a load of PSRAM this board is perfect for use with CircuitPython or Arduino, to add low-cost WiFi while keeping shield-compatibility.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2 240 MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>WROVER module</strong> has FCC/CE certification and comes with 4 MB of Flash and 2 MB of PSRAM - you can have huge data buffers</li>
  <li><strong>Lotsa power options</strong> - 6-12 VDC barrel jack or USB-C or Lipoly battery</li>
  <li><strong>Built in battery charging</strong> when powered over DC or USB</li>
  <li>UNO-shape so shields can plug in</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug pins</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>JTAG pads</strong> for advanced debugging access.</li>
  <li><strong>On/Off switch</strong></li>
  <li><strong>STEMMA QT</strong> connector for I2C devices</li>
  <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong></li>
  <li>Works with Arduino or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4775">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 02 Oct 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_metro_esp32s2/</guid>
  </item><item>
    <title>NeoKey Trinkey - SAMD21</title>
    <link>https://circuitpython.org/board/adafruit_neokey_trinkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_neokey_trinkey_m0.jpg 300w,
               /assets/images/boards/large/adafruit_neokey_trinkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_neokey_trinkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit Trinket, half mechanical keeb<em>…</em>it’s <strong>NeoKey Trinkey</strong>, the circuit board with a Trinket M0 heart, a NeoPixel glow, and a Cherry MX-compatible. We were inspired by single-key macro pads we’ve seen. So we thought, hey what if we made something like that that plugs right into your computer’s USB port, with a fully programmable color NeoPixel? And this is what we came up with!</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an ATSAMD21 microcontroller on board with just enough circuitry to keep it happy. One pin of the microcontroller connects to a Cherry MX-compatible switch. Another connects to a NeoPixel LED. The third pin can be used as a capacitive touch input. A reset button lets you enter bootloader mode if necessary. That’s it!</p>

<p>The SAMD21 can run CircuitPython or Arduino very nicely - with existing NeoPixel and our FreeTouch libraries for the capacitive touch input. Over the USB connection you can have serial, MIDI or HID connectivity. The NeoKey Trinkey is perfect for simple projects that can use a few user inputs and colorful output. Maybe you’ll set it up as a macro-controller, or a password-enterer, or an Escape key for your MacBook.</p>

<p><strong>Please note this board DOES NOT come with a key soldered in - we expect folks to pick their favorite MX-compatible key switch and key cap! Two solder points and you’re done.</strong></p>

<p>We think it’s just an adorable little board, small and durable and inexpensive enough that it could be a first microcontroller board, or inspiration for advanced developers to make something simple and fun.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ATSAMD21E18 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in <strong>Arduino or CircuitPython</strong> as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Single reverse-mount RGB NeoPixel LED</li>
  <li>1 Capacitive Touch pad</li>
  <li>Cherry-MX compatible footprint can be used by nearly any mechanical switch. Note we only have a center-nub hole. If your switch has two mini side-nubs they need to be clipped off.</li>
  <li>Reset switch for starting your project code over or entering bootloader mode</li>
  <li>Cute &amp; keychain-friendly!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5020">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 14 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_neokey_trinkey_m0/</guid>
  </item><item>
    <title>Proximity Trinkey - SAMD21</title>
    <link>https://circuitpython.org/board/adafruit_proxlight_trinkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_proxlight_trinkey_m0.jpg 300w,
               /assets/images/boards/large/adafruit_proxlight_trinkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_proxlight_trinkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half <a href="https://www.adafruit.com/product/3500">Adafruit Trinket M0</a>, half <a href="https://www.adafruit.com/product/3595">APDS9960 breakout</a><em>…</em>it’s <strong>Proximity Trinkey</strong>, the circuit board with a Trinket M0 heart, APDS9960 Proximity, Light, RGB, and Gesture Sensor, and two RGB NeoPixels for a customizable glow. We wanted to make it super-easy to add one of our most popular combination-sensors to any computer with a USB port and this one is ready to go in an instant.</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an ATSAMD21 microcontroller on board with just enough circuitry to keep it happy. One pin of the microcontroller connects to the two NeoPixel LEDs. Two other pins are used as capacitive touch inputs on the end - if you look carefully you can see the slotted end has left and right touch pads. A reset button lets you enter bootloader mode if necessary. That’s it!</p>

<p>The SAMD21 can run CircuitPython or Arduino very nicely - both have existing APDS9960, NeoPixel and our FreeTouch (capacitive touch) libraries. Over the USB connection, you can have serial, MIDI, or HID connectivity. The Proximity Trinkey is perfect for simple projects that want to use motion, light or color sensing as an input to make fun and intuitive user experiences.</p>

<p>The star of this Trinkey is the APDS9960 from Avago Technologies, which has a few different capabilities thanks to integrated IR LED, photodiodes, and RGB sensing:</p>

<ul>
  <li><strong>Proximity sensing</strong> up to about 6” away by bouncing IR light off an object</li>
  <li><strong>RGB color sensing</strong> can detect color when light refects off of an object - good for bright colorful items like LEGO bricks</li>
  <li><strong>Ambient light sensing</strong> - how dark or bright is it in the room?</li>
  <li><strong>Basic gesture sensing</strong> using 4 cardinal locations of photodiodes - this sensor is a little tough to use but it does work with practice</li>
  <li>Configurable interrupt pin that can fire when a certain proximity threshold is broken, or when a color sensor breaks a certain threshold.</li>
</ul>

<p>We think it’s just an adorable little board, small and durable and inexpensive enough that it could be a first microcontroller board or inspiration for advanced developers to make something simple and fun.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ATSAMD21E18 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256 KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>2 RGB NeoPixel LEDs</li>
  <li>2 Capacitive Touchpads</li>
  <li>APDS9960 Light/Color/Proximity/Gesture sensor</li>
  <li>Reset switch for starting your project code over or entering bootloader mode</li>
  <li>Slim and cute, keychain-friendly!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5022">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 14 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_proxlight_trinkey_m0/</guid>
  </item><item>
    <title>Trinkey QT2040</title>
    <link>https://circuitpython.org/board/adafruit_qt2040_trinkey/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qt2040_trinkey.jpg 300w,
               /assets/images/boards/large/adafruit_qt2040_trinkey.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qt2040_trinkey.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit QT Py, and a lotta RP2040<em>…</em>it’s <strong>Trinkey QT2040</strong>, the circuit board with an RP2040 heart and Stemma QT legs. Folks are loving the <a href="https://www.adafruit.com/product/4900">QT Py 2040</a> we made, but maybe you want something plug-and-play. So we thought, hey what if we made something like that plugs right into your computer’s USB port? And this is what we came up with!</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an RP2040 microcontroller on board with just enough circuitry to keep it happy. There’s an RGB NeoPixel, a reset and bootloader or user button and a STEMMA QT Port on the end. That’s it!</p>

<p>With the body of the board being 1.0” x 0.7” and four mounting holes, you can attach just about any of our QT boards right on (some are a little larger so just check that has the holes in the same locations). <a href="https://www.adafruit.com/product/3658">Use M2.5 sized standoffs and screws</a> to do so, you could use 2 diagonal at a minimum. Then use a <a href="https://www.adafruit.com/product/4399">shorty QT cable</a> and you’ve got a custom sensor Trinkey for any sensor purpose.</p>

<p>The board comes with 8 MB of QSPI flash memory so you can put <em>all</em> of our CircuitPython drivers on the disk!</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5056">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qt2040_trinkey/</guid>
  </item><item>
    <title>Adafruit QT Py ESP32 Pico</title>
    <link>https://circuitpython.org/board/adafruit_qtpy_esp32_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_esp32_pico.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_esp32_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_esp32_pico.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This dev board is like when you’re watching a super-hero movie and the protagonist shows up in a totally amazing costume in the third act and you’re like ‘OMG! That’s the hero and they’re here to kick some serious butt!” but in this case its a microcontroller.</p>

<p>This QT Py board is a thumbnail-sized PCB that features the <strong>ESP32 Pico V3 02</strong>, an all-in-one chip that has an <strong>ESP32 chip with dual-core 240MHz Tensilica processor</strong>, <strong>WiFi</strong> and <strong>Bluetooth classic + BLE</strong>, adds a bunch of required passives and oscillator, <strong>8 MB of Flash memory</strong> and <strong>2 MB of PSRAM</strong>. We add a USB to serial converter chip, some more passives, an antenna, USB C, buttons, NeoPixel and QT connector to outfit this super-hero chip for any task you want to throw it at.</p>

<p>At the core of ESP32-PICO-V3-02 is the ESP32 (ECO V3) chip, which is a single 2.4 GHz Wi-Fi and Bluetooth combo chip designed with TSMC’s 40 nm low-power technology. ESP32-PICO-V3-02 integrates all peripheral components seamlessly, including a crystal oscillator, flash, PSRAM, filter capacitors, and RF matching links in one single package. This makes it perfect for stuffing into such a small space as the QT Py.</p>

<p><strong>Please note</strong> the QT Py ESP32 Pico does not have native USB support - instead there’s a USB to serial converter chip. This means it <em>cannot</em> act like a USB keyboard or mouse - but it does have BLE and BT classic so you could wireless.</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurement Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible <a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt">STEMMA QT</a> connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light. <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape are <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>a reset button</strong> (great for restarting your program or entering the bootloader), and a button on GPIO 0 for entering the ROM bootloader or for user input</p>

<p>Runs Arduino like a dream, or use the ESP IDF for more control over your projects.</p>

<ul>
  <li>Same size, form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>USB Type C connector</strong> - <a href="https://www.adafruit.com/product/4299">If you have only Micro B cables, this adapter will come in handy</a>!</li>
  <li><strong>ESP32 V2 03 Dual Core 240MHz Xtensa processor</strong> - the ESP32 you know and love, with the latest engineering fixes. Massive user base and thousands of existing projects and libraries to use.</li>
  <li>WiFi, Bluetooth LE and Classic for any IoT project usage</li>
  <li><strong>8 MB Flash &amp; 2 MB PSRAM</strong></li>
  <li>USB to Serial converter built in with high speed UART for debugging and uploading.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>MicroPython</strong></li>
  <li><strong>Built-in RGB NeoPixel LED</strong> with power control to reduce quiescent power in deep sleep</li>
  <li>Battery input pads on underside with diode protection for external battery packs up to 6V input</li>
  <li>13 GPIO pins:
    <ul>
      <li>11 on breakout pads, 2 more on QT connector</li>
      <li>10 x 12-bit analog inputs</li>
      <li>Dual 8-bit analog output DACs on A0/A1</li>
      <li>PWM outputs on any pin</li>
      <li>Two I2C ports, one on the breakout pads, and another with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART in addition to the USB-serial UART</li>
      <li>Hardware SPI on the high speed SPI peripheral pins</li>
      <li>Hardware I2S on any pins</li>
      <li>8 x Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf"><strong>600mA peak output</strong></a></li>
  <li>Light sleep at 4mA, deep sleep at ~70uA</li>
  <li><strong>Reset switch</strong> for starting your project code over, boot 0 button for entering bootloader mode or for user reading</li>
  <li><strong>Really really small</strong>
    <h2 id="purchase">Purchase</h2>
  </li>
  <li><a href="https://www.adafruit.com/product/5395">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qtpy_esp32_pico/</guid>
  </item><item>
    <title>Adafruit QT Py ESP32-C3</title>
    <link>https://circuitpython.org/board/adafruit_qtpy_esp32c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_esp32c3.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_esp32c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_esp32c3.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s life without a little RISC? This miniature dev board is perfect for small projects: it comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port, WiFi, Bluetooth LE, and plenty of FLASH and RAM memory for many IoT projects. What a cutie pie! Or is it… a <strong>QT Py</strong>? This diminutive dev board comes with a RISC-V IoT microcontroller, the <strong>ESP32-C3</strong>!</p>

<p>ESP32-C3 is a low-cost microcontroller from Espressif that supports 2.4 GHz Wi-Fi and Bluetooth® Low Energy (Bluetooth LE). It has built-in USB-to-Serial, but <em>not</em> native USB - it cannot act as a keyboard or disk drive. The chip used here has 4MB of Flash memory, 400 KB of SRAM and can easily handle TLS connections.</p>

<p>The ESP32-C3 integrates a rich set of peripherals, ranging from UART, I2C, I2S, remote control peripheral, LED PWM controller, general DMA controller, TWAI controller, USB Serial/JTAG controller, temperature sensor, and ADC. It also includes SPI, Dual SPI, and Quad SPI interfaces. There is no DAC or native capacitive touch.</p>

<p>There’s a minimum number of pins on this chip, it’s specifically designed to be low cost and for simpler projects than ESP32-Sx or ESP32 classics with their large number of GPIO. Think of it more as an intended replacement to the ESP8266 than to the ESP32!</p>

<p>With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p><strong>Please note:</strong> The C3 uses <strong>RISC V</strong> as a core, not Tensilica, and has Bluetooth LE (not classic!). The BLE core supports BT version 5 including Mesh</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurement Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible <a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt">STEMMA QT</a> connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light. <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape are <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong>, <strong>a reset button</strong> (great for restarting your program or entering the ROM bootloader), and a button on GPIO 9 for entering the ROM bootloader or for user input</p>

<p>Runs <a href="https://github.com/espressif/arduino-esp32">Arduino with Espressif’s ESP32 core</a> and <a href="https://micropython.org/download/esp32c3-usb/">you can also run MicroPython on this chipset</a>.</p>

<ul>
  <li>Same size, form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>USB Type C connector</strong> - <a href="https://www.adafruit.com/product/4299">If you have only Micro B cables, this adapter will come in handy</a>!</li>
  <li><strong>ESP32-C3 32­-bit RISC­-V single­ core processor with 4MB of Flash memory, 400 KB of SRAM</strong></li>
  <li>Built in USB-to-Serial inside the chip, which can also be used for JTAG programming. This peripheral is not native serial, so not for USB HID, MIDI or MSC: it does reduce cost since a separate converter isnt needed</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>MicroPython</strong></li>
  <li><strong>Built-in RGB NeoPixel LED</strong> note that due the small number of GPIO, we could not add a NeoPixel power pin</li>
  <li>Battery input pads on underside with diode protection for external battery packs up to 6V input</li>
  <li>13 GPIO pins:
    <ul>
      <li>11 on breakout pads</li>
      <li>5 x 12-bit analog inputs on A0 thru A3 and SDA pin</li>
      <li>PWM outputs on any pin</li>
      <li>I2C port, on the breakout pads shared with the STEMMA QT plug-n-play connector</li>
      <li>Hardware UART which is also the hardware serial debug port</li>
      <li>Hardware SPI</li>
      <li>Hardware I2S on any pins</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf"><strong>600mA peak output</strong></a></li>
  <li>Light sleep at 500uA<strong>*,*</strong> deep sleep at ~300uA. Lower power deep-sleep is not possible because we don’t have an extra GPIO for disabling the NeoPixel power and we didn’t want to share that with any of the IO pads. An engineering trade-off!</li>
  <li><strong>Reset switch</strong> for starting your project code over, boot 9 button for entering bootloader mode</li>
  <li><strong>Really really small</strong></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5405">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qtpy_esp32c3/</guid>
  </item><item>
    <title>Adafruit QT Py ESP32-S2 (including uFL version)</title>
    <link>https://circuitpython.org/board/adafruit_qtpy_esp32s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_esp32s2.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_esp32s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_esp32s2.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What has your favorite Espressif WiFi microcontroller, comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port, and has lots of Flash and RAM memory for your next IoT project? What will make your next IoT project flyyyyy? What a cutie pie! Or is it… a <strong>QT Py</strong>? This diminutive dev board comes with one of our new favorite lil chips, the <strong>ESP32-S2</strong>!</p>

<p>The ESP32-S2 is a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has <strong>built-in native USB</strong> as well as some other interesting new technologies like Time of Flight distance measurements. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the <a href="https://www.adafruit.com/category/342">Internet of Things (IoT)</a>, <a href="https://www.adafruit.com/category/65">wearable electronics</a>, and smart homes.</p>

<p><strong>Please note</strong> the QT Py ESP32-S2 has a single-core 240 MHz chip, so it won’t be as fast as ESP32’s with dual-core. Also, there is no Bluetooth support. However, we are super excited about the ESP32-S2’s native USB which unlocks a lot of capabilities for advanced interfacing! This ESP32-S2 mini-module we are using on the QT Py comes with 4 MB flash and 2 MB PSRAM so you can buffer massive JSON files for parsing!</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurement Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible <a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt">STEMMA QT</a> connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light. <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape are <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it flat to a PCB. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>a reset button</strong> (great for restarting your program or entering the bootloader) and a button on GPIO 0 for entering the ROM bootloader or for user input.</p>

<p>Runs Arduino like a dream, and CircuitPython projects are fantastically fun.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Same size, form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>USB-C connector</strong> - <a href="https://www.adafruit.com/product/4299">If you have only Micro B cables, this adapter will come in handy</a>!</li>
  <li><strong>ESP32-S2 240MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>4 MB Flash &amp; 2 MB PSRAM</strong></li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li><strong>Built-in RGB NeoPixel LED</strong> with power control to reduce quiescent power in deep sleep</li>
  <li>Battery input pads on underside with diode protection for external battery packs up to 6V input</li>
  <li>13 GPIO pins:
    <ul>
      <li>11 on breakout pads, 2 more on QT connector</li>
      <li>10 12-bit analog inputs (SPI high speed pads do not have analog inputs)</li>
      <li>8-bit analog output DAC</li>
      <li>PWM outputs on any pin</li>
      <li>2 I2C ports, one on the breakout pads, and another with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART</li>
      <li>Hardware SPI on the high speed SPI peripheral pins</li>
      <li>Hardware I2S on any pins</li>
      <li>5 Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3 V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf"><strong>600 mA peak output</strong></a></li>
  <li>Deep sleep at 100 uA</li>
  <li><strong>Reset switch</strong> for starting your project code over, boot 0 button for entering bootloader mode</li>
  <li><strong>Really really small</strong></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5325">Adafruit</a> built-in Wifi antenna</li>
  <li><a href="https://www.adafruit.com/product/5348">Adafruit</a> uFL connector for external antenna</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 29 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qtpy_esp32s2/</guid>
  </item><item>
    <title>Adafruit QT Py ESP32-S3 No PSRAM</title>
    <link>https://circuitpython.org/board/adafruit_qtpy_esp32s3_nopsram/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_esp32s3_nopsram.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_esp32s3_nopsram.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_esp32s3_nopsram.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Coming Soon!</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?v=Hq5BsjkMBo0">YouTube</a></li>
  <li><a href="https://www.youtube.com/watch?v=py_uFAtV__s">YouTube</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 14 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qtpy_esp32s3_nopsram/</guid>
  </item><item>
    <title>QT Py RP2040</title>
    <link>https://circuitpython.org/board/adafruit_qtpy_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with one of our new favorite chip, the RP2040. It’s been made famous in the new <a href="https://www.adafruit.com/pico">Raspberry Pi Pico</a> <em>and</em> our <a href="http://www.adafruit.com/product/4884">Feather RP2040</a> and <a href="http://www.adafruit.com/product/4888">ItsyBitsy RP2040</a>, but what if we wanted something really <em>smol?</em></p>

<p>A new chip means a new QT Py, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the cuuutie QT Py Treatment”, and so we did! This QT Py features the RP2040, <a href="https://www.adafruit.com/category/4600">and all niceties you know and love about the original QT Py</a>.</p>

<p>The star of the QT Py is <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>. Having this connector means you don’t need to do any soldering to get started.</p>

<p>What can you pop into the QT port? How about <a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible <a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt">STEMMA QT</a> connectors for the I2C bus so you don’t even need to solder. Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, unofficial (but really good) <a href="https://github.com/earlephilhower/arduino-pico">Arduino support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="/downloads">CircuitPython port</a>. We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it to a PCB with a cut out to allow the bottom components some breathing room. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with a controllable power pin to allow for ultra-low-power usage), <strong>and both boot-mode and reset buttons</strong> (great for restarting your program or entering the bootloader). This QT Py comes with loose 0.1” headers you can solder in for breadboard use.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board there is 4MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 3 MB remaining for code, files, images, fonts, etc.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Same size, form-factor, and pin-out as <a href="https://www.adafruit.com/product/4600">our SAMD-based QT Py</a></li>
  <li><strong>USB-C connector</strong> - <a href="https://www.adafruit.com/product/4299">If you have only Micro B cables, this adapter will come in handy</a>!</li>
  <li><strong>RP2040 32-bit Cortex M0+</strong> dual-core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li><strong>Built-in RGB NeoPixel LED</strong></li>
  <li>13 GPIO pins (11 breakout pads and two QT pads):
    <ul>
      <li>4 12-bit ADCs (one more than Pico)</li>
      <li>2 I2C ports (one on the QT connector, one on the breakout pads)</li>
      <li>SPI and UART peripherals, in standard QT Py locations,</li>
      <li>PWM outputs on every IO pin - for servos, LEDs, etc</li>
      <li>There are 6 GPIO in consecutive order for PIO compatibility</li>
    </ul>
  </li>
  <li>3.3 V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf"><strong>600 mA peak output</strong></a></li>
  <li><strong>Both Reset button and Bootloader select buttons</strong> for quick restarts (no unplugging-replugging to relaunch code)</li>
  <li><strong>Really really small</strong></li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader</strong>. What that means is when you want to program new firmware, you can hold down the BOOT button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well, instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create <em>custom hardware logic and data processing blocks</em> that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. <a href="https://github.com/raspberrypi/pico-examples/tree/master/pio">Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA</a>! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4900">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_qtpy_rp2040/</guid>
  </item><item>
    <title>Rotary Trinkey - SAMD21</title>
    <link>https://circuitpython.org/board/adafruit_rotary_trinkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_rotary_trinkey_m0.jpg 300w,
               /assets/images/boards/large/adafruit_rotary_trinkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_rotary_trinkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit Trinket, half rotary encoder<em>…</em>it’s <strong>Rotary Trinkey</strong>, the circuit board with a Trinket M0 heart, a NeoPixel glow, and a rotary encoder body. <a href="https://twitter.com/todbot/status/1365107469345648643">We were inspired by this project from TodBot where a rotary encoder was soldered onto a QT Py</a>. So we thought, hey what if we made something like that that plugs right into your computer’s USB port, with a fully programmable color NeoPixel? And this is what we came up with!</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an ATSAMD21 microcontroller on board with just enough circuitry to keep it happy. Three pins of the microcontroller connects to a rotary encoder with built-in push switch. Another connects to a NeoPixel LED. Finally, one pin can be used as a capacitive touch input. A reset button lets you enter bootloader mode if necessary. That’s it!</p>

<p>Rotary encoders are soooo much fun! Twist em this way, then twist them that way. Unlike potentiometers, they go all the way around, and often have little detents for tactile feedback. But, if you just want to add one to your computer, you know its a real pain. This board is designed to make it very easy.</p>

<p>The SAMD21 can run CircuitPython or Arduino very nicely - with existing Rotary, NeoPixel and our FreeTouch libraries for the capacitive touch input. Over the USB connection you can have serial, MIDI or HID connectivity. The Rotary Trinkey is perfect for simple projects that use a rotating user input and underlit colorful output. Maybe you’ll set it up as a volume knob, scroll wheel, or zoom macro tool - whatever you like!</p>

<p><strong>Please note this board DOES NOT come with a rotary encoder soldered in - we expect folks to pick their favorite rotary encoder and knob! Five solder points and you’re done.</strong></p>

<p>We think it’s just an adorable little board, small and durable and inexpensive enough that it could be a first microcontroller board or inspiration for advanced developers to make something simple and fun.</p>

<ul>
  <li>ATSAMD21E18 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in <strong>Arduino or CircuitPython</strong> as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Single under-lighting RGB NeoPixel LED</li>
  <li>One Capacitive Touch pad</li>
  <li>Standard ‘5-pin’ rotary encoder footprint can be used with any “PEC11” or “PEC12” compatible rotary encoder.</li>
  <li>Cute &amp; keychain-friendly!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4964">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_rotary_trinkey_m0/</guid>
  </item><item>
    <title>Slide Trinkey - SAMD21</title>
    <link>https://circuitpython.org/board/adafruit_slide_trinkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_slide_trinkey_m0.jpg 300w,
               /assets/images/boards/large/adafruit_slide_trinkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_slide_trinkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit Trinket, half mini slide pot<em>…</em> it’s <strong>Slider Trinkey</strong>, the circuit board with a Trinket M0 heart, NeoPixel glow, and a 35mm long 10KΩ slide potentiometer.</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an ATSAMD21 microcontroller on board with just enough circuitry to keep it happy. One pin of the microcontroller connects to the middle of the slide potentiometer as an analog input. Another connects to two NeoPixel LEDs. The third pin can be used as a capacitive touch input. A reset button lets you enter bootloader mode if necessary. That’s it!</p>

<p>The SAMD21 can run CircuitPython or Arduino very nicely - with existing NeoPixel and our FreeTouch libraries for the capacitive touch input. Over the USB connection, you can have serial, MIDI, or HID connectivity. The Slider Trinkey is perfect for simple projects that can use a few user inputs and colorful output. Maybe you’ll set it up as a monitor brightness adjuster, or volume control, or color picker.</p>

<p><strong>Please note this board DOES come with a pre-soldered slide pot</strong> (there’s really only one that fits and we happen to stock it) Since we use a PCB with a USB A shape, its possible to accidentally yank the board out if you push the potentiometer all way way out and then <em>keep pushing out</em>. So be kind and careful with your Slider Trinkey! It isnt meant for yanking.</p>

<p>We think it’s just an adorable little board, small and durable and inexpensive enough that it could be a first microcontroller board, or inspiration for advanced developers to make something simple and fun.</p>

<ul>
  <li>ATSAMD21E18 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in <strong>Arduino or CircuitPython</strong> as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Two reverse-mount RGB NeoPixel LEDs</li>
  <li>One Capacitive Touchpad</li>
  <li>One 35mm slide potentiometer with nubbin</li>
  <li>Reset switch for starting your project code over or entering bootloader mode</li>
  <li>Cute &amp; keychain-friendly!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5021">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 14 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_slide_trinkey_m0/</guid>
  </item><item>
    <title>ESP-C3-32S (2M)</title>
    <link>https://circuitpython.org/board/ai_thinker_esp32-c3s-2m/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ai_thinker_esp32-c3s.jpg 300w,
               /assets/images/boards/large/ai_thinker_esp32-c3s.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ai_thinker_esp32-c3s.jpg" alt="Image of Board" loading="lazy">
<p>By Ai-Thinker</p> <p>This is an entry-level development board based on Espressif ESP32-C3 SoC, which is equipped with a RISC-V 32-bit single-core processor, operating frequency up to 160 MHz, supports secondary development without using other microcontrollers or processors. The ESP32-C3 is an highly integrated low power Wi-Fi and Bluetooth system-level chip (SoC), designed for various applications such as internet of things (IoT), mobile devices, wearable electronics, smart home, etc.</p>

<h3 id="features">Features</h3>

<ul>
  <li>Onboard ESP-C3-32S module that comes with a PCB antenna</li>
  <li>Onboard CH340, USB to UART converter</li>
  <li>RGB 3-in-1 LED, convenient for secondary development</li>
  <li>USB port for power input, firmware programming, or UART debugging</li>
  <li>2x15pin extension headers, breakout all the I/O pins of the module</li>
  <li>2x keys, used as reset or user-defined</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>Complete Wi-Fi 802.11b/g/n, 1T1R mode data rate up to 150 Mbps</li>
  <li>Support BLE5.0 and rate support: 125 Kbps, 500 Kbps, 1 Mbps, 2 Mbps</li>
  <li>Onboard ESP32-C3 chip, 32-bit RISC-V single-core processor, supports a clock frequency of up to 160 MHz, with 400 KB SRAM, 384 KB ROM, 8KB RTC SRAM</li>
  <li>Support UART/PWM/GPIO/ADC/I2C/I2S interface, temperature sensor, pulse counter</li>
  <li>SMD-38 package</li>
  <li>Integrated Wi-Fi MAC/ BB/RF/PA/LNA/BLE</li>
  <li>Support multiple sleep modes, deep sleep electric current is less than 5 uA</li>
  <li>UART rate up to 5 Mbps</li>
  <li>Support STA/AP/STA+AP mode and mix mode</li>
  <li>Support Smart Config (APP)/AirKiss (WeChat) of Android and IOS One-click network configuration</li>
  <li>Support UART port local upgrade and remote firmware upgrade (FOTA)</li>
  <li>General AT commands can be better understand</li>
  <li>Support secondary development, integrated Linux development environment</li>
  <li>ESP-C3-32S module acquiesce in using the built-in 2 MByte Flash, meanwhile support external Flash version</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003023291446.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 21 Feb 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ai_thinker_esp32-c3s-2m/</guid>
  </item><item>
    <title>ESP-C3-32S</title>
    <link>https://circuitpython.org/board/ai_thinker_esp32-c3s/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ai_thinker_esp32-c3s.jpg 300w,
               /assets/images/boards/large/ai_thinker_esp32-c3s.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ai_thinker_esp32-c3s.jpg" alt="Image of Board" loading="lazy">
<p>By Ai-Thinker</p> <p>This is an entry-level development board based on Espressif ESP32-C3 SoC, which is equipped with a RISC-V 32-bit single-core processor, operating frequency up to 160 MHz, supports secondary development without using other microcontrollers or processors. The ESP32-C3 is an highly integrated low power Wi-Fi and Bluetooth system-level chip (SoC), designed for various applications such as internet of things (IoT), mobile devices, wearable electronics, smart home, etc.</p>

<h3 id="features">Features</h3>

<ul>
  <li>Onboard ESP-C3-32S module that comes with a PCB antenna</li>
  <li>Onboard CH340, USB to UART converter</li>
  <li>RGB 3-in-1 LED, convenient for secondary development</li>
  <li>USB port for power input, firmware programming, or UART debugging</li>
  <li>2x15 pin extension headers, breakout all the I/O pins of the module</li>
  <li>2x keys, used as reset or user-defined</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>Complete Wi-Fi 802.11b/g/n, 1T1R mode data rate up to 150 Mbps</li>
  <li>Support BLE5.0 and rate support: 125 Kbps, 500 Kbps, 1 Mbps, 2 Mbps</li>
  <li>Onboard ESP32-C3 chip, 32-bit RISC-V single-core processor, supports a clock frequency of up to 160 MHz, with 400 KB SRAM, 384 KB ROM, 8KB RTC SRAM</li>
  <li>Support UART/PWM/GPIO/ADC/I2C/I2S interface, temperature sensor, pulse counter</li>
  <li>SMD-38 package</li>
  <li>Integrated Wi-Fi MAC/ BB/RF/PA/LNA/BLE</li>
  <li>Support multiple sleep modes, deep sleep electric current is less than 5 uA</li>
  <li>UART rate up to 5 Mbps</li>
  <li>Support STA/AP/STA+AP mode and mix mode</li>
  <li>Support Smart Config (APP)/AirKiss (WeChat) of Android and IOS One-click network configuration</li>
  <li>Support UART port local upgrade and remote firmware upgrade (FOTA)</li>
  <li>General AT commands can be better understand</li>
  <li>Support secondary development, integrated Linux development environment</li>
  <li>ESP-C3-32S module acquiesce in using the built-in 2 MByte Flash, meanwhile support external Flash version</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003023291446.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ai_thinker_esp32-c3s/</guid>
  </item><item>
    <title>NodeMCU ESP-12K</title>
    <link>https://circuitpython.org/board/ai_thinker_esp_12k_nodemcu/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ai_thinker_esp_12k_nodemcu.jpg 300w,
               /assets/images/boards/large/ai_thinker_esp_12k_nodemcu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ai_thinker_esp_12k_nodemcu.jpg" alt="Image of Board" loading="lazy">
<p>By Ai-Thinker</p> <p>This board is a version of the NodeMCU board with an ESP-12K (ESP32-S2) module on it. The board has a micro USB connection with which it can be programmed and/or powered.</p>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>Supply voltage:
    <ul>
      <li>Micro USB: 5 V DC</li>
      <li>5V pin: 5 V DC</li>
      <li>3V3 pin: 3.3 V DC</li>
    </ul>
  </li>
  <li>GPIO voltage: 3.3 V</li>
  <li>Chip: ESP32-S2 ESP-12K
    <ul>
      <li>Flash memory: 4 MB</li>
      <li>PSRAM: 8 MB</li>
      <li>SRAM: 320 KB</li>
      <li>Built-in Wi-Fi</li>
    </ul>
  </li>
  <li>USB to serial converter: CH340C</li>
</ul>

<p>The micro USB connector on this board is wired through a CH430C USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">USB-C</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire IO19/IO20 to D- and D+ pads.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tinytronics.nl/shop/en/development-boards/microcontroller-boards/with-wi-fi/ai-thinker-nodemcu-32-s2-esp-12k">Tinytronics</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 24 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ai_thinker_esp_12k_nodemcu/</guid>
  </item><item>
    <title>AloriumTech Evo M51</title>
    <link>https://circuitpython.org/board/aloriumtech_evo_m51/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/aloriumtech_evo_m51.jpg 300w,
               /assets/images/boards/large/aloriumtech_evo_m51.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/aloriumtech_evo_m51.jpg" alt="Image of Board" loading="lazy">
<p>By Alorium Technology, LLC</p> <p>The Evo M51 is an FPGA-enhanced Feather compatible compute module from Alorium Technology that features a 32-bit SAMD51 microcontroller along with an Intel MAX 10 FPGA.</p>

<p>Designed for use as an embeddable system-on-module, all of the standard Feather I/O are also routed to castellated vias along the edge of the board. There are 34 additional castellated digital I/O connected to the FPGA and accessible via the SAMD51.</p>

<p>Most digital I/O connections are routed through the FPGA to and from the primary and castellated I/O. This provides the opportunity for developers to immediately capture inputs or drive outputs from the FPGA without requiring direct interaction with the SAMD controller.</p>

<p>Evo M51 will support Alorium Technology-supplied pre-built FPGA images that target specific application use cases. In addition, designers will have the option to develop their own custom logic blocks and integrate them into the top-level MAX 10 FPGA design.</p>

<p>Evo was specifically designed to support running CircuitPython. It is also programmable with Arduino just like many other boards based upon the SAMD51.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Atmel SAMD51 32-bit ARM Cortex-M4 Microcontroller</li>
  <li>Intel MAX 10 FPGA</li>
  <li>512 KB FLASH and 192 KB RAM</li>
  <li>2 MB External QSPI FLASH</li>
  <li>6 Analog Inputs</li>
  <li>2 Analog Outputs</li>
  <li>55 Digital I/O
    <ul>
      <li>21 Through-Hole/Castellated</li>
      <li>34 Additional Castellated-Only (3.3 V inputs/ouput)</li>
    </ul>
  </li>
  <li>1 NeoPixel (<code class="language-plaintext highlighter-rouge">D13</code>)</li>
  <li>STEMMA QT (QWIIC Compatible)</li>
  <li>Feather Footprint</li>
  <li>0.9” x 2.2” (23 mm x 56 mm)</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://aloriumtech.com/evom51-quickstart/">Quickstart guide</a></li>
  <li><a href="https://aloriumtech.com/documents/Evo_M51_PinMap.pdf">Pinout</a></li>
  <li><a href="https://aloriumtech.com/documents/Evo_M51_Schematic.pdf">Schematics</a></li>
</ul>

<p>In order to take full advantage of the additional I/O on Evo M51 using CircuitPython, we have created a custom library bundle that can be found on the Alorium Technology GitHub page:</p>

<ul>
  <li><a href="https://github.com/AloriumTechnology/AloriumTech_CircuitPython_EvoM51">Evo M51 CircuitPython Library Bundle</a></li>
  <li>Download the <a href="https://github.com/AloriumTechnology/AloriumTech_CircuitPython_EvoM51/archive/master.zip">.ZIP file</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aloriumtech.com/evom51-buy/">Alorium Technology</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/aloriumtech_evo_m51/</guid>
  </item><item>
    <title>ARAMCON2 Badge</title>
    <link>https://circuitpython.org/board/aramcon2_badge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/aramcon2_badge.jpg 300w,
               /assets/images/boards/large/aramcon2_badge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/aramcon2_badge.jpg" alt="Image of Board" loading="lazy">
<p>By ARAMCON Badge Team</p> <p>nRF52840-Based Smart Badge with Bluetooth, 2.9” ePaper Display, Neopixels, SAO support, and more!</p>

<h2 id="features">Features</h2>

<ul>
  <li>Nordic nRF52840 Cortex M4 Module (E73-2G4M08S1C)</li>
  <li>2.9” e-paper glass display (GDEW029T5)</li>
  <li>I2C accelerometer (LIS2DH12)</li>
  <li>128 MBit Serial Flash (W25Q128JV)</li>
  <li>SAO V1.69BIS connector</li>
  <li>8-Pin extension slot (on the back)</li>
  <li>5 x 6 mm Push buttons</li>
  <li>2 x WS2812B “NeoPixel” addressable RGB LEDs</li>
  <li>1 x Green Indication LED</li>
  <li>Reset button</li>
  <li>Vibration motor</li>
</ul>

<h2 id="purchase">Purchase</h2>

<p>Not available for direct purchase. The badge was given to all attendees of the ARAMCON2 conference.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/aramcon-badge/">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 14 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/aramcon2_badge/</guid>
  </item><item>
    <title>ARAMCON Badge 2019</title>
    <link>https://circuitpython.org/board/aramcon_badge_2019/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/aramcon_badge_2019.jpg 300w,
               /assets/images/boards/large/aramcon_badge_2019.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/aramcon_badge_2019.jpg" alt="Image of Board" loading="lazy">
<p>By ARAMCON Badge Team</p> <p>nRF52840-Based Smart Badge with Bluetooth, Thread Mesh Network, 2.9” ePaper Display, Neopixels, built-in MP3 Sound decoder and more!</p>

<p><strong>Features:</strong></p>
<ul>
  <li>Nordic nRF52840 Cortex M4 Module(E73-2G4M08S1C)</li>
  <li>2.9 inch e-paper glass display(GDEW029T5)</li>
  <li>I²C Accelerometer(LIS2DH12)</li>
  <li>16MBit Serial Flash(GD25Q16C)</li>
  <li>MP3/WMA Audio Codec(VS1003)</li>
  <li>3 x CHERRY MX Keyboard Switches</li>
  <li>4 x NeoPixels</li>
  <li>SAO Connector v1.0</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Not available for direct purchase. The badge was given to all attendees of the ARAMCON 2019 conference.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/aramcon-badge/">Github</a></li>
  <li><a href="https://medium.com/@urish/the-smart-conference-badge-we-almost-failed-shipping-edb2b1ae85b6">Medium</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/aramcon_badge_2019/</guid>
  </item><item>
    <title>MKR WAN 1300</title>
    <link>https://circuitpython.org/board/arduino_mkr1300/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_mkr1300_01.jpg 300w,
               /assets/images/boards/large/arduino_mkr1300_01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_mkr1300_01.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>Arduino MKR WAN 1300 has been designed to offer a practical and cost effective solution for makers seeking to add Lo-Ra connectivity to their projects with minimal previous experience in networking. It is based on the Microchip SAMD21 and a Murata  CMWX1ZZABZ Lo-Ra module.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/mkr-wan-1300">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 Dec 2018 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_mkr1300/</guid>
  </item><item>
    <title>MKR Zero</title>
    <link>https://circuitpython.org/board/arduino_mkrzero/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_mkr_zero.jpg 300w,
               /assets/images/boards/large/arduino_mkr_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_mkr_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>The Arduino MKR ZERO brings you the power of a Zero in the smaller format established by the MKR form factor. The MKR ZERO board acts as a great educational tool for learning about 32-bit application development. The board is powered by Microchip’s SAMD21 MCU, which features a 32-bit ARM Cortex® M0+ core.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/arduino-mkrzero">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_mkrzero/</guid>
  </item><item>
    <title>NANO 33 BLE</title>
    <link>https://circuitpython.org/board/arduino_nano_33_ble/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_nano_33_ble.jpg 300w,
               /assets/images/boards/large/arduino_nano_33_ble.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_nano_33_ble.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>This compact and reliable NANO board is built around the NINA B306 module, based on Nordic nRF 52840 and containing a powerful Cortex M4F. Its architecture, fully compatible with Arduino IDE Online and Offline, has a 9 axis Inertial Measurement Unit (IMU) and a reduced power consumption compared to other same size boards.
This allows the design of wearable devices and movement sensing projects that need to communicate to other devices at a close range. Arduino NANO 33 BLE is also ideal for automation projects thanks to the multiprotocol BT 5.0 radio.</p>

<p>To use this board with CircuitPython you must <a href="https://forums.adafruit.com/viewtopic.php?f=60&amp;t=158279">replace the existing bootloader</a> with the Adafruit UF2 bootloader. You need to restore the original bootloader to use the board again with Arduino.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/nano-33-ble">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 25 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/arduino_nano_33_ble/</guid>
  </item><item>
    <title>NANO 33 IoT</title>
    <link>https://circuitpython.org/board/arduino_nano_33_iot/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_nano_33_iot.jpg 300w,
               /assets/images/boards/large/arduino_nano_33_iot.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_nano_33_iot.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>Arduino NANO 33 IoT board has been designed to offer a practical and cost effective solution for makers seeking to add Wi-Fi connectivity to their projects (using Arduino) with minimal previous experience in networking. Learn how to set up the programming environment and get the hardware up and running, ready for your projects, in minutes.</p>

<h3 id="note-not-all-on-board-hardware-is-supported-by-circuitpython">NOTE: Not all on-board hardware is supported by CircuitPython</h3>

<p>WiFi is not supported. The LSM9DS6 and ATECC chips are supported in CircuitPython by libraries that may use more RAM than is available on the SAMD21.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/nano-33-iot">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_nano_33_iot/</guid>
  </item><item>
    <title>Nano RP2040 Connect</title>
    <link>https://circuitpython.org/board/arduino_nano_rp2040_connect/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_nano_rp2040_connect.jpg 300w,
               /assets/images/boards/large/arduino_nano_rp2040_connect.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_nano_rp2040_connect.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>Meet the first connected RP2040 board. It fits the Arduino Nano form factor, making it a small board with BIG features.</p>

<p>The brain of the board is the Raspberry Pi RP2040 silicon; a dual-core Arm Cortex M0+ running at 133MHz. It has 264KB of SRAM, and the 16MB of flash memory is off-chip to give you extra storage.</p>

<p>But what’s really exciting is the on-board connectivity options. The hugely popular and highly adaptable u-blox NINA-W102 radio module is on there to make this a true IoT champion. This also means you can harness the power of the cloud, with fully Arduino Cloud compatibility.</p>

<p>It’s got on-board, built-in sensors to turn your builds into powerhouse projects, too. Microphone and motion sensing add a depth of possibilities that’s almost impossible to find in a board of this size.</p>

<p>The Arduino Nano RP2040 Connect is the premium choice for RP2040 devices, and the perfect option for upgrading your projects and unlocking the potential of new ones.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/nano-rp2040-connect-with-headers">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 24 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/arduino_nano_rp2040_connect/</guid>
  </item><item>
    <title>Zero</title>
    <link>https://circuitpython.org/board/arduino_zero/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/arduino_zero.jpg 300w,
               /assets/images/boards/large/arduino_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/arduino_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Arduino</p> <p>The Arduino Zero is a simple and powerful 32-bit extension of the platform established by the UNO. The Zero board expands the family by providing increased performance, enabling a variety of project opportunities for devices, and acts as a great educational tool for learning about 32-bit application development.</p>

<p>The Zero applications span from smart IoT devices, wearable technology, high-tech automation, to crazy robotics. The board is powered by Microchip’s SAMD21 MCU, which features a 32-bit ARM Cortex® M0+ core.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/arduino-zero">Arduino</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_zero/</guid>
  </item><item>
    <title>ATMegaZero ESP32-S2</title>
    <link>https://circuitpython.org/board/atmegazero_esp32s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/atmegazero_esp32s2.jpg 300w,
               /assets/images/boards/large/atmegazero_esp32s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/atmegazero_esp32s2.jpg" alt="Image of Board" loading="lazy">
<p>By ATMegaZero</p> <p>** COMING SOON! **
Introducing the new ATMegaZero ESP32-S2</p>

<p><strong>Features:</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>16 MB SPI Flash</li>
  <li>8 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>Raspberry PI Zero form factor</li>
  <li>SD card slot</li>
  <li>OLED Display Connector</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.atmegazero.com">ATMegaZero Official Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/936-atmegazero-esp32-s2">Pre-Order on GroupGets.com</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 19 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/atmegazero_esp32s2/</guid>
  </item><item>
    <title>Bast Pro Mini M0</title>
    <link>https://circuitpython.org/board/bast_pro_mini_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bast_pro_mini_m0.jpg 300w,
               /assets/images/boards/large/bast_pro_mini_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bast_pro_mini_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>The Bast Pro Mini M0 features a powerful SAMD21E chip, an ARM Cortex-M0 based microcontroller with low power consumption and high performance, making it ideal for endless applications.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Microcontroller Arm Cortex-M0 ATSAMD21E18A with 48 MHz</li>
  <li>Flash Memory 256 KB</li>
  <li>SRAM Memory 32 KB</li>
  <li>Operating Voltage 3.5 – 6 V</li>
  <li>12 Digital I/O Pins</li>
  <li>10 PWM Digital I/O Pins</li>
  <li>6 Analog Input Pins</li>
  <li>DC Current per I/O Pin 10 mA</li>
  <li>1 built-in LED (<code class="language-plaintext highlighter-rouge">GPIO13</code>)</li>
  <li>Dimensions: 32 mm x 18 mm</li>
  <li>Weight 3 g</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://github.com/ElectronicCats/Bast-Pro-Mini-M0/tree/master/Examples/CircuitPython">CircuitPython examples</a></li>
  <li><a href="https://github.com/ElectronicCats/Bast-Pro-Mini-M0/blob/master/Hw/Bast-Pro-Mini-M0.pdf">Schematics</a></li>
  <li><a href="https://github.com/ElectronicCats/Bast-Pro-Mini-M0#pinout">Pinout</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://electroniccats.com/store/bast-pro-mini-m0/">Electronic Cats</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bast_pro_mini_m0/</guid>
  </item><item>
    <title>BAST BLE</title>
    <link>https://circuitpython.org/board/bastble/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bastble.jpg 300w,
               /assets/images/boards/large/bastble.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bastble.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>The Bast BLE is the new Feather family member with Bluetooth Low Energy and native USB-C support featuring the nRF52840!<br />
It’s our take on an ‘all-in-one’ Arduino-compatible + Bluetooth Low Energy with built in USB plus battery charging. 
With native USB it’s even ready to join the CircuitPython party.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/bast-ble/">Electronic Cats</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 04 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/bastble/</guid>
  </item><item>
    <title>Vina-D21</title>
    <link>https://circuitpython.org/board/bdmicro_vina_d21/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bdmicro_vina_d21.jpg 300w,
               /assets/images/boards/large/bdmicro_vina_d21.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bdmicro_vina_d21.jpg" alt="Image of Board" loading="lazy">
<p>By BDMICRO, LLC</p> <p>The VINA-D21 is a powerful, robust, pluggable control module designed for modular control applications. Built with all-industrial grade components and features, it is well-suited for a wide variety of automation and control requirements, including harsh environments.</p>

<p>The VINA-D21 Control Module saves time and money by providing a proven, modular design, that enables custom application-specific solutions to move from the drawing board to the finished product quickly.</p>

<p>VINA-D21 enables you to develop your application-specific board independently of the controller section. This simplifies your design, saves CAD time during the design phase, reduces errors that can cost weeks of PCB re-manufacture to correct, and saves debug time during the prototype and testing phases. By starting with VINA-D21, you start from a known-good foundation, reducing complexity and risk.</p>

<p>Incorporate the VINA-D21 in your designs over and over again and multiply your savings. Useful for custom applications, one-off projects, breadboarded prototypes, and even standalone projects. VINA-D21 has all of the common essentials built-in, on-board.</p>

<p>To get you started even more quickly, BDMICRO provides the Autodesk Eagle CAD part for VINA-D21. Getting started is as easy as downloading the part and adding it to your application specific design, allowing you to focus on your custom application’s needs, with all the right connectors, headers, and other circuitry needed for your project solution.</p>

<p>Capable of running standalone, modular piggy back on application-specific boards, or breadboarded, the VINA-D21 is a great choice for your next project.</p>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bdmicro_vina_d21/</guid>
  </item><item>
    <title>VINA-D51</title>
    <link>https://circuitpython.org/board/bdmicro_vina_d51/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bdmicro_vina_d51.jpg 300w,
               /assets/images/boards/large/bdmicro_vina_d51.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bdmicro_vina_d51.jpg" alt="Image of Board" loading="lazy">
<p>By BDMICRO, LLC</p> <p>The VINA-D51 is a powerful, robust, pluggable control module designed for modular control applications, even in harsh environments. Built with all-industrial grade components, latching connectors and features, it is well-suited for a wide variety of automation and control applications.</p>

<ul>
  <li><strong>Performance</strong>: Powerful 32-bit ARM Cortex M4 microcontroller @ 120 MHz, based on the Microchip ATSAMD51N20 with 1 MB of program flash and 256 KB of RAM.</li>
  <li><strong>Industrial grade</strong>: All industrial spec parts and Latch-Lock connectors for reliable operation in demanding applications.</li>
  <li><strong>Connectivitiy</strong>:
    <ul>
      <li>USB interface for connecting to your development PC or Laptop computer for programming.</li>
      <li>provides virtual COM port for CircuitPython console and UART, and mass storage filesystem interface to the 64 MB on-board QSPI flash for programs and data storage.</li>
    </ul>
  </li>
  <li><strong>Control &amp; interfacing</strong>:
    <ul>
      <li>RS485, I2C, WIFI &amp; Expansion: Latching RS485 interface connector on-board which is a UART-style differential bus with high noise immunity common in manufacturing and control automation.</li>
      <li>Latching I2C interface connector on-board for sensors, controllers, displays, keypads, etc, on this commonly used bus; 12-pin AUX Expansion Socket on-board for expansion versatility and WIFI-enabled using the ubiquitous and inexpensive ESP-01S module.</li>
      <li>additionally, VINA-D51 brings out 48 I/O capable of Digital I/O, UARTs, I2C, SPI, A/D, DAC, USB, and many other useful control and interfacing capabilities to the edge + 10 additional I/O on the AUX Socket.</li>
    </ul>
  </li>
  <li><strong>Development &amp; debug</strong>:
    <ul>
      <li>CircuitPython and UF2 Bootloader pre-installed to get started developing right away with just a laptop or PC and a text editor.</li>
      <li>With a standard ARM Cortex SWD debug header on-board, low level programming in C/C++ with source-level, single-step debugging utilizing a hardware programmer like the Segger J-Link is easy.</li>
    </ul>
  </li>
  <li><strong>Data storage</strong>:
    <ul>
      <li>64 MB of on-board flash filesystem storage space for your programs and data presented as an external drive on your development workstation.</li>
      <li>Soldered directly to the board, this flash storage will not suffer from corrosion or vibration in harsh environments like SD-Card type storage are prone.</li>
    </ul>
  </li>
  <li><strong>Flexible voltage</strong>:
    <ul>
      <li>Robust power section with wide voltage input range for flexible and reliable operation, and enough headroom to supply power to other devices up to about 3 A.</li>
      <li>incorporates industrial grade Molex Latch-Lock connector that will not vibrate loose even in the most demanding applications.</li>
    </ul>
  </li>
</ul>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>32-bit ARM Cortex M4F MCU @ 120 MHz using the ATSAMD51N20A</li>
  <li>1 MB Firmware Flash and 256 KB Static RAM</li>
  <li>Hardware Peripheral Control - A/D, DAC, Digital I/O, UARTs, I2C, SPI, I2S, PWM, Timers, Capacitive Touch, and more</li>
  <li>USB Port for programming and interfacing</li>
  <li>Virtual COM Port for connecting to the console using standard terminal emulator from a PC or Laptop - no additional hardware required for programming</li>
  <li>16 MB Flash Filesystem for data and programs</li>
  <li>Mass Storage Device Interface to PC or Mac for downloading programs</li>
  <li>WIFI using the ESP-01S module socket</li>
  <li>WIFI using the BDMICRO ATW-01 WINC1500-based WiFi module</li>
  <li>Wide voltage input from 3.7 to 24 V with robust Latch-Lock connector that won’t vibrate loose</li>
  <li>USB Port Power</li>
  <li>RS485 Port - with optional termination on-board, for interfacing with this common, differential, high noise immunity industrial control bus — mating part is the Molex —0430250408 3mm MicroFit 3.0 Series; optional power can be supplied to or from the RS485 bus through jumper selection</li>
  <li>I2C connector - 4-pins supplying SCL, SDA, GND, and optional 3.3 V to power external I2C devices like sensors and displays</li>
  <li>On-board I2C pull-ups - can be optionally disabled</li>
  <li>ARM Cortex SWD Debug Port - for low-level firmware flashing and source level single-step debugging with hardware programmer support such as the Segger J-Link</li>
  <li>Robust, Latch-Lock Power Connector - will not vibrate loose, suitable for harsh environments; mating part is the Molex 0430250208 MicroFit 3.0 series</li>
  <li>Jumper Selectable Power - either USB or external</li>
  <li>Jumper Enabled RS485 Bus termination</li>
  <li>Jumper Enabled I2C Bus pull-ups</li>
  <li>Jumper Enabled 3.3 V Power to or from the RS485 Bus</li>
  <li>Jumper Enabled 3.3 V Power to or from the I2C Bus</li>
  <li>Fused Power Inputs - both USB and External Power fused appropriately for their voltage input and current draw</li>
  <li>Power Indicator LED</li>
  <li>3 Programmable Status LEDs - Red, Green, and Blue</li>
  <li>RX &amp; TX LEDs - for use by CircuitPython to indicate transmission and reception of data over USB, or fully programmable under application control</li>
  <li>Small Size - 1.6” x 2.8” (41 mm x 71 mm)</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://cdn.shopify.com/s/files/1/0087/5718/2544/files/vina-d51.pdf?v=1641358819">VINA-D51 Manual</a></li>
  <li><a href="https://cdn.shopify.com/s/files/1/0087/5718/2544/files/vina-d51.lbr?v=1620249715">Eagle Part Library for VINA-D51</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://bdmicro.com/products/vina-d51">BDMICRO</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bdmicro_vina_d51/</guid>
  </item><item>
    <title>VINA-D51 (PCB 7)</title>
    <link>https://circuitpython.org/board/bdmicro_vina_d51_pcb7/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bdmicro_vina_d51.jpg 300w,
               /assets/images/boards/large/bdmicro_vina_d51.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bdmicro_vina_d51.jpg" alt="Image of Board" loading="lazy">
<p>By BDMICRO, LLC</p> <p>The VINA-D51 is a powerful, robust, pluggable control module designed for modular control applications, even in harsh environments. Built with all-industrial grade components, latching connectors and features, it is well-suited for a wide variety of automation and control applications.</p>

<ul>
  <li><strong>Performance</strong>: Powerful 32-bit ARM Cortex M4 microcontroller @ 120 MHz, based on the Microchip ATSAMD51N20 with 1 MB of program flash and 256 KB of RAM.</li>
  <li><strong>Industrial grade</strong>: All industrial spec parts and Latch-Lock connectors for reliable operation in demanding applications.</li>
  <li><strong>Connectivitiy</strong>:
    <ul>
      <li>USB interface for connecting to your development PC or Laptop computer for programming.</li>
      <li>provides virtual COM port for CircuitPython console and UART, and mass storage filesystem interface to the 64 MB on-board QSPI flash for programs and data storage.</li>
    </ul>
  </li>
  <li><strong>Control &amp; interfacing</strong>:
    <ul>
      <li>RS485, I2C, WIFI &amp; Expansion: Latching RS485 interface connector on-board which is a UART-style differential bus with high noise immunity common in manufacturing and control automation.</li>
      <li>Latching I2C interface connector on-board for sensors, controllers, displays, keypads, etc, on this commonly used bus; 12-pin AUX Expansion Socket on-board for expansion versatility and WIFI-enabled using the ubiquitous and inexpensive ESP-01S module.</li>
      <li>additionally, VINA-D51 brings out 48 I/O capable of Digital I/O, UARTs, I2C, SPI, A/D, DAC, USB, and many other useful control and interfacing capabilities to the edge + 10 additional I/O on the AUX Socket.</li>
    </ul>
  </li>
  <li><strong>Development &amp; debug</strong>:
    <ul>
      <li>CircuitPython and UF2 Bootloader pre-installed to get started developing right away with just a laptop or PC and a text editor.</li>
      <li>With a standard ARM Cortex SWD debug header on-board, low level programming in C/C++ with source-level, single-step debugging utilizing a hardware programmer like the Segger J-Link is easy.</li>
    </ul>
  </li>
  <li><strong>Data storage</strong>:
    <ul>
      <li>64 MB of on-board flash filesystem storage space for your programs and data presented as an external drive on your development workstation.</li>
      <li>Soldered directly to the board, this flash storage will not suffer from corrosion or vibration in harsh environments like SD-Card type storage are prone.</li>
    </ul>
  </li>
  <li><strong>Flexible voltage</strong>:
    <ul>
      <li>Robust power section with wide voltage input range for flexible and reliable operation, and enough headroom to supply power to other devices up to about 3 A.</li>
      <li>incorporates industrial grade Molex Latch-Lock connector that will not vibrate loose even in the most demanding applications.</li>
    </ul>
  </li>
</ul>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>32-bit ARM Cortex M4F MCU @ 120 MHz using the ATSAMD51N20A</li>
  <li>1 MB Firmware Flash and 256 KB Static RAM</li>
  <li>Hardware Peripheral Control - A/D, DAC, Digital I/O, UARTs, I2C, SPI, I2S, PWM, Timers, Capacitive Touch, and more</li>
  <li>USB Port for programming and interfacing</li>
  <li>Virtual COM Port for connecting to the console using standard terminal emulator from a PC or Laptop - no additional hardware required for programming</li>
  <li>16 MB Flash Filesystem for data and programs</li>
  <li>Mass Storage Device Interface to PC or Mac for downloading programs</li>
  <li>WIFI using the ESP-01S module socket</li>
  <li>WIFI using the BDMICRO ATW-01 WINC1500-based WiFi module</li>
  <li>Wide voltage input from 3.7 to 24 V with robust Latch-Lock connector that won’t vibrate loose</li>
  <li>USB Port Power</li>
  <li>RS485 Port - with optional termination on-board, for interfacing with this common, differential, high noise immunity industrial control bus — mating part is the Molex —0430250408 3mm MicroFit 3.0 Series; optional power can be supplied to or from the RS485 bus through jumper selection</li>
  <li>I2C connector - 4-pins supplying SCL, SDA, GND, and optional 3.3 V to power external I2C devices like sensors and displays</li>
  <li>On-board I2C pull-ups - can be optionally disabled</li>
  <li>ARM Cortex SWD Debug Port - for low-level firmware flashing and source level single-step debugging with hardware programmer support such as the Segger J-Link</li>
  <li>Robust, Latch-Lock Power Connector - will not vibrate loose, suitable for harsh environments; mating part is the Molex 0430250208 MicroFit 3.0 series</li>
  <li>Jumper Selectable Power - either USB or external</li>
  <li>Jumper Enabled RS485 Bus termination</li>
  <li>Jumper Enabled I2C Bus pull-ups</li>
  <li>Jumper Enabled 3.3 V Power to or from the RS485 Bus</li>
  <li>Jumper Enabled 3.3 V Power to or from the I2C Bus</li>
  <li>Fused Power Inputs - both USB and External Power fused appropriately for their voltage input and current draw</li>
  <li>Power Indicator LED</li>
  <li>3 Programmable Status LEDs - Red, Green, and Blue</li>
  <li>RX &amp; TX LEDs - for use by CircuitPython to indicate transmission and reception of data over USB, or fully programmable under application control</li>
  <li>Small Size - 1.6” x 2.8” (41 mm x 71 mm)</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://cdn.shopify.com/s/files/1/0087/5718/2544/files/vina-d51.pdf?v=1641358819">VINA-D51 Manual</a></li>
  <li><a href="https://cdn.shopify.com/s/files/1/0087/5718/2544/files/vina-d51.lbr?v=1620249715">Eagle Part Library for VINA-D51</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://bdmicro.com/products/vina-d51">BDMICRO</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bdmicro_vina_d51_pcb7/</guid>
  </item><item>
    <title>DFRobot Beetle ESP32-C3</title>
    <link>https://circuitpython.org/board/beetle-esp32-c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beetle-esp32-c3.png 300w,
               /assets/images/boards/large/beetle-esp32-c3.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beetle-esp32-c3.png" alt="Image of Board" loading="lazy">
<p>By DFRobot</p> <p>Beetle ESP32-C3, mainly intended for IoT applications, is a controller based on
ESP32-C3 RISC-V 32bit single-core processor.</p>

<p>On a coin-size board of 25*20.5 mm, there are up to 13 IO ports broken out, so
you don’t have to worry about running out of IO ports when making projects.
Meanwhile, li-ion battery charging management function is integrated on the
board which allows to directly connect li-ion battery without extra modules,
while ensuring the application size and safety.</p>

<p>The equipped expansion board for Beetle ESP32-C3 brings out more power sources
without increasing product volume, more convenient to solder. Besides, the
onboard easy-to-connect GDI saves the trouble of wiring when using a screen.</p>

<h2 id="interface-pins">Interface pins</h2>

<ul>
  <li>Digital I/O x13</li>
  <li>LED PWM controller with 6 channels</li>
  <li>SPI x1</li>
  <li>UART x2</li>
  <li>I2C x1</li>
  <li>I2S x1</li>
  <li>Infrared receiver and transmitter: transmit channel x2, receive channel x2,
(any pin)</li>
  <li>2 × 12-bit SAR A/D converters, 6 channels</li>
  <li>DMA controller, 3 receive channels and 3 transmit channels</li>
  <li>USB Type-C: 5V</li>
  <li>PIN10/LED: Onboard LED pin</li>
  <li>ESP32-C3 module: the latest ESP32-C3 module launched by Espressif</li>
  <li>RST: reset pin, short contact point trigger reset</li>
  <li>TP4057: TP4057 lithium battery charge management chip</li>
  <li>Charge: charging indicator
    <ul>
      <li>Off: not plugged in power supply or fully charged</li>
      <li>On: charging</li>
      <li>Blinking: battery not connected</li>
    </ul>
  </li>
  <li>18Pin-FPC:GDI display interface</li>
</ul>

<h2 id="to-boot-into-firmware-download-mode">To Boot into Firmware Download Mode</h2>

<p><img src="/assets/images/boards/original/beetle-esp32-c3-downloadmode.png" alt="Beetle ESP32 C3 Firmware Download" /></p>

<ol>
  <li>Pull PIN 9 Down</li>
  <li>Place a jumper across RST and hold for 3 seconds</li>
  <li>Release RST and PIN 9</li>
  <li>Flash as normal per <a href="https://github.com/adafruit/circuitpython/tree/main/ports/espressif#building-and-flashing">Espressif port instructions</a></li>
</ol>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.dfrobot.com/product-2566.html">DFRobot</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 16 Jul 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/beetle-esp32-c3/</guid>
  </item><item>
    <title>BLE-SS Dev Board Multi Sensor</title>
    <link>https://circuitpython.org/board/bless_dev_board_multi_sensor/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bless_dev_board_multi_sensor.jpg 300w,
               /assets/images/boards/large/bless_dev_board_multi_sensor.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bless_dev_board_multi_sensor.jpg" alt="Image of Board" loading="lazy">
<p>By Switch Science, Inc</p> <p>This development board includes a Bluetooth Low Energy-enabled ISP1807 from Insight SiP (based on the nRF52840) and six sensors: acceleration, magnetism, gyro, temperature, humidity and air pressure.</p>

<p>The development board is programmed with a bootloader. You can use the Arduino IDE or Circuit Python to develop your program. It has two switches and two LEDs each that can be used programmatically, and it also has a piezoelectric speaker.</p>

<p>It features a TPS63030 high-efficiency step-up/down converter and runs on CR2025 or CR2032 coin cell batteries. The board outline is the same as the Raspberry Pi Zero, so it can be used in a Raspberry Pi Zero case.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ISP1807 based on the nRF52840</li>
  <li>9-Axis Sensor (BXM055)</li>
  <li>Humidity and Temperature Sensor (HDC2010)</li>
  <li>Pressure Sensor (LPS22HB)</li>
  <li>Buzzer</li>
  <li>2 LEDs (Green and Red)</li>
  <li>2 Push buttons</li>
  <li>CR2032 Coin Battery supports</li>
  <li>Raspberry Pi Zero compatible board dimensions</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="http://ssci.to/6250">Switch Science, Inc.</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bless_dev_board_multi_sensor/</guid>
  </item><item>
    <title>BLM Badge</title>
    <link>https://circuitpython.org/board/blm_badge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/blmbadge.jpg 300w,
               /assets/images/boards/large/blmbadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/blmbadge.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Black Lives Matter Education &amp; Workshop Kit is an open-source design the Adafruit team published during the peaceful demonstrations for social justice in the summer of 2020 (https://github.com/adafruit/BLM-Badge-PCB). As a company and culture we came together to make our voices heard, share the pain we all had, the anger, and then work together for equality and justice in our communities (https://www.adafruit.com/blacklivesmatter). We listened to each other, we marched, we donated our time, resources, we distributed PPE at community events, we came together.</p>

<p>The kit is a snapshot in time, a time capsule of what we did together, and what we can build together going forward. The kit can be used for learn-to-code events remotely or in person when gatherings are safe post-COVID. We wanted to make something that would continue to emphasize the moment, is a movement.</p>

<p>The kits will never be for sale from Adafruit, they will be donated to learning-to-code organizations, social justice groups, and events.</p>

<p>This education and workshop kit is build around a Cortex M0+ processor that can run Arduino or CircuitPython.</p>

<h2 id="features">Features</h2>

<ul>
  <li><strong>USB-C connector</strong> - If you have only Micro B cables, <a href="https://www.adafruit.com/product/4299">this adapter will come in handy</a>.</li>
  <li><strong>ATSAMD21E18 32-bit Cortex M0+</strong> - 48 MHz 32-bit processor with 256KB Flash and 32 KB RAM</li>
  <li><strong>Native USB supported by every OS</strong> - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li>Power with <strong>2 x AAA</strong> batteries, rechargeable or alkaline</li>
  <li><strong>Six side-lighting RGB NeoPixel LEDs</strong></li>
  <li><strong>Four Capacitive Touch pads</strong> - they can also be used as digital/analog pins</li>
  <li><strong>Light Sensor</strong></li>
  <li><strong>Sound Sensor</strong> (microphone)</li>
  <li>Red LED (<code class="language-plaintext highlighter-rouge">GPIO13</code>)</li>
  <li><strong>On / Off switch</strong></li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
  <li>Lanyard hole</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.adafruit.com/blacklivesmatter">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/blm_badge/</guid>
  </item><item>
    <title>BlueMicro833</title>
    <link>https://circuitpython.org/board/bluemicro833/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bluemicro833.jpg 300w,
               /assets/images/boards/large/bluemicro833.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bluemicro833.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The BlueMicro833 is a nRF52833 controller with the footprint of an Arduino Pro Micro and a USB-C connector. It uses the EByte E73-2GM08S1E nRF52833 module, has a Neopixel and software controller 3.3 V regulator that can turn on/off power to external devices. It’s based on the BlueMicro840 design but uses the internal voltage regulator to run. Just like other Bluemicros, there is a LiPo battery charger on board.</p>

<p>Many DIY keyboards use the Arduino Pro Micro or the Arduino Micro as their microcontroller. These don’t support BLE communications natively. Because the nRF52 chips have a 32-bit ARM Cortex-M4F processor, they have plenty of processing power compared to the traditional AVR chips. The BlueMicro boards were inspired from the Adafruit nrf52 feathers but made to be used directly in DIY keyboards as a replacement for the atmega32u4 based controllers.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="http://nrf52.jpconstantineau.com/docs/bluemicro833">Board Documentation</a></li>
  <li><a href="https://github.com/jpconstantineau/BlueMicro833_hardware">Board Hardware Repo</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/ebyte-e73-2g4m08s1e-breakout-bluemicro833-pcba/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 27 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/bluemicro833/</guid>
  </item><item>
    <title>BlueMicro840</title>
    <link>https://circuitpython.org/board/bluemicro840/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bluemicro840.jpg 300w,
               /assets/images/boards/large/bluemicro840.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bluemicro840.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The BlueMicro840 is a nRF52840 controller inspired on the Adafruit nRF52840 feather but with the footprint of an Arduino Pro Micro and a USB-C connector.</p>

<p>Many DIY keyboards use the Arduino Pro Micro or the Arduino Micro as their microcontroller. These don’t support BLE communications natively. Because the nRF52 chips have a 32-bit ARM Cortex-M4F processor, they have plenty of processing power compared to the traditional AVR chips. The BlueMicro boards were inspired from the Adafruit nrf52 feathers but made to be used directly in DIY keyboards as a replacement for the atmega32u4 based controllers.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="http://nrf52.jpconstantineau.com/docs/bluemicro840_v1">Board Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/bluemicro840/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 07 Aug 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bluemicro840/</guid>
  </item><item>
    <title>BPI-Bit-S2</title>
    <link>https://circuitpython.org/board/bpi_bit_s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bpi_bit_s2.jpg 300w,
               /assets/images/boards/large/bpi_bit_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bpi_bit_s2.jpg" alt="Image of Board" loading="lazy">
<p>By Banana Pi</p> <p>The BPI-Bit-S2 is a development board equipped ESP32-S2 chip, with 5x5 RGB LED matrix, 1 buzzer, 2 photosensitive sensors, 1 thermosensitive sensor, provides Wi-Fi functions via PCB antenna.</p>

<p>And, the board uses the same edge connector as the micro:bit or micro:bit v2, which makes it possible to connect the alligator clip, or the breakout boards in most micro:bit kits.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32-S2N4R2</strong>: Xtensa® single-core 32-bit LX7 microprocessor,
up to 240 MHz; 2.4G Wi-Fi; RISC-V Ultra Low Power Co-processor; <strong>2 MB PSRAM</strong> and <strong>4MB FLASH</strong> are integrated in the package, so don’t worry too much about using massive buffers, it’s basically sufficient.</li>
  <li><strong>Native USB Port</strong>: ESP32-S2 full-speed USB OTG interface, using Type-C USB Connector with back-feed protection. The interface is used for power supply to the board, download firmware or programs to the chip.</li>
  <li><strong>5x5 RGB LED matrix</strong>: 25 WS2812 Lamp beads, addressable, driven by GPIO18.</li>
  <li><strong>GPIO0 LED</strong>: It lights up by default and acts as a power indicator, controlled by GPIO0.</li>
  <li><strong>Buzzer</strong>: 8.5mm buzzer, controlled by GPIO17.</li>
  <li><strong>Photosensitive Sensors</strong>: On the upper front of the board, there is one on each side, read their analog values through GPIO12 and GPIO13.</li>
  <li><strong>Thermosensitive Sensor</strong>: Directly above pin 2, read its analog values through GPIO14.</li>
  <li><strong>A/B Button</strong>: A controlled by GPIO38, B controlled by GPIO33.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>Boot Button</strong>: It is a button that controls boot mode only at startup, and can be used as a normal button at other times. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the USB port;If UF2 Bootloader already exists, press <strong>Reset</strong> once and press <strong>Boot</strong> once within a second to enter the bootloader.</li>
  <li><strong>5V to 3.3V DC/DC</strong>: Maximum theoretical output 2A 3.3V.</li>
  <li><strong>Edge Connector</strong>: Same as the micro:bit, support for alligator clips or the breakout boards in most most micro:bit kits.</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 14 Sep 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bpi_bit_s2/</guid>
  </item><item>
    <title>BPI-Leaf-S3</title>
    <link>https://circuitpython.org/board/bpi_leaf_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bpi_leaf_s3.jpg 300w,
               /assets/images/boards/large/bpi_leaf_s3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bpi_leaf_s3.jpg" alt="Image of Board" loading="lazy">
<p>By Banana Pi</p> <p>The BPI-Leaf-S3 is a basic development board equipped ESP32-S3R2 chip , provides Wi-Fi and Bluetooth LE functions via PCB antenna.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32-S3R2</strong>: Xtensa® dual-core 32-bit LX7 microprocessor,
up to 240 MHz; 2.4G Wi-Fi + Bluetooth LE; RISC-V Ultra Low Power Co-processor; <strong>2 MB Quad SPI PSRAM</strong> is integrated in the package, so don’t worry too much about using massive buffers, it’s basically sufficient.</li>
  <li><strong>8MB Quad SPI Flash</strong></li>
  <li><strong>Reserve extra Quad SPI PSRAM pad</strong>: Keep upgrades possible, just in case.</li>
  <li><strong>36 x GPIO</strong>: All available GPIO pins, are broken out to the pin headers on the board for easy interfacing and programming.The amount, order, and spacing of IO pins on board are identical to the Espressif ESP32-S3-DevKitC-1, of course is Breadboard-Friendly.</li>
  <li><strong>Native USB Port</strong>: ESP32-S3 full-speed USB OTG interface, using USB-C Connector with back-feed protection. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB protocols, as well as for JTAG debugging.</li>
  <li><strong>5V to 3.3V DC/DC</strong>: Maximum theoretical output 2A 3.3V.</li>
  <li><strong>Lithium battery power supply &amp; charging</strong>: MX 1.25mm 2-Pin Socket.Supports arbitrary switching between 3.7V lithium battery and 5V USB power supply without interrupting program operation.</li>
  <li><strong>Battery voltage detection</strong>: On GPIO14, detection half value of battery voltage.</li>
  <li><strong>STEMMA QT / Qwiic connectors</strong>: JST SH 1mm 4-Pin Socket, SDA&amp;GPIO15, SCL&amp;GPIO16.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port or USB port.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO48.</li>
  <li><strong>Power LED</strong>: Steady on when power is supplied.</li>
  <li><strong>Charging LED</strong>: Always off when only the battery is powered, slightly on when only the USB 5V is powered, and always on when the battery is charging.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<p><a href="https://www.aliexpress.com/item/1005004428945296.html?spm=5261.ProductManageOnline.0.0.48af4edfYbyEoI">Aliexpress shop</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Jul 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bpi_leaf_s3/</guid>
  </item><item>
    <title>BPI-PicoW-S3</title>
    <link>https://circuitpython.org/board/bpi_picow_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bpi_picow_s3.jpg 300w,
               /assets/images/boards/large/bpi_picow_s3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bpi_picow_s3.jpg" alt="Image of Board" loading="lazy">
<p>By Banana Pi</p> <p>BPI-Pico-S3 is the same size as Raspberry Pi Pico board, equipped with ESP32S3 chip, 8M flash, 4-layer PCB, electroplated half-hole process, ceramic antenna, supports 2.4 GHz Wi-Fi and Bluetooth® LE dual-mode wireless communication, is a development board designed for IoT development and Maker DIY.</p>

<p><strong>Features:</strong></p>

<ul>
  <li><strong>ESP32-S3R2</strong>: Xtensa® dual-core 32-bit LX7 microprocessor,
up to 240 MHz; 2.4G Wi-Fi + Bluetooth LE; RISC-V Ultra Low Power Co-processor; <strong>2 MB Quad SPI PSRAM</strong> is integrated in the package, so don’t worry too much about using massive buffers, it’s basically sufficient.</li>
  <li><strong>8MB Quad SPI Flash</strong></li>
  <li><strong>Pins and Pads</strong>: It’s the same size as Raspberry Pi Pico board, can also have headers soldered in for use in a breadboard or perfboard, or can be soldered directly onto a PCB with the castellated pads. There’s 20 pads on each side, with groups of general purpose input-and-output (GPIO) pins interleaved with plenty of ground pins.</li>
  <li><strong>Order of Pins</strong>: Keep the same order as Raspberry Pi Pico board in circuitpython. You get a total of 27 GPIO pins, 4 of those can be analog inputs.The ADC_VREF on Raspberry Pi Pico was change to GP29_A3 on BPI-PicoW-S3. In fact, the pin function assignments of ESP32S3 and RP2040 chip are not exactly the same, so redefine the pin order in circuitpython to adapt.</li>
  <li><strong>Native USB Port</strong>: ESP32-S3 full-speed USB OTG interface, using microUSB Connector with back-feed protection. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB protocols, as well as for JTAG debugging.</li>
  <li><strong>5V to 3.3V DC/DC</strong>: Maximum theoretical output 2A 3.3V.</li>
  <li><strong>Reset Button</strong>: Support double-clicking the reset button to enter the UF2 bootloader.</li>
  <li><strong>BOOT0</strong>: If the UF2 Bootloader is removed, you can use any conductor bar such as metal pins or tweezers to short it to put the EPS32S3 chip into bootloader mode, then the UF2 Bootloader can be re-installed.
    <ul>
      <li>Plug board into a USB port on your computer using a data/sync cable. Make sure it is the only board plugged in, and that a charge-only cable is not being used.</li>
      <li>Short circuit BOOT0 contact.</li>
      <li>Press and release the Reset button.</li>
      <li>Release the BOOT0 contact.</li>
    </ul>
  </li>
  <li><strong>RGB LED</strong>: Addressable WS2812 RGB LED, control it with board.NEOPIXEL in circuitpython.</li>
  <li><strong>Monochrome LED</strong>: Control it with board.GP25 or board.LED in circuitpython.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<p><a href="https://www.aliexpress.com/item/1005004775634442.html">Aliexpress shop</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 10 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bpi_picow_s3/</guid>
  </item><item>
    <title>FigPi</title>
    <link>https://circuitpython.org/board/bwshockley_figpi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bwshockley_figpi.jpg 300w,
               /assets/images/boards/large/bwshockley_figpi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bwshockley_figpi.jpg" alt="Image of Board" loading="lazy">
<p>By Benjamin Shockley</p> <p>This has STEMMA QT/Qwiic 4-pin JST SH connectors on the back. The board has two I2C ST QT/ QW connectors, an SPI connector, ADC connector, Digital connector, and a generic 3.3V/GND power shared connector.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://twitter.com/bwshockley/status/1550501200881242112">Twitter</a></li>
  <li><a href="https://twitter.com/bwshockley/status/1549391107196321795">Twitter</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bwshockley_figpi/</guid>
  </item><item>
    <title>Programmable USB Hub</title>
    <link>https://circuitpython.org/board/capablerobot_usbhub/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/capablerobot_usbhub.jpg 300w,
               /assets/images/boards/large/capablerobot_usbhub.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/capablerobot_usbhub.jpg" alt="Image of Board" loading="lazy">
<p>By Capable Robot Components</p> <p>In addition to being a 4-port USB 2 High-Speed hub, this Programmable USB hub is also:</p>

<ul>
  <li>A CircuitPython based development board.</li>
  <li>A bridge between your computer and I2C (via Sparkfun Qwiic connectors), GPIO, and SPI (via its mikroBUS header).</li>
  <li>A power supply, providing 6 A of 5 V power to downstream devices and 13 mA resolution monitoring (per-port).</li>
  <li>A USB to TTL Serial adapter.</li>
  <li>A flexible embedded electronics test and development tool.</li>
  <li>Mountable.</li>
  <li>Functionally flexible. Open source python drivers on the upstream host and Python firmware on the internal MCU allow the behavior of this USB hub to be easily changed to suit your application and environment.</li>
</ul>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/capable-robot-components/programmable-usb-hub">Programmable USB Hub - Crowd Supply</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/capablerobot_usbhub/</guid>
  </item><item>
    <title>CatWAN USB Stick</title>
    <link>https://circuitpython.org/board/catwan_usbstick/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/catwan_usbstick.jpg 300w,
               /assets/images/boards/large/catwan_usbstick.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/catwan_usbstick.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>Are you interested in learning how LoRa works at the package level? Debugging your own LoRa hardware and trying to detect where something is wrong? Or maybe you’re writing a custom application for your Internet of Things (IoT) network with LoraWAN?</p>

<p>The CatWAN USB Stick is programmed with a special firmware image that makes it an easy-to-use LoRa sniffer. You can passively capture the data exchanges between two LoRa devices, capturing with our “LoRa Sniffer” the open source network analysis tool that we have created to use together.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/producto/catwan_usb-stick/">Electronic Cats</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 02 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/catwan_usbstick/</guid>
  </item><item>
    <title>Challenger 840 BLE</title>
    <link>https://circuitpython.org/board/challenger_840/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_840.jpg 300w,
               /assets/images/boards/large/challenger_840.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_840.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger 840 BLE board is an Arduino/Circuitpython compatible Adafruit Feather format micro controller board packed with loads of functionality for your projects that require low power consumption and a BLE connection.</p>

<p>The main controller of this board is the Nordic Semiconductor nRF52840 with 1MByte of FLASH memory and 256KByte of SRAM. The nRF52840 SoC is the most advanced member of the nRF52 Series. It meets the challenges of sophisticated applications that need protocol concurrency and a rich and varied set of peripherals and features. It offers generous memory availability for both Flash and RAM, which are prerequisites for such demanding applications.</p>

<p>The nRF52840 is fully multiprotocol capable with full protocol concurrency. It has protocol support for Bluetooth LE, Bluetooth mesh, Thread, Zigbee, 802.15.4, ANT and 2.4 GHz proprietary stacks.</p>

<p>In the recent years we have noticed that we are seeing more and more USB Type C cable laying around the lab due to the fact that all new phones and accessories use them. As of yet we haven’t seen any shortage of micro USB cables but we are not getting any new ones any more and old ones do break occasionally. So we decided to go for a USB Type C connector for this board. A bonus of this is that they are quite bit more durable and you don’t have to fiddle with the cable before plugging it in.</p>

<p>The board is packed with hardware features, here’s a short list of its most prominent ones.</p>

<p>– Sturdy USB Type C connector
– nRF52840 @ 64MHz
– 1MB FLASH + 256KB RAM
– 2 MByte of NOR FLASH memory
– 32.768 KHz crystal for clock generation &amp; RTC
– 3.3V regulator with 600mA peak current output, most of which is reserved for the board itself
– USB native support, comes with UF2 USB bootloader
– 20 GPIO pins
– Hardware Serial, hardware I2C, hardware SPI support
– PWM outputs on all pins
– 6 x 12-bit analog inputs
– Built in 250mA lipoly charger with charging status indicator LED
– Pin #13 red LED for general purpose blinking
– Power/enable pin
– 4 mounting holes
– Reset button
– Neopixel LED that indicates board status but that can be used by the programmer</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://ilabs.se/product/challenger-840-ble/">Invector Labs</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/challenger_840/</guid>
  </item><item>
    <title>Challenger NB RP2040 WiFi</title>
    <link>https://circuitpython.org/board/challenger_nb_rp2040_wifi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_nb_rp2040_wifi.jpg 300w,
               /assets/images/boards/large/challenger_nb_rp2040_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_nb_rp2040_wifi.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger NB RP2040 WiFi is an Arduino/Micropython compatible <strong>Challenger NB</strong> (NB for No Battery) format micro controller board based on the Raspberry Pico chip. The <strong>Challenger NB</strong> form factor is based on Adafruits Feather format but we have removed the battery connector, LiPo charger and instead added a bunch of IO pins. It has retained most of the original Feather pinout so most (all) existing feather wings should work nicely with this board as well.</p>

<p>Just like the Challenger RP2040 WiFi it has a ESP8285 WiFi chip. For those of you that is unfamiliar with this device, it is basically an ESP8266 device with an integrated 1MByte of flash memory. This allows us to have an AT command interpreter inside this chip that the main controller can talk to and connect to you local WiFi network. The communications channel between the two devices is an unused UART on the main controller and the standard UART on the ESP8285. As simple as it can be.</p>

<p>The ESP8285 chip comes pre-flashed with Espressif’s AT command interpreter stored in the internal 1MByte of the ESP8285. This interpreter support most of the operating and sleep modes of the standard ESP8266 framework which makes it easy to work with. Talking to the device is as easy as opening the second serial port (Serial2), resetting the ESP8285 and start listening for events and sending commands.</p>

<h3 id="technical-details">Technical details</h3>

<ul>
  <li>Raspberry Pi Pico Dual Core Cortex-M0 @ 133 MHz</li>
  <li>8 MByte FLASH Memory</li>
  <li>264 KByte SRAM Memory</li>
  <li>1 Hardware I2C channel</li>
  <li>1 Hardware SPI channel</li>
  <li>1 Hardware UART for the user (Serial1)</li>
  <li>1 Hardware UART connected to the network processor (Serial2 @ 1 Mbit/s)</li>
  <li>12 Bit ADC.</li>
  <li>ESP8285 with internal 1MByte FLASH Memory</li>
  <li>WiFi (2.4 GHz)</li>
  <li>Espressif AT interpreter</li>
  <li>Communicates at 921600 bits/s</li>
  <li>Neopixel LED</li>
  <li>New fancy schmancy I2C connector =)</li>
  <li>USB-C connector</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/invector/challenger-nb-rp2040-wifi/">Tindie</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/challenger_nb_rp2040_wifi/</guid>
  </item><item>
    <title>Challenger RP2040 LoRa</title>
    <link>https://circuitpython.org/board/challenger_rp2040_lora/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_lora.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_lora.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_lora.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The iLabs Challenger RP2040 LoRa is a small embedded computer equipped with a LoRa modem module on board, in the popular <a href="https://www.adafruit.com/?q=feather">Adafruit Feather form factor</a>. It is based on an RP2040 microcontroller from Raspberry Pi which is a dual-core Cortex M0 that can run on a clock up to 133MHz.</p>

<p>This is a spin-off from our <a href="/board/challenger_rp2040_wifi/">Challenger RP2040 WiFi </a> board but we have replaced the WiFi module with a low power RFM95W LoRa radio module from Hope RF. The transceiver features a LoRa long range modem that provides ultra-long range spread spectrum communication and high interference immunity whilst minimizing current consumption.</p>

<p>The RFM95W is connected to the microcontroller using an SPI channel and a few GPIO signals to handle signalling from the modem circuit. Besides the modem module, there is only one additional U.FL connector that forms the modem functionality. Simply hook your external antenna to this connector and you are ready to go.</p>

<p>We paired the RP2040 with 8MByte high-speed flash capable of supplying data up to the max speed. The flash memory can be used both to store instructions for the microcontroller as well as data in a file system and having a file system available makes it easy to store data in a structured and easy to program approach.</p>

<p>The device can be powered by a Lithium Polymer battery connected through a standard 2.0mm connector on the side of the board. An internal battery charging circuit allows you to charge your battery safely and quickly. The device is shipped with a programming resistor that sets the charging current to ~450mA. this resistor can be exchanged by the user to either increase or decrease the charging current, depending on the battery that is being used.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li>915MHz Version: <a href="https://www.tindie.com/products/invector/challenger-rp2040-lora-915mhz/">Tindie</a></li>
  <li>868 MHz Version: <a href="https://thepihut.com/products/challenger-rp2040-lora-868mhz">PiHut</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Jun 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_lora/</guid>
  </item><item>
    <title>Challenger RP2040 LTE</title>
    <link>https://circuitpython.org/board/challenger_rp2040_lte/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_lte.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_lte.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_lte.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger RP2040 LTE is an Arduino/CircuitPython compatible Adafruit Feather format micro controller board based on the Raspberry Pico chip.</p>

<p>This board has been designed with portable applications in mind. By using the powerful dual core RP2040 combined with 8Mbyte of flash memory you get a device that can handle pretty much anything you can trow at it. For instance if you let one core handle the LTE modem and the second core do all the UI stuff you get an extremely responsive system. Not to mention that the 8 MByte of FLASH memory will let you install any (or all) CircuitPython support libraries that you will every need.</p>

<h3 id="technical-details">Technical details</h3>

<ul>
  <li>Raspberry Pi Pico Dual Core Cortex-M0 @ 133 MHz</li>
  <li>8 MByte FLASH Memory</li>
  <li>264 KByte SRAM Memory</li>
  <li>1 Hardware I2C channel</li>
  <li>1 Hardware SPI channel</li>
  <li>1 Hardware UART for the user (Serial1)</li>
  <li>1 Hardware UART connected to the network processor (Serial2 @ 1 Mbit/s)</li>
  <li>12 Bit ADC.</li>
  <li>SARA-R410M-02B</li>
  <li>LTE Category M1/NB1</li>
  <li>Multiregion</li>
  <li>Data rate M1: up to 375 kb/s UL, 300 kb/s DL</li>
  <li>Data rate NB1: up to 62.5 kb/s UL, 27.2 kb/s DL</li>
  <li>LiPo charger circuit with 250 mA charging current</li>
  <li>Standard LiPo battery connector</li>
  <li>USB-C connector</li>
  <li>Bi2C</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/invector/challenger-rp2040-lte/">Tindie</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_lte/</guid>
  </item><item>
    <title>Challenger RP2040 SD/RTC</title>
    <link>https://circuitpython.org/board/challenger_rp2040_sdrtc/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_sdrtc.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_sdrtc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_sdrtc.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger RP2040 SD/RTC is an Arduino/Circuitpython compatible Adafruit Feather format micro controller board based on the Raspberry Pico chip. This board is equipped with an micro SD card reader and a Real Time Clock making it super useful for data logging applications.</p>

<p>RP2040 is the debut micro controller from Raspberry Pi. It brings their signature values of high performance, low cost, and ease of use to the micro controller space. With a large on-chip memory, symmetric dual-core processor complex, deterministic bus fabric, and rich peripheral set augmented with our unique Programmable I/O (PIO) subsystem, RP2040 provides professional users with unrivaled power and flexibility. With detailed documentation, a polished Circuitpython port, and a UF2 boot loader in ROM, it has the lowest possible barrier to entry for beginner and hobbyist users</p>

<p>This board is equipped with a micro SD card connector that will house standard micro SD cards allowing your application to have many gigabytes of storage room for sensor data or what ever you want to place on it. Together with a fancy display you could also store cool images.</p>

<p>It is normally very useful to tag sensor data with a time stamp so we included a Real Time Clock chip to make this easy for you.</p>

<p>The chip we use is the MCP79410 general purpose I2C™Compatible real-time clock/calendar. It is a highly integrated real time clock with nonvolatile memory and many other advanced features. These features include a battery switchover circuit for backup power, a timestamp to log power failures and digital trimming for accuracy. Using a low-cost 32.768 kHz crystal or other clock source, time is tracked in either a 12-hour or 24-hour format with an AM/PM indicator and timing to the second, minute, hour, day of the week, day, month and year. As an interrupt or wakeup signal, a multifunction open drain output can be programmed as an Alarm Out or as a Clock Out that supports 4 selectable frequencies.</p>

<p>The intperrupt output from the RTC is connected to pin GPIO25 on the RP2040 and can be used to wake up the device repeatedly to collect data.</p>

<p>In the recent years we have noticed that we are seeing more and more USB Type C cable laying around the lab due to the fact that all new phones and accessories use them. As of yet we haven’t seen any shortage of micro USB cables but we are not getting any new ones any more and old ones do break occasionally. So we decided to go for a USB Type C connector for this board. A bonus of this is that they are quite bit more durable and you don’t have to fiddle with the cable when plugging it in.</p>

<p>The board is equipped with a standard 2.0mm JST connector for connecting a rechargeable LiPo battery. There is also an internal battery charger circuit that charges your battery as long as a USB cable is inserted or the VUSB connection is connected to 5V.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://ilabs.se/product/challenger-rp2040-sd-rtc/">Invector Labs)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 22 Dec 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_sdrtc/</guid>
  </item><item>
    <title>Challenger RP2040 SubGHz</title>
    <link>https://circuitpython.org/board/challenger_rp2040_subghz/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_subghz.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_subghz.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_subghz.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger RP2040 SubGHz board is an Arduino/Circuitpython compatible Adafruit Feather format micro controller board based on the Raspberry Pico (RP2040) chip.</p>

<p>This is a spin-off from our Challenger RP2040 LoRa board but in this case we replaced the LoRa module with a low power SubGHz radio module also from Hope RF. The transceiver features a proprietary long range modem that provides ultra-long range spread spectrum communication and high interference immunity whilst minimizing current consumption.</p>

<p>The RFM69HCW is a transceiver module capable of operation over a wide frequency range, including the 315,433,868 and 915MHz license-free ISM (Industry Scientific and Medical) frequency bands. Currently we are only supporting the 868 and 915MHz bands but this may change in the future. All major RF communication parameters are programmable and most of them can be dynamically set. The RFM69HCW offers the unique advantage of programmable narrow-band and wide- band communication modes.</p>

<p>The RFM69HCW is connected to the RP2040 via SPI channel 1 and a few GPIO’s that is required for signaling. A U.FL connector is used to attach your antenna to the board.</p>

<h3 id="technical-details">Technical details</h3>

<ul>
  <li>+20 dBm – 100 mW Power Output Capability</li>
  <li>High Sensitivity: down to -120 dBm at 1.2 kbps</li>
  <li>High Selectivity: 16-tap FIR Channel Filter</li>
  <li>Bullet-proof front end: IIP3 = -18 dBm, IIP2 = +35 dBm,80 dB Blocking Immunity</li>
  <li>Low current: Rx = 16 mA, 100nA register retention</li>
  <li>Programmable Pout: -18 to +20 dBm in 1dB steps</li>
  <li>Constant RF performance over voltage range of module</li>
  <li>FSK Bit rates up to 300 kb/s</li>
  <li>Fully integrated synthesizer with a resolution of 61 Hz</li>
  <li>FSK, GFSK, MSK, GMSK and OOK modulations</li>
  <li>Built-in Bit Synchronizer performing Clock Recovery</li>
  <li>Incoming Sync Word Recognition</li>
  <li>115 dB+ Dynamic Range RSSI</li>
  <li>Automatic RF Sense with ultra-fast AFC</li>
  <li>Packet engine with CRC-16, AES-128, 66-byte FIFO</li>
  <li>Built-in temperature sensor</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://ilabs.se/product/challenger-rp2040-subghz-868mhz/">Invector Labs (868MHz)</a></li>
  <li><a href="https://ilabs.se/product/challenger-rp2040-subghz-915mhz/">Invector Labs (915MHz)</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_subghz/</guid>
  </item><item>
    <title>Challenger RP2040 WiFi</title>
    <link>https://circuitpython.org/board/challenger_rp2040_wifi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_wifi.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_wifi.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger RP2040 WiFi is an Arduino/Micropython compatible Adafruit Feather format micro controller board based on the Raspberry Pico chip.</p>

<p>When we designed this board we took our existing Challenger M0 WiFi board and replaced the SAMD21 micro controller with the much more powerful dual core RP2040 Cortex-M0 device. The RP2040 have two Cortex-M0 CPU cores clocked at 133 Mhz and 264 Kbyte SRAM integrated. On our board we decided to put a 8 MByte flash memory for your programs and file storage.</p>

<p>Just like the Challenger M0 WiFi it has a ESP8285 WiFi chip. For those of you that is unfamiliar with this device, it is basically an ESP8266 device with an integrated 1 MByte of flash memory. This allows us to have an AT command interpreter inside this chip that the main controller can talk to and connect to you local WiFi network. The communications channel between the two devices is an unused UART on the main controller and the standard UART on the ESP8285. As simple as it can be.</p>

<h3 id="technical-details">Technical details</h3>

<ul>
  <li>Raspberry Pi Pico Dual Core Cortex-M0 @ 133 MHz</li>
  <li>8 MByte FLASH Memory</li>
  <li>264 KByte SRAM Memory</li>
  <li>1 Hardware I2C channel</li>
  <li>1 Hardware SPI channel</li>
  <li>1 Hardware UART for the user (Serial1)</li>
  <li>1 Hardware UART connected to the network processor (Serial2 @ 1Mbit/s)</li>
  <li>12 Bit ADC.</li>
  <li>ESP8285 with internal 1MByte FLASH Memory</li>
  <li>WiFi (2.4 GHz)</li>
  <li>Espressif AT interpreter</li>
  <li>Communicates at 921600 bits/s</li>
  <li>Neopixel LED</li>
  <li>LiPo charger circuit with 250 mA charging current</li>
  <li>Standard LiPo battery connector</li>
  <li>USB-C connector</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/invector/challenger-rp2040-wifi/">Tindie</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_wifi/</guid>
  </item><item>
    <title>Challenger RP2040 WiFi/BLE</title>
    <link>https://circuitpython.org/board/challenger_rp2040_wifi_ble/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/challenger_rp2040_wifi_ble.jpg 300w,
               /assets/images/boards/large/challenger_rp2040_wifi_ble.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/challenger_rp2040_wifi_ble.jpg" alt="Image of Board" loading="lazy">
<p>By Invector Labs</p> <p>The Challenger RP2040 WiFi/BLE is an Arduino/Micropython compatible Adafruit Feather format micro controller board based on the Raspberry Pico chip, equipped with an WiFi/BLE chip that provides both WiFi as well as BLE functionality on the board.</p>

<p>RP2040 is the debut micro controller from Raspberry Pi. It brings their signature values of high performance, low cost, and ease of use to the micro controller space. With a large on-chip memory, symmetric dual-core processor complex, deterministic bus fabric, and rich peripheral set augmented with our unique Programmable I/O (PIO) subsystem, RP2040 provides professional users with unrivaled power and flexibility. With detailed documentation, a polished Circuitpython port, and a UF2 boot loader in ROM, it has the lowest possible barrier to entry for beginner and hobbyist users</p>

<p>The Challenger RP2040 WiFi/BLE board is equipped with a powerful combined single chip solution that provides the WiFi and BLE connectivity of this board. The chip we are using is the ESP32-C3FN4 from Espressif and it is a complete WiFi subsystem that complies with IEEE 802.11b/g/n protocol and supports Station mode, SoftAP mode, SoftAP + Station mode, and promiscuous mode. It also implements A Bluetooth LE subsystem that supports features of Bluetooth 5 and Bluetooth mesh.</p>

<p>This solution is based on an RISC-V micro controller core and comes with 4MByte of internal flash and 408Kbyte of internal SRAM as well as the advanced 2.4GHz radio.</p>

<p>The ESP32-C3 device comes pre loaded with the ESP-AT interpreter already programmed into flash. This interpreter provides the system with everything from low level TCP/UDP functionality up to high level functions such as a on board integrated web server, MQTT server and client functions and much more.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://ilabs.se/product/challenger-rp2040-wifi-ble-with-chip-antenna/">Invector Labs (Chip Antenna)</a></li>
  <li><a href="https://ilabs.se/product/challenger-rp2040-wifi-ble-with-u-fl-connector/">Invector Labs (U.FL Connector)</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/challenger_rp2040_wifi_ble/</guid>
  </item><item>
    <title>CircuitBrains Basic</title>
    <link>https://circuitpython.org/board/circuitbrains_basic_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitbrains_basic.jpg 300w,
               /assets/images/boards/large/circuitbrains_basic.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitbrains_basic.jpg" alt="Image of Board" loading="lazy">
<p>By Null Byte Labs LLC</p> <p>CircuitPython on an ARM Cortex M0 in 1 square inch! This “Just Add Solder” castellated module is perfect for incorporating into your own project. The CircuitBrains Basic board footprint is small enough to fit into narrow spaces and wearable projects.</p>

<p><strong>NOTE:</strong> This board does not have a USB connector for the native USB. Native USB is broken out on the header/castellations and therefore requires a non-standard USB connection such as mounting to a motherboard PCB.</p>

<h2 id="technical-specs">Technical Specs</h2>

<ul>
  <li>Dimensions: 25 x 25 x 3.5 millimeters / 1 x 1 x 0.15 inches</li>
  <li>Atmel ATSAMD21E18 Microcontroller (32-bit ARM Cortex M0)</li>
  <li>48 MHz</li>
  <li>32 KB SRAM</li>
  <li>256 KB Flash</li>
  <li>4 MB QSPI Flash</li>
  <li>Onboard 3.3V LDO Regulator</li>
  <li>Power and Status LEDs</li>
  <li>Breakouts for SPI and I2C</li>
  <li>Breakouts for 4 Analog and 8 Digital Inputs/Outputs</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://kevinneubauer.com/portfolio/circuitbrains-basic/">CircuitBrains Basic Project Page</a></li>
  <li><a href="https://twitter.com/kevinneubauer">Kevin Neubauer Twitter</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/neubauek/CircuitBrains">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitbrains_basic_m0/</guid>
  </item><item>
    <title>CircuitBrains Deluxe</title>
    <link>https://circuitpython.org/board/circuitbrains_deluxe_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitbrains_deluxe.jpg 300w,
               /assets/images/boards/large/circuitbrains_deluxe.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitbrains_deluxe.jpg" alt="Image of Board" loading="lazy">
<p>By Null Byte Labs LLC</p> <p>CircuitPython on an ARM Cortex M4 in almost 1 square inch! This “Just Add Solder” castellated module is perfect for incorporating into your own project. The CircuitBrains Deluxe board footprint is small enough to fit into narrow spaces and wearable projects.</p>

<p><strong>NOTE:</strong> This board does not have a USB connector for the native USB. Native USB is broken out on the header/castellations and therefore requires a non-standard USB connection such as mounting to a motherboard PCB.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Dimensions: 29 x 29 x 3.5 mm / 1.15 x 1.15 x 0.15 inches</li>
  <li>Atmel ATSAMD51J19A Microcontroller (32-bit ARM Cortex M4)</li>
  <li>120 MHz</li>
  <li>192 KB SRAM</li>
  <li>512 KB Flash</li>
  <li>8 MB QSPI Flash</li>
  <li>Onboard 3.3V LDO Regulator</li>
  <li>Power and Status LEDs</li>
  <li>Breakouts for SPI and I2C</li>
  <li>Breakouts for 14 Analog and 19 Digital Inputs/Outputs</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://kevinneubauer.com/portfolio/circuitbrains-deluxe/">CircuitBrains Deluxe Project Page</a></li>
  <li><a href="https://twitter.com/kevinneubauer">Kevin Neubauer Twitter</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/neubauek/CircuitBrains">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitbrains_deluxe_m4/</guid>
  </item><item>
    <title>Circuit Playground Bluefruit</title>
    <link>https://circuitpython.org/board/circuitplayground_bluefruit/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_bluefruit.jpg 300w,
               /assets/images/boards/large/circuitplayground_bluefruit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_bluefruit.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p><strong>Circuit Playground Bluefruit</strong> is our third board in the Circuit Playground series, another step towards a perfect introduction to electronics and programming. We’ve taken the popular Circuit Playground Express and made it even better! Now the main   chip is an nRF52840 microcontroller which is not only more powerful, but also comes with Bluetooth Low Energy support for wireless connectivity.</p>

<p>The board is round and has alligator-clip pads around it so you don’t have to solder or sew to make it work. You can power it from USB, a AAA battery pack, or with a Lipoly battery (for advanced users). Circuit Playground Bluefruit has built-in USB support.</p>

<p>Built in USB means you plug it in to program it and it just shows up, no special cable or adapter required. Just program your code into the board then take it on the go!</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>1x nRF52840 Cortex M4 processor with Bluetooth Low Energy support</li>
  <li>10x mini NeoPixels, each one can display any color</li>
  <li>1x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1x Temperature sensor (thermistor)</li>
  <li>1x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Mini speaker with class D amplifier (7.5 mm magnetic speaker/buzzer)</li>
  <li>2x Push buttons, labeled A and B</li>
  <li>1x Slide switch</li>
  <li>8x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 6 pins that can do analog inputs, multiple PWM outputs</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red “#13” LED for basic blinking</li>
  <li>Reset button</li>
  <li>2 MB of SPI Flash storage, used primarily with CircuitPython to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-bluefruit">Circuit Playground Bluefruit Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4333/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4333">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_bluefruit/</guid>
  </item><item>
    <title>Circuit Playground Express</title>
    <link>https://circuitpython.org/board/circuitplayground_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_express.jpg 300w,
               /assets/images/boards/large/circuitplayground_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.
It brings the “batteries included” approach of Python to hardware by including an assortment of
functionality built-in. It is one of the best beginner boards available. If you are new to hardware,
then this is a great board to start with.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>10x mini NeoPixels, each one can display any color</li>
  <li>1x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1x Temperature sensor (thermistor)</li>
  <li>1x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Mini speaker with class D amplifier (7.5 mm magnetic speaker/buzzer)</li>
  <li>2x Push buttons, labeled A and B</li>
  <li>1x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3 V and 48 MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3333/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3333">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p88cfj">Digi-Key</a></li>
  <li><a href="https://shop.pimoroni.com/products/circuit-playground-express-developer-edition">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 Dec 2018 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express/</guid>
  </item><item>
    <title>Circuit Playground Express 4-H</title>
    <link>https://circuitpython.org/board/circuitplayground_express_4h/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_express_4h.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_4h.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_express_4h.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.</p>

<p>It brings the “batteries included” approach includes an assortment of functionality built-in. It is one of the best beginner boards available. If you are new to hardware, then this is a great board to start with. This version includes 4-H branding <a href="https://blog.adafruit.com/2019/03/18/adafruit-circuit-playground-express-4-h-edition-approved-adafruit-4h-4h-4hgrowshere/">approved by the USDA</a>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>10x mini NeoPixels, each one can display any color</li>
  <li>1x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1x Temperature sensor (thermistor)</li>
  <li>1x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Mini speaker with class D amplifier (7.5 mm magnetic speaker/buzzer)</li>
  <li>2x Push buttons, labeled A and B</li>
  <li>1x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3 V and 48 MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
  <li>Programmable in multiple environments including Microsoft <a href="https://www.microsoft.com/en-us/makecode">MakeCode</a>, <a href="https://learn.adafruit.com/welcome-to-circuitpython">CircuitPython</a>, <a href="https://learn.adafruit.com/adafruit-circuit-playground-express/code-org-csd">Code.org CSD</a>, and the <a href="https://learn.adafruit.com/adafruit-circuit-playground-express/arduino">Arduino IDE</a></li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li>4-H STEMLab Curriculum: <a href="https://docs.google.com/document/d/1GVcTo_lZIsQleITaE80sy2t4RPOU4SKW9SzHaNbtnh8/edit#heading=h.gd2jfvbzhwp9">Circuit Playground Express Soil Moisture Sensor</a></li>
  <li>Soil Moisture Sensor Tutorial: <a href="https://youtu.be/fsg1iP75kck">YouTube Introduction</a> and <a href="https://learn.adafruit.com/soil-moisture-sensor-with-circuit-playground-express">Adafruit Online Tutorial</a></li>
  <li><a href="https://learn.adafruit.com/category/circuit-playground">Adafruit Learning System tutorials on the Circuit Playground Express</a></li>
  <li><a href="https://makecode.adafruit.com/">Microsoft Tutorials and Projects with MakeCode</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4180">Adafruit Circuit Playground Express board (4-H Green with logo)</a></li>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express board (black)</a></li>
  <li><a href="https://www.adafruit.com/product/3517">Adafruit Circuit Playground Express base kit (black)</a></li>
  <li><a href="https://shop4-h.org/products/circuit-playground-express-base-kit">Shop4-H.org base kit</a></li>
</ul>

<h2 id="other-4-h-links">Other 4-H Links</h2>

<ul>
  <li><a href="https://blog.adafruit.com/2018/11/07/national-4-h-youth-maker-summit-uses-adafruit-circuit-playground-express-4h-4hsummits-4hmaker-adafruit-circuitplaygroundexpress-msmakecode/">Adafruit attends the 2018 National 4-H Youth Maker Summit in Chevy Chase, Maryland</a></li>
  <li><a href="https://youtu.be/bdXGku9DO3Q">Microsoft teams with Brown County 4-H</a> - WBAY video (YouTube)</li>
  <li>The Adafruit Connection to 4-H: <a href="https://blog.adafruit.com/2017/11/04/4-h-electronics-makers-holland-lops-silkie-chickens-more-4h-nationofmakers/">4-H, electronics, makers, holland lops, silkie chickens &amp; more</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_4h/</guid>
  </item><item>
    <title>Circuit Playground Express + Crickit</title>
    <link>https://circuitpython.org/board/circuitplayground_express_crickit/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_express_crickit.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_crickit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_express_crickit.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p><strong>Crickit</strong> is a <strong>C</strong>reative <strong>R</strong>obotics &amp; <strong>I</strong>nteractive <strong>C</strong>onstruction <strong>Kit</strong>. It’s an add-on for the popular Circuit Playground Express that lets you <strong>#MakeRobotFriend</strong> using CircuitPython (and more).</p>

<p>Bolt on a Circuit Playground using the included stand-off bolts and start controlling motors, servos, solenoids. With CRICKIT you also get signal pins, capacitive touch sensors, a NeoPixel driver and amplified speaker output. It complements &amp; extends the Circuit Playground so you can still use all the goodies on the CPX, but now you have a robotics playground as well.</p>

<p>The Crickit is powered by seesaw, a I2C-to-whatever bridge firmware. So you only need to use two data pins to control the huge number of inputs and outputs on the Crickit. All those timers, PWMs, sensors are offloaded to the co-processor.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>4x Analog or Digital Servo control, with precision 16-bit timers</li>
  <li>2x Bi-directional brushed DC motor control, 1 A current limited each, with 8-bit PWM speed control (or one stepper)</li>
  <li>4x High current “Darlington” 500mA drive outputs with kick-back diode protection. For solenoids, relays, large LEDs, or one uni-polar stepper</li>
  <li>4x Capacitive touch sensors with alligator-pads</li>
  <li>8x Signal pins, digital in/out or analog inputs</li>
  <li>1x NeoPixel driver with 5 V level shifter</li>
  <li>1x Class D, 4-8 ohm speaker, 3 W-max audio amplifier</li>
</ul>

<p>All are powered via 5 V DC, so you can use any 5V-powered servos, DC motors, steppers, solenoids, relays etc. To keep things simple and safe, CRIKIT does not support mixing voltages, use only 5 V - not for use with 9 V or 12 V robotic components.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-crickit-creative-robotic-interactive-construction-kit">Circuit Playground Express + Crickit</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3093">CRICKIT for CircuitPlayground Express - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_crickit/</guid>
  </item><item>
    <title>Circuit Playground Express Digi-Key</title>
    <link>https://circuitpython.org/board/circuitplayground_express_digikey_pycon2019/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_express_digikey_pycon2019.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_digikey_pycon2019.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_express_digikey_pycon2019.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.</p>

<p>It brings the “batteries included” approach of Python to hardware by including an assortment of functionality built-in. It is one of the best beginner boards available. If you are new to hardware, then this is a great board to start with.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>10x mini NeoPixels, each one can display any color</li>
  <li>1x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1x Temperature sensor (thermistor)</li>
  <li>1x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Mini speaker with class D amplifier (7.5 mm magnetic speaker/buzzer)</li>
  <li>2x Push buttons, labeled A and B</li>
  <li>1x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3 V and 48 MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/">CircuitPython Made Easy on Circuit Playground Express</a></li>
</ul>

<h2 id="downloads">Downloads</h2>

<ul>
  <li><a href="https://github.com/adafruit/PyCon2019/tree/master/Default_Files">PyCon 2019 Circuit Playground Express Default Files</a></li>
  <li><a href="https://github.com/adafruit/PyCon2019/">PyCon 2019 Open Spaces Example Content</a></li>
  <li><a href="https://github.com/adafruit/PyCon2019/blob/master/PyCon%202019%20Circuit%20Playground%20Express%20Quickstart.pdf">Pycon 2019 Circuit Playground Express Quickstart Worksheet</a></li>
</ul>

<h2 id="more-information">More Information</h2>

<ul>
  <li><a href="https://blog.adafruit.com/2019/04/01/circuitpython-open-spaces-planned-for-pycon-2019-pycon-circuitplaygroundexpress-adafruit-adafruit-circuitpython/">CircuitPython Open Spaces Planned for PyCon 2019</a></li>
  <li><a href="https://blog.adafruit.com/2019/02/23/digi-key-and-adafruit-at-pycon-all-attendees-will-receive-a-circuit-playground-express-digikey-adafruit-pycon-pycon2019/">Digi-Key and Adafruit at PyCon - All attendees will receive a Circuit Playground Express!</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_digikey_pycon2019/</guid>
  </item><item>
    <title>Circuit Playground Express + Displayio</title>
    <link>https://circuitpython.org/board/circuitplayground_express_displayio/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/circuitplayground_express_displayio.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_displayio.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/circuitplayground_express_displayio.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Extend and expand your Circuit Playground projects with a bolt on TFT Gizmo that lets you add a lovely color display in a sturdy and reliable fashion. This PCB looks just like a round TFT breakout but has permanently affixed M3 standoffs that act as mechanical and electrical connections.</p>

<p>Once attached you’ll get a 1.54” 240x240 IPS display with backlight control, two 3-pin STEMMA connectors for attaching NeoPixel strips or servos, and a Class D audio amplifier with a Molex PicoBlade connector that can plug one of our lil speakers.</p>

<p>This is a great companion for our Circuit Playground Express or Bluefruit boards thanks to their fast SPI hardware speeds, and works in Arduino and CircuitPython. You can use it with the Circuit Playground Classic but it won’t be very fast, as you have to bitbang the SPI - and the display has a lot of pixels - so it’s not recommended.</p>

<p>Comes with a PCB that has pre-soldered standoffs attached, and 12x M3 screws for attachment. Fits all Circuit Playgrounds but like we mentioned earlier, the Express and Bluefruit are recommended.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/adafruit-tft-gizmo">Adafruit Circuit Playground TFT Gizmo</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4367">TFT Gizmo for CircuitPlayground Express - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_displayio/</guid>
  </item><item>
    <title>CLUE NRF52840 Express</title>
    <link>https://circuitpython.org/board/clue_nrf52840_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/clue_nrf52840_express.jpg 300w,
               /assets/images/boards/large/clue_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/clue_nrf52840_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>We wanted to build some projects that have a small screen and a lot of sensors. This board has a 1.3″ 240×240 IPS TFT display, two buttons, and sensors.</p>

<p>Available sensors:</p>

<ul>
  <li>LSM series 9-DoF motion - LSM6DS33 Accel/Gyro + LIS3MDL magnetometer</li>
  <li>APDS9960 Proximity, Light, RGB, and Gesture Sensor</li>
  <li>PDM Microphone sound sensor</li>
  <li>Humidity, temperature and barometric environmental sensing</li>
</ul>

<p>There’s a Qwiic/STEMMA QT connector for adding more sensors, like PM2.5 air quality and others that were too big to fit on the board.</p>

<p>We’ll be primarily using CircuitPython for programming it, but it will also work in Arduino.</p>

<p>After designing it, the board was close enough to micro:bit-shape-size that we moved a few parts to make it fit in micro:bit robots and some projects – the nrf52840 is a big upgrade chip and can do stuff like Tensorflow Lite for Microcontrollers, BLE central and peripheral, and more.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Nordic nRF52840 Bluetooth LE processor - 1 MB of Flash, 256 KB RAM, 64 MHz Cortex M4 processor</li>
  <li>1.3″ 240x240 Color IPS TFT display for high resolution text and graphics</li>
  <li>Power it from any 3-6V battery source (internal regulator and protection diodes)</li>
  <li>Two A/B user buttons and one reset button</li>
  <li>RGB NeoPixel indicator LED</li>
  <li>2 MB internal flash storage for datalogging, images, fonts or CircuitPython code</li>
  <li>Buzzer/speaker for playing tones and beeps</li>
  <li>Two bright white LEDs in front for illumination/color sensing.</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-clue">CLUE Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4500/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4500">Adafruit CLUE</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 29 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/clue_nrf52840_express/</guid>
  </item><item>
    <title>CP Sapling M0</title>
    <link>https://circuitpython.org/board/cp_sapling_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cp_sapling_m0.jpg 300w,
               /assets/images/boards/large/cp_sapling_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cp_sapling_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>Finally, a tree that runs CircuitPython? YEP! Now you can get working in CircuitPython fast with our new CircuitPython compatible development board featuring the popular Microchip AT SAM D21 microcontroller.</p>

<p>Providing quick and easy access to SPI and I2C (pins + Stemma/Qwiic connector) so you can get your project off the ground in no time.</p>

<p>This board also comes with the SOIC-8 pads available on the bottom of the board to enable it to expand storage with SPI FLASH!</p>

<ul>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>CircuitPython</strong> (Arduino coming soon!)</li>
  <li><strong>Built in BIG 3535 RGB NeoPixel LED</strong></li>
  <li><strong>8 GPIO pins</strong>:
    <ul>
      <li>2 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>8 x PWM outputs</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware SPI</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="">500mA peak output</a></li>
  <li>[Optional SOIC-8 SPI Flash chip on bottom]</li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.oakdev.tech/store/p7/CP-Sapling-m0-development-board.html#/">Oak Dev Tech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 22 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/cp_sapling_m0/</guid>
  </item><item>
    <title>CP Sapling M0 Rev B</title>
    <link>https://circuitpython.org/board/cp_sapling_m0_revb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cp_sapling_m0_revb.jpg 300w,
               /assets/images/boards/large/cp_sapling_m0_revb.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cp_sapling_m0_revb.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>Finally, a tree that runs CircuitPython? YEP and it’s better than ever! Now you can get working in CircuitPython fast with our new CircuitPython compatible development board featuring the popular Microchip AT SAM D21 microcontroller.</p>

<p>Providing quick and easy access to SPI and I2C (pins + Stemma/Qwiic connector) so you can get your project off the ground in no time.</p>

<p>This board also comes with the SOIC-8 pads available on the bottom of the board to enable it to expand storage with SPI FLASH!</p>

<ul>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>CircuitPython</strong> (Arduino coming soon!)</li>
  <li><strong>Built in BIG 3535 RGB NeoPixel LED</strong></li>
  <li><strong>12 GPIO pins</strong>:
    <ul>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware SPI</li>
    </ul>
  </li>
  <li>3.3V regulator with 500mA peak output</li>
  <li>[Optional SOIC-8 SPI Flash chip on bottom]</li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.oakdev.tech/store/p10/%28Coming_Soon%29_CP_Sapling_Rev_B.html#/">Oak Dev Tech</a></li>
  <li><a href="https://www.tindie.com/products/oakdevtech/cp-sapling-rev-b-samd21-micro-dev-board/">ODT Tindie Shop</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 04 Jun 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/cp_sapling_m0_revb/</guid>
  </item><item>
    <title>CP Sapling M0 with SPI Flash</title>
    <link>https://circuitpython.org/board/cp_sapling_m0_spiflash/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cp_sapling_m0.jpg 300w,
               /assets/images/boards/large/cp_sapling_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cp_sapling_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>Finally, a tree that runs CircuitPython? YEP! Now you can get working in CircuitPython fast with our new CircuitPython compatible development board featuring the popular Microchip AT SAM D21 microcontroller.</p>

<p>Providing quick and easy access to SPI and I2C (pins + Stemma/Qwiic connector) so you can get your project off the ground in no time.</p>

<p>This board also comes with the SOIC-8 pads available on the bottom of the board to enable it to expand storage with SPI FLASH!</p>

<ul>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>CircuitPython</strong> (Arduino coming soon!)</li>
  <li><strong>Built in BIG 3535 RGB NeoPixel LED</strong></li>
  <li><strong>8 GPIO pins</strong>:
    <ul>
      <li>2 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>8 x PWM outputs</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware SPI</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="">500mA peak output</a></li>
  <li>[Optional SOIC-8 SPI Flash chip on bottom]</li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.oakdev.tech/store/p7/CP-Sapling-m0-development-board.html#/">Oak Dev Tech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/cp_sapling_m0_spiflash/</guid>
  </item><item>
    <title>CRCibernetica IdeaBoard</title>
    <link>https://circuitpython.org/board/crcibernetica_ideaboard/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/crcibernetica_ideaboard.jpg 300w,
               /assets/images/boards/large/crcibernetica_ideaboard.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/crcibernetica_ideaboard.jpg" alt="Image of Board" loading="lazy">
<p>By CRCibernetica</p> <p>The CRCibernetica IdeaBoard is an educational Internet of Things and Robotics development board based on the ESP32 microcontroller.
Easily connect multiple dc motors, servos and sensors to power your experiments!</p>

<h2 id="features">Features</h2>

<ul>
  <li>240 MHz dual core Tensilica LX6 microcontroller with 600 DMIPS</li>
  <li>Integrated 520 KB SRAM</li>
  <li>Integrated 802.11b/g/n HT40 Wi-Fi transceiver, baseband, stack and LWIP</li>
  <li>Integrated dual mode Bluetooth (classic and BLE)</li>
  <li>16 MByte FLASH</li>
  <li>Two motor drivers (800mA each motor)</li>
  <li>STEMMA QT connector for easy expansion</li>
  <li>Standard .1” headers for convenient interfacing with GND and Vcc for each pin</li>
  <li>Direct DC power for battery or power supply (5VDC - 9VDC)</li>
  <li>7 pins for servos or other applications that require direct power</li>
  <li>14 General Purpose I/O pins in total (7 direct power – 7 with 3.3v logic)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.crcibernetica.com/crcibernetica-ideaboard/">CRCibernetica (Costa Rica)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 12 Nov 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/crcibernetica_ideaboard/</guid>
  </item><item>
    <title>CrumpSpace CrumpS2</title>
    <link>https://circuitpython.org/board/crumpspace_crumps2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/crumpspace_crumps2.jpg 300w,
               /assets/images/boards/large/crumpspace_crumps2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/crumpspace_crumps2.jpg" alt="Image of Board" loading="lazy">
<p>By CrumpSpace</p> <p>The <strong>CrumpS2</strong> is a super-basic CircuitPython-compatible development board for the ESP32-S2 WiFi Microcontroller. It was designed to be easy to assemble while staying low-cost so that anyone can fabricate and assemble for use in you WiFi hardware projects!</p>

<h2 id="specs">Specs</h2>

<ul>
  <li>ESP32-S2-WROVER module</li>
  <li>USB-C connector for data and power</li>
  <li>3.3V voltage regualtor</li>
  <li>APA102 RGB LED</li>
  <li>33 GPIO pins</li>
  <li>4 MB SPI flash</li>
  <li>2 MB PSRAM</li>
  <li>Low part count for easier hand-assembly</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/crumpspace_crumps2/</guid>
  </item><item>
    <title>Maker Feather AIoT S3</title>
    <link>https://circuitpython.org/board/cytron_maker_feather_aiot_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cytron_maker_feather_aiot_s3.jpg 300w,
               /assets/images/boards/large/cytron_maker_feather_aiot_s3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cytron_maker_feather_aiot_s3.jpg" alt="Image of Board" loading="lazy">
<p>By Cytron Technologies</p> <p>The Maker Feather AIoT S3 is powered by the ESP32-S3 WROOM 1 N8R8 module with 8MB Flash and 8MB PSRAM. This board allows the users to access both AI and IoT applications on their own projects. Users may choose from two different variants of Maker Feather AIoT S3: Basic (without pre-soldered female headers) and Pre-soldered female headers which the user can use a breadboard to expand all the GPIOs.</p>

<p>The board comes with 3 Maker Ports (STEMMA QT / Qwiic JST SH) that have flexible I/O options: digital, analog and I2C. The Maker Ports consist of 2 horizontal ports that are powered by VPeripheral that allows users to save power by turning  on and off via programming code and 1 vertical port that is powered by constant 3.3V.</p>

<p>There are 11 LEDs that act as the status LED of their respective GPIOs, a programmable Neopixel RGB LED to make your project colourful, 1 “RESET” and 1 “BOOT” buttons to reset the board and enter bootloader mode and a programmable push button. At the bottom of the board, there is a piezo buzzer with a mute switch that allows you to add audio features to your projects.</p>

<p>There are 2 ways to power up the Maker Feather AIoT S3, either through USB C Data Cable or rechargeable LiPo/Li-Ion Battery. The built-in 1-cell LiPo/Li-Ion charger port comes with overcharged and over-discharged protection features.</p>

<p>This board is pre-loaded with CircuitPython and is also supported by various programming languages: MicroPython, Arduino IDE and Espressif IDF.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Adafruit feather form factor</li>
  <li>Powered by ESP32-S3 WROOM-1 N8R8 (8MB Flash, 8MB PSRAM)</li>
  <li>Single-cell LiPo connector with overcharge / over-discharge protection circuit, rechargeable via USB.</li>
  <li>11x Status indicator LEDs for GPIOs</li>
  <li>1x Programmable piezo buzzer (Connected to GPIO12)</li>
  <li>1x Reset button</li>
  <li>1x User programmable button (GPIO3)</li>
  <li>1x RGB LEDs (WS2812B Neopixel)</li>
  <li>3x Maker Ports, compatible with Qwiic, STEMMA QT, and Grove (via conversion cable): 2 horizontal (VPeripheral) and 1 vertical (3.3V)</li>
  <li>Support Arduino, CircuitPython, MicroPython &amp; Espressif IDF</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://docs.google.com/document/d/1vVYSdn84I8Hvi9SWHU54lhH_vWlhD3mwJ6pcSyLNGcE/edit?usp=sharing">Maker Feather AIoT S3 Datasheet</a></li>
  <li><a href="https://cytron.io/tutorial/get-started-with-maker-feather-aIot-s3-using-circuitpyhton">Get Started with Maker Feather AIoT S3 Using CircuitPython</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://cytron.io/p-v-maker-feather-aiot-s3-simplifying-aiot-with-esp32">Cytron</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 24 Nov 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/cytron_maker_feather_aiot_s3/</guid>
  </item><item>
    <title>Maker Nano RP2040</title>
    <link>https://circuitpython.org/board/cytron_maker_nano_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cytron_maker_nano_rp2040.jpg 300w,
               /assets/images/boards/large/cytron_maker_nano_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cytron_maker_nano_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Cytron Technologies</p> <p>The Maker Nano RP2040 is a small but powerful MCU for your project. Same Arduino Nano form factor, but powered by a RP2040 MCU. This also means that it’s compatible with some of the daughter boards for Arduino Nano in the market. Not to forget it’s also breadboard friendly to allow building your own circuit.</p>

<p>The board has a lot of LEDs. Those LEDs are not just for a nice visual effect, they also represent the status of each pins. There are also two RGB LEDs (WS2812 Neopixel) to make your life more colorful. The onboard piezo buzzer and the sliding switch are additional hardware items which are present.</p>

<p>The Raspberry Pi RP2040 MCU can be programmed with C/C++ (natively or with Arduino IDE support), MicroPython or CircuitPython.</p>

<p>The I/O voltage is only 3.3 V and it’s not 5 V compatible.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Arduino Nano form factor</li>
  <li>Dual-core Arm Cortex-M0+ processor</li>
  <li>264 KB internal RAM</li>
  <li>2 MB of Flash memory</li>
  <li>22x Digital I/O pins (4 ADC inputs <code class="language-plaintext highlighter-rouge">A0</code> - <code class="language-plaintext highlighter-rouge">A3</code>)</li>
  <li>14x Status indicator LEDs for GPIOs</li>
  <li>1x Piezo buzzer with mute switch</li>
  <li>1x Push button</li>
  <li>2x RGB LEDs (WS2812 Neopixel)</li>
  <li>2x Maker Ports, compatible with Qwiic, STEMMA QT, Grove (via conversion cable)</li>
  <li>Support Arduino IDE, CircuitPython and MicroPython</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://docs.google.com/drawings/d/e/2PACX-1vSGwfh_1ac_UFXT4F72D0yJHaYHjDC-lfeBMLp0dc8ry57sAYtdobIFBZqrfXE6AuDTYEY9Cicto2b8/pub?w=3373&amp;h=2867">Maker Nano RP2040 Pinout Diagram</a></li>
  <li><a href="https://docs.google.com/document/d/15IMxlESQE43sP7brZpqlfHVTAdX1N_XenzpvfP8cT_8/edit?usp=sharing">Maker Nano RP2040 Datasheet</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.cytron.io/p-maker-nano-rp2040">Cytron</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/cytron_maker_nano_rp2040/</guid>
  </item><item>
    <title>Maker Pi RP2040</title>
    <link>https://circuitpython.org/board/cytron_maker_pi_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cytron_maker_pi_rp2040.jpg 300w,
               /assets/images/boards/large/cytron_maker_pi_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cytron_maker_pi_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Cytron Technologies</p> <p>Cytron Maker Pi RP2040 features the RP2040 chip, embedded on a robot controller board. The board also comes with 2-channel DC motor driver, 4 servo motor ports and 7 Grove I/O connectors, ready for your next DIY robot/motion control projects.</p>

<p>The DC motor driver onboard is able to control two brushed DC motors or single bipolar/unipolar stepper motor from 3.6 V to 6 V, providing up to 1 A current per channel continuously. The built-in Quick Test buttons and motor output LEDs allow functional test of the motor driver in a quick and convenient way without the need of writing any test code. Vmotor for both DC and servo motors depends on the input voltage supplied to the board.</p>

<p>Maker Pi RP2040 has lots of LEDs for troubleshooting and visual effects, is able to make quite some noise with the onboard piezo buzzer and comes with push buttons ready to detect your touch.</p>

<p>There are three ways to supply power to the Maker Pi RP2040 - via USB (5 V) socket, with a single cell LiPo/Li-Ion battery or through the VIN (3.6-6 V) terminals. However only one power source is needed to power up both controller board and motors at a time. Power supply from all these power sources can all be controlled with the power on/off switch onboard.</p>

<p>CircuitPython is preloaded on the Maker Pi RP2040 and it runs a simple demo program right out-of-the-box. It can also be programmed with C/C++ (natively or with Arduino IDE support) or MicroPython.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Dual-core Arm Cortex-M0+ processor</li>
  <li>264 KB internal RAM</li>
  <li>2 MB of Flash memory</li>
  <li>Robot controller board
    <ul>
      <li>4x Servo motors (<code class="language-plaintext highlighter-rouge">GPIO12</code>. <code class="language-plaintext highlighter-rouge">GPIO13</code>, <code class="language-plaintext highlighter-rouge">GPIO14</code>, <code class="language-plaintext highlighter-rouge">GPIO15</code>)</li>
      <li>2x DC motors with quick test buttons (Dual-channel H-bridge)</li>
    </ul>
  </li>
  <li>Versatile power circuit
    <ul>
      <li>7 Automatic power selection: USB 5 V, LiPo (1-cell) or Vin (3.6-6 V)</li>
      <li>Built-in 1-cell LiPo/Li-Ion charger (over-charged &amp; over-discharged protection)</li>
      <li>Power on/off switch</li>
    </ul>
  </li>
  <li>13x Status indicator LEDs for GPIO pins</li>
  <li>1x Piezo buzzer with mute switch</li>
  <li>2x Push button</li>
  <li>22x RGB LED (Neopixel)</li>
  <li>7x Grove ports (flexible I/O options: digital, analog, I2C, SPI, UART)</li>
  <li>Mouting holes
    <ul>
      <li>4x 4.8 mm mounting hole (LEGO® pin compatible)</li>
      <li>6x M3 screw hole</li>
    </ul>
  </li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://github.com/CytronTechnologies/MAKER-PI-RP2040">Getting Started with Maker Pi RP2040 &amp; Example Code</a></li>
  <li><a href="https://docs.google.com/document/d/1DJASwxgbattM37V4AIlJVR4pxukq0up25LppA8-z_AY/edit">Maker Pi RP2040 Datasheet</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.cytron.io/p-maker-pi-rp2040">Cytron</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 31 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/cytron_maker_pi_rp2040/</guid>
  </item><item>
    <title>Maker Zero SAMD21</title>
    <link>https://circuitpython.org/board/cytron_maker_zero_samd21/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/cytron_maker_zero_samd21.jpg 300w,
               /assets/images/boards/large/cytron_maker_zero_samd21.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/cytron_maker_zero_samd21.jpg" alt="Image of Board" loading="lazy">
<p>By Cytron Technologies</p> <p>Do you need a powerful microcontroller with low power consumption for your project? Introducing Maker Zero SAMD21, a development board based on the famous ATSAMD21 chip featuring a 32-bit ARM Cortex® M0+ core.</p>

<p>Maker Zero SAMD21 is packed with convenient yet exciting features such as a servo ports, grove ports, GPIO LED indicators, RGB LEDs, programmable push buttons and a piezo buzzer. It has the same form factor as Arduino Uno and compatible with Arduino Zero.</p>

<p>The SAMD21 chip offers higher performance, enabling project opportunities for a variety of devices, and as a great educational tool for learning 32-bit applications. The SAMD21 chip applications span from smart IoT devices, wearable technology, high-tech automation, to robotics.</p>

<p>The Maker Zero SAMD21 is shipped with bootloader from Adafruit that accepts code from Arduino IDE. The bootloader also allows you to easily change the board to CircuitPython mode by double-tapping the reset button and copying the .uf2 file that contains CircuitPython firmware into the board.</p>

<h2 id="technical-details">Technical details</h2>
<ul>
  <li>Arduino Uno form factor</li>
  <li>Compatible with Arduino Zero</li>
  <li>Powered by Atmel’s ATSAMD21</li>
  <li>Arm Cortex-M0+ processor
    <ul>
      <li>Up to 48MHz operating frequency</li>
      <li>32KB of SRAM</li>
      <li>256KB of Flash memory</li>
    </ul>
  </li>
  <li>8x Grove Ports (Digital I/O, PWM Output, UART, I2C, Analog Input)</li>
  <li>4x Servo Ports</li>
  <li>17x Status indicator LEDs for GPIOs</li>
  <li>1x Piezo buzzer with mute switch</li>
  <li>2x Push button</li>
  <li>2x RGB LEDs (WS2812 Neopixel)</li>
  <li>1x Maker Ports, compatible with Qwiic, STEMMA QT, Grove (via conversion cable)</li>
  <li>Support Arduino IDE, CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.cytron.io/p-maker-zero-samd21">Cytron Technologies</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 25 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/cytron_maker_zero_samd21/</guid>
  </item><item>
    <title>datum-Distance</title>
    <link>https://circuitpython.org/board/datum_distance/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/datum_distance.jpg 300w,
               /assets/images/boards/large/datum_distance.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/datum_distance.jpg" alt="Image of Board" loading="lazy">
<p>By J&J Studios</p> <p>The datum-Distance sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the VL53LX1 distance sensor from ST Microelectronics to create the simplest, easiest to use distance sensor for your application.</p>

<p>The datum-Distance sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Distance sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Distance sensor can do much more than just collect the data. The measurement units can be customized to suit your application. Distance data can be returned in mm, cm, inches, or feet. The datum-Distance sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Distance sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Distance/">datum-Distance Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/568-datum-distance">GroupGets</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_distance/</guid>
  </item><item>
    <title>datum-IMU</title>
    <link>https://circuitpython.org/board/datum_imu/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/datum_imu.jpg 300w,
               /assets/images/boards/large/datum_imu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/datum_imu.jpg" alt="Image of Board" loading="lazy">
<p>By J&J Studios</p> <p>The datum-IMU sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the LSM9DS1 IMU sensor from ST Microelectronics to create the simplest, easiest to use IMU sensor for your application.</p>

<p>The datum-IMU sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-IMU sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-IMU sensor can do much more than just collect the data. The measurement units can be customized to suit your application. IMU data can be returned in mm, cm, inches, or feet. The datum-IMU sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-IMU sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-IMU/">datum-IMU Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/573-datum-imu">GroupGets</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_imu/</guid>
  </item><item>
    <title>datum-Light</title>
    <link>https://circuitpython.org/board/datum_light/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/datum_light.jpg 300w,
               /assets/images/boards/large/datum_light.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/datum_light.jpg" alt="Image of Board" loading="lazy">
<p>By J&J Studios</p> <p>The datum-Light sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the APDS-9960 light sensor from Broadcom to create the simplest, easiest to use light sensor for your application.</p>

<p>The datum-Light sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Light sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Light sensor can do much more than just collect the data. The measurement units can be customized to suit your application. light data can be returned in mm, cm, inches, or feet. The datum-Light sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Light sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Light/">datum-Light Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/574-datum-light">GroupGets</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_light/</guid>
  </item><item>
    <title>datum-Weather</title>
    <link>https://circuitpython.org/board/datum_weather/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/datum_weather.jpg 300w,
               /assets/images/boards/large/datum_weather.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/datum_weather.jpg" alt="Image of Board" loading="lazy">
<p>By J&J Studios</p> <p>The datum-Weather sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the BME280 environmental sensor from Bosch Sensortec to create the simplest, easiest to use weather sensor for your application.</p>

<p>The datum-Weather sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Weather sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Weather sensor can do much more than just collect the data. The measurement units can be customized to suit your application. Temperature data can be returned in degrees Farenheit or Celsius. Altitude could be in meters or feet. The datum-Weather sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Weather sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Weather/">datum-Weather Website</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_weather/</guid>
  </item><item>
    <title>Piunora</title>
    <link>https://circuitpython.org/board/diodes_delight_piunora/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/diodes_delight_piunora.jpg 300w,
               /assets/images/boards/large/diodes_delight_piunora.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/diodes_delight_piunora.jpg" alt="Image of Board" loading="lazy">
<p>By Diodes Delight</p> <p>Piunora is a compact, easy-to-use development board for electronics prototyping with Linux. It has a familiar form factor, legible pin labels, and a design that’s well suited to space-constrained applications.</p>

<p>As a carrier board for the <a href="https://www.raspberrypi.org/products/compute-module-4/?variant=raspberry-pi-cm4001000">Raspberry Pi Compute Module 4</a> (CM4), Piunora is essentially a tiny version of the Raspberry Pi 4 Single Board Computer (SBC) with added flexibility to accommodate custom form factors. CM4-based devices like Piunora are fully compatible with software that was written for the Raspberry Pi 4, as long as that software accounts for the hardware peripherals in use. There are also versions of the CM4 that include eMMC memory, which is more reliable than a traditional SD card.</p>

<p>It may be small, but Piunora is packed with powerful peripherals that will come in handy for rapid prototyping and embedded machine-learning applications. Examples include an HDMI port, camera-input connectors, and PCI-e support, which is not present on a standard Raspberry Pi 4. Finally, the M.2 B-Key port on the rear of the board is not only useful for SSD storage, it can also host a diverse range of PCI-e expansion boards.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Arduino UNO R3 / Adafruit Metro compatible form factor (3.3 V logic, may not be compatible with all Shields)</li>
  <li>PCI-e through M.2 B-Key connector on the rear of the board with dedicated 3.3 V/3 A supply</li>
  <li>Analog to Digital Converter (MCP3008)</li>
  <li>On-the-fly switching between USB host (USB Type-A) and device mode (USB-C)</li>
  <li>Qwiic/Stemma QT connector to easily interface with I2C devices</li>
  <li>A full-sized camera connector that supports all Pi-compatible cameras</li>
  <li>A full-sized HDMI 2.0 port</li>
  <li>A WS2812 Smart RGB LED for user status</li>
  <li>Optional Wi-Fi or eMMC options depending on your choice of CM4</li>
  <li>Slim design with the Piunora Lite measuring 8-12 mm and the Piunora Pro measuring 11-13 mm</li>
  <li>Two user-controllable buttons (including software that turns one of them into a safe-shutdown button)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.crowdsupply.com/diodes-delight/piunora">Crowd Supply</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Feb 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/diodes_delight_piunora/</guid>
  </item><item>
    <title>DynaLoRa-USB</title>
    <link>https://circuitpython.org/board/dynalora_usb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/dynalora_usb.jpg 300w,
               /assets/images/boards/large/dynalora_usb.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/dynalora_usb.jpg" alt="Image of Board" loading="lazy">
<p>By BH Dynamics</p> <h2 id="overview">Overview</h2>

<p>DynaLoRa-USB is a low cost and open source, CircuitPython and Arduino compatible, LoRa tinkering dongle designed by and for makers.</p>

<p>Our aim is to facilitate access to the hottest radio technology (LoRa) through the use of maker-friendly languages such as Python and the Arduino framework. With that intent, DynaLoRa-USB is a simple device that you just plug and play with! It includes a powerful SAMD21 microcontroller and a HopeRF LoRa radio module (RFM96W for 868/915 MHz), an user button, an RGB LED and an external interface to plug your favorite peripherals.</p>

<ul>
  <li>ATSAMD21E18 48 MHz Cortex-M0+ processor with 256 KB flash + 32 KB RAM, compatible with CircuitPython and Arduino</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>High performance HopeRF radio module. We offer the device with the RFM96W, which is capable of LoRa modulation at 868/915 MHz, but you can easily replace it by the 433 MHz version (RFM95W) or a generic Sub-GHz radio (RFM69HCW) since they are pin compatible.</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Regular user LED</li>
  <li>3V3 @ 1A power through a DC/DC buck regulator from USB</li>
  <li>MicroSD Card slot</li>
  <li>GPIO header exposing SWD interface, a full SERCOM (enabling external SPI/I2C/UART peripherals) and a DAC for prototyping</li>
  <li>This version comes with an USB-A plug. It should be easy enough to modify the design to offer other options (such as USB-C).</li>
  <li>Comes preprogrammed with the UF2 Bootloader and latest stable release of CircuitPython.</li>
</ul>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/rfm_radio_dongle">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/bhdynamics/dynalora-usb/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 10 Feb 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/dynalora_usb/</guid>
  </item><item>
    <title>DynOSSAT-EDU EPS</title>
    <link>https://circuitpython.org/board/dynossat_edu_eps/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/dynossat_edu_eps.jpg 300w,
               /assets/images/boards/large/dynossat_edu_eps.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/dynossat_edu_eps.jpg" alt="Image of Board" loading="lazy">
<p>By BH Dynamics</p> <p>DynOSSAT-EDU is the first open source PocketQube educational kit compatible with CircuitPython and Arduino.</p>

<p>This plaform is equipped with all the necessary modules for the operation of a nanosatellite (PocketQube)
in Low Earth Orbit (LEO) that would serve as a device for teaching, training, and driving curiosity about the philosophy and technology related to NewSpace.</p>

<p>This is the EPS (Electric Power System), the module responsible for battery management and power distribution subsystems,
including charging through solar panels using flight-proven MPPT electronics.</p>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Well-known 48 MHz Cortex-M0 ATSAMD21E18 MCU with 256 KB flash + 32 KB RAM</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>Flight-proven SPV1040 Maximum Power Point Tracking (MPPT) IC for solar cells power management</li>
  <li>Ultra low input voltage L6924D Lithium battery charger management IC optimized for pairing with the SPV1040</li>
  <li>Separate 5V and 3.3V power rails generated through high-performance DC/DC converters</li>
  <li>Battery Current/Voltage/Power measurement through the flight-proven INA226 digital meter</li>
  <li>Back-powering protection and load switching through the TPS22918, member of a flight-proven family of switches</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Female USB-C 2.0 connector for power and data logging</li>
  <li>Standard Molex Picoblade 1.5 mm connectors for battery and solar cells</li>
  <li>Connected to the OBC through SPI/I2C/UART for data communication and/or redundancy</li>
  <li>Comes preprogrammed with the UF2 Bootloader and CircuitPython 6.0.0</li>
</ul>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/dynossat-edu-eps">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/21832/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/dynossat_edu_eps/</guid>
  </item><item>
    <title>DynOSSAT-EDU OBC</title>
    <link>https://circuitpython.org/board/dynossat_edu_obc/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/dynossat_edu_obc.jpg 300w,
               /assets/images/boards/large/dynossat_edu_obc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/dynossat_edu_obc.jpg" alt="Image of Board" loading="lazy">
<p>By BH Dynamics</p> <p>DynOSSAT-EDU is the first open source PocketQube educational kit compatible with CircuitPython and Arduino.</p>

<p>This plaform is equipped with all the necessary modules for the operation of a nanosatellite (PocketQube)
in Low Earth Orbit (LEO) that would serve as a device for teaching, training, and driving curiosity about the philosophy and technology related to NewSpace.</p>

<p>This is the On-Board Computer (OBC), the module responsible for managing the satellite and process sensor data. It
integrates a 9-axis IMU, a gas sensor, a temperature sensor and carries a powerful ATSAMD51.</p>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Powerful ATSAMD51J20A-AU 120 MHz Cortex-M4F processor with 1 MB flash + 256 KB RAM for all your CircuitPython needs</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>High-precision ICM-20948 Inertial Measurement Unit including Accelerometer, Gyroscope and Magnetometer for Attitude management</li>
  <li>MCP9808 Digital Temperature Sensor</li>
  <li>SGP30 TVOC and eqCO2 air quality sensor</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Separate 5V and 3.3V rails, providing up to 1A/500mA respectively</li>
  <li>MicroSD Card slot</li>
  <li>Female USB-C 2.0 connector for power and data logging</li>
  <li>PQBH40 bus exposing 10 digital pins, 6 analog pins (+ true DAC), an I2C bus, an SPI bus and an UART</li>
  <li>Comes preprogrammed with the UF2 bootloader and CircuitPython 6.0.0</li>
</ul>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/dynossat-edu-obc">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/21832/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/dynossat_edu_obc/</guid>
  </item><item>
    <title>E-Fidget</title>
    <link>https://circuitpython.org/board/e_fidget/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/e_fidget.jpg 300w,
               /assets/images/boards/large/e_fidget.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/e_fidget.jpg" alt="Image of Board" loading="lazy">
<p>By 2231puppy</p> <p>The E-Fidget is a new kind of fidget spinner. It uses haptic feedback in the form of 8 vibration
motors to simulate the feeling of spinning while not moving at all. This provides several benefits,
including being able to be “spun” from inside of a pocket to reduce distraction, and much lower noise levels.
It’s equipped with the venerable RP2040, and it’s 100% OSHW! Includes 16 MBits (2 Megabytes) of external QSPI flash.
It’ll be available for purchase soon, or you can download the source files and order one today!</p>

<h2 id="more-info">More Info</h2>

<p><a href="https://e-fidget.xyz">Documentation</a></p>

<p><a href="https://github.com/2231puppy/E-Fidget">Design Source</a></p>

<h2 id="purchase">Purchase</h2>

<p>Coming soon! In the meantime, you can download the design sources from the link above and make one yourself!</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 04 Jan 2023 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/e_fidget/</guid>
  </item><item>
    <title>EdgeBadge</title>
    <link>https://circuitpython.org/board/edgebadge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/edgebadge.jpg 300w,
               /assets/images/boards/large/edgebadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/edgebadge.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Machine learning has come to the ‘edge’ - small microcontrollers that can run a very miniature version of TensorFlow Lite to do ML computations.</p>

<p>But you don’t need super complex hardware to start developing your own TensorFlow models! We’ve adapted our popular PyBadge board to add a microphone so you can dip your toes into machine learning waters. It does everything that the PyBadge does, and as we make more projects that use Machine Learning we’ll adapt this board to make it better and better for machine learning.</p>

<p>The EdgeBadge is a compact board - it’s credit card sized. It’s powered by our favorite chip, the ATSAMD51, with 512KB of flash and 192KB of RAM. We add 2 MB of QSPI flash for file storage, handy for TensorFlow Lite files, images, fonts, sounds, or other assets.</p>

<p>We’ve added a PDM microphone on the front as an input for micro speech recognition. Our Arduino library has some demos you can get started with to recognize various word pairs like “yes/no”, “up/down” and “cat/dog”. <strong>TensorFlow Lite for microcontrollers is very cutting-edge so expect to see a lot of development happening in this area, with lots of code and process changes.</strong></p>

<p>You can code the EdgeBadge with: <a href="https://circuitpython.org/">CircuitPython</a>, <a href="https://arcade.makecode.com/hardware">MakeCode Arcade</a>, <a href="https://www.tensorflow.org/lite/microcontrollers">TensorFlow Lite for Microcontrollers / Arduino</a>, and more!</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4400">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 18 Nov 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/edgebadge/</guid>
  </item><item>
    <title>ELECFREAKS Pico:ed</title>
    <link>https://circuitpython.org/board/elecfreaks_picoed/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/elecfreaks_picoed.jpg 300w,
               /assets/images/boards/large/elecfreaks_picoed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/elecfreaks_picoed.jpg" alt="Image of Board" loading="lazy">
<p>By ELECFREAKS</p> <p>The <strong>Pico:ed</strong> is a development board based on <strong>Raspberry Pi RP2040 MCU</strong>. It uses dual-core Arm Cortex-M0+ processor with 264KB RAM. The front of the board contains two buttons and a 7x17 dot matrix screen, which can be conveniently used for classroom teaching.</p>

<h2 id="so-why-choose-picoed">So why choose Pico:ed?</h2>

<ul>
  <li>A development board based on RP2040. Make it easier to use our Pico:ed in the classroom.</li>
  <li>Wavy edge connector to connect to devices without soldering.</li>
  <li>7x17 LED fully programmable display. Can display text, numbers, and images.</li>
  <li>Two programmable buttons and logo LED.</li>
  <li>There is a button that can be reset directly RP2040.</li>
  <li>Designed by Raspberry Pi, RP2040 features a dual-core Arm Cortex-M0+ processor with 264kB internal RAM and support for up to 16MB of off-chip flash.</li>
  <li>A buzzer for playing beeps and tones.</li>
</ul>

<h2 id="features">Features</h2>

<ol>
  <li>Raspberry Pi RP2040 Chip</li>
  <li>7x17 LED matrix screen</li>
  <li>Built-in LED</li>
  <li>Built-in buzzer</li>
  <li>2 programmable buttons</li>
  <li>USB &amp; battery connector</li>
  <li>Power status LED</li>
  <li>Bootsel &amp; reset button</li>
  <li>25-pins notched edge connector</li>
  <li>Exquisite design</li>
</ol>

<h2 id="specifications">Specifications</h2>

<ul>
  <li>MCU: RP2040</li>
  <li>SRAM: 264kB</li>
  <li>Flash: 2MB</li>
  <li>Programmable IO: 19 Pcs</li>
  <li>Onboard Device: Buzzer, LED, 7x17 LED matrix, 2 Buttons</li>
  <li>Program Language: CircuitPython/MicroPython，C++</li>
  <li>Size: About 52mm x 42mm</li>
  <li>Net Weight: 10g</li>
</ul>

<h2 id="documentations">Documentations</h2>

<ul>
  <li><a href="https://www.elecfreaks.com/learn-en/pico-ed/index.html">Click here for Getting Started with Pico:ed.</a></li>
  <li><a href="https://docs.circuitpython.org/">Click here for Getting Started with CircuitPython.</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.elecfreaks.com/elecfreaks-pico-ed-v2.html">ELECFREAKS</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/elecfreaks_picoed/</guid>
  </item><item>
    <title>Electrolama minik Octave</title>
    <link>https://circuitpython.org/board/electrolama_minik/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/electrolama_minik.jpg 300w,
               /assets/images/boards/large/electrolama_minik.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/electrolama_minik.jpg" alt="Image of Board" loading="lazy">
<p>By Electrolama</p> <p>A tiny RP2040 module for small embedded things!</p>

<p>minik is designed by Electrolama / @omerk and licensed under the Solderpad Hardware License 2.0.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/electrolama/minik">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electrolama_minik/</guid>
  </item><item>
    <title>Bast Wifi</title>
    <link>https://circuitpython.org/board/electroniccats_bastwifi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/bast_wifi.jpg 300w,
               /assets/images/boards/large/bast_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/bast_wifi.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>The Bast WiFi includes the newer ESP32-S2 module, which is like a little brother to the ESP32 where only one core instead of 2 has cores, it has no BLE implemented, but gains a native USB, a new processor and crypto accelerators for better performance protection against physical fault injection attacks and more improvements over the SoC.</p>

<p>Please note that the ESP32-S2 is still intended for developers. Not all peripherals are fully documented with sample code on Arduino and there are still some bugs that can be found that have yet to be fixed. We know that it is not entirely pleasant but we hope you understand us.</p>

<p>Some elements are still in development; For this reason, we recommend this board to manufacturers who have some experience in microcontroller programming, and not as a first development board.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/bast-wifi/">Electronic Cats</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 12 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electroniccats_bastwifi/</guid>
  </item><item>
    <title>Blip</title>
    <link>https://circuitpython.org/board/electronut_labs_blip/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/electronut_labs_blip.png 300w,
               /assets/images/boards/large/electronut_labs_blip.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/electronut_labs_blip.png" alt="Image of Board" loading="lazy">
<p>By Electronut Labs</p> <p>Blip is a development board for Bluetooth Low Energy (BLE) and 802.15.4 based wireless applications,
based on the Nordic Semiconductor nRF52840 SoC. It has a Black Magic Probe compatible programmer and
debugger built in, along with temperature/humidity sensor, ambient light intensity sensor, and a
3-axis accelerometer. It can be used to prototype very low power devices. It also has provision
for an SD card slot, which makes it a complete and versatile development board.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://gitlab.com/electronutlabs-public/ElectronutLabs-blip#purchasing-blip">Blip purchase information</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 23 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electronut_labs_blip/</guid>
  </item><item>
    <title>Papyr</title>
    <link>https://circuitpython.org/board/electronut_labs_papyr/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/electronut_labs_papyr.jpg 300w,
               /assets/images/boards/large/electronut_labs_papyr.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/electronut_labs_papyr.jpg" alt="Image of Board" loading="lazy">
<p>By Electronut Labs</p> <p>Papyr is a connected e-paper display powered by Nordic Semiconductor’s nRF52840 chip. You can read more details on the hardware, and installation instructions for Circuitpython on the <a href="https://docs.electronut.in/papyr/circuitpython/">docs site</a> for <a href="https://electronut.in">Electronut Labs</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://gitlab.com/electronutlabs-public/papyr#buy-papyr">Papyr purchase information</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 23 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electronut_labs_papyr/</guid>
  </item><item>
    <title>Escornabot Makech</title>
    <link>https://circuitpython.org/board/escornabot_makech/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/escornabot_makech.jpg 300w,
               /assets/images/boards/large/escornabot_makech.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/escornabot_makech.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>Escornabot is an open source/hardware project that aims to bring robotics and programming to children.</p>

<p>The basic Escornabot can be programmed with the robot’s buttons to execute sequence of movements. From this, imagination is the only one limit to the possibilities.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://github.com/ElectronicCats/escornabot">Escornabot Makech- GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/escornabot_makech/</guid>
  </item><item>
    <title>ESP-EYE</title>
    <link>https://circuitpython.org/board/espressif_esp32_eye/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32_eye.jpg 300w,
               /assets/images/boards/large/espressif_esp32_eye.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32_eye.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>Ever wanted to dabble in face and/or speech recognition? <a href="https://www.espressif.com/">Espressif’s</a> <strong>ESP-EYE</strong> is a miniature <a href="https://www.adafruit.com/?q=ESP32">ESP32-based</a> development board that combines a digital microphone, ESP32 (of course) with 8 MB PSRAM and 4 MB flash, and a 2 megapixel camera. There’s a few buttons and LEDs as well for basic control and configuration.</p>

<p>Unlike some boards, this codebase does not require internet connectivity - you don’t have to send video or audio data to ‘the cloud’ - it’s all processed on-chip! The built in demo shows off what it can do:</p>

<ul>
  <li>Plug into a computer USB port and open up a serial port connection at 115,200 baud to the new serial port</li>
  <li>Once the red LED is lit, activate the board with the watchword “Hi Lehshin” (in documents they spell it lexin, the x is pronounced as a shh sound)</li>
  <li>The red LED will blink - then connect to the new Wi-Fi access point created</li>
  <li>Open up a web browser to http://192.168.4.1/face_stream</li>
  <li>Point the camera at faces to show off the recognition boxes! Video is about 2 frames per second, not super fast.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4095">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 21 Aug 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32_eye/</guid>
  </item><item>
    <title>ESP32-C3-DevKitM-1-N4</title>
    <link>https://circuitpython.org/board/espressif_esp32c3_devkitm_1_n4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32c3_devkitm_1_n4.jpg 300w,
               /assets/images/boards/large/espressif_esp32c3_devkitm_1_n4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32c3_devkitm_1_n4.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-C3-DevKitM-1 is an entry-level <strong>RISC V</strong> development board equipped with the ESP32-C3-MINI-1-N4, a powerful, generic Wi-Fi + Bluetooth LE MCU module that features a rich set of peripherals, yet an optimized size. It’s an ideal choice for a wide variety of application scenarios related to the Internet of Things (IoT), such as embedded systems, smart homes, wearable electronics, etc. ESP32-C3-DevKitM-1 comes with a PCB antenna. <strong>This version is equipped with the ESP32-C3-MINI-1-N4 with 4MB SPI Flash and no PSRAM.</strong></p>

<p><strong>Please note:</strong> The C<strong>3</strong> is <em>similar</em> to the ESP32 - but uses <strong>RISC V</strong> as a core, not Tensilica, and has Bluetooth LE (not classic!) However, there is minimal support for this dev board. For example, as of the time of this writing, there is no CircuitPython support - only Arduino and ESP IDF! Please purchase if you’re doing development with the C3, and recognize that it’s a different core than the classic ESP32s most folks have used.</p>

<p>Most of the I/O pins on the module are broken out to the pin headers on both sides of this board for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-C3-DevKitM-1 on a breadboard.</p>

<p>At the core of the module is ESP32-C3, which has a 32-bit RISC-V single-core processor. The ESP32-C3 integrates a rich set of peripherals, ranging from UART, I2C, I2S, remote control peripheral, LED PWM controller, general DMA controller, TWAI controller, USB Serial/JTAG controller, temperature sensor, and ADC. It also includes SPI, Dual SPI, and Quad SPI interfaces.</p>

<p>There are three mutually exclusive ways to provide power to the board:</p>

<ul>
  <li>Micro-USB Port, default power supply</li>
  <li>5V and GND pin headers</li>
  <li>3V3 and GND pin headers</li>
</ul>

<p>It is recommended to use the first option: Micro-USB Port.</p>

<p><strong>Components:</strong></p>

<ul>
  <li><strong>ESP32-C3-MINI-1-N4</strong>: ESP32-C3-MINI-1-N4 from Espressif is a powerful and general-purpose RISC V module that offers Wi-Fi and Bluetooth LE coexistence. It has a PCB antenna and 4 MB SPI flash.</li>
  <li><strong>5V to 3.3V LDO</strong>: Power regulator that converts a 5V supply into a 3.3V output.</li>
  <li><strong>5V Power On LED</strong>: Turns on when the USB power is connected to the board.</li>
  <li><strong>Pin Headers</strong>: All available GPIO pins (except for the SPI bus for flash) are broken out to the pin headers on the board for easy interfacing and programming. For details, please see <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#user-guide-s3-devkitc-1-v1-header-blocks">Header Block</a>.</li>
  <li><strong>Micro-USB Port</strong>: USB interface. Power supply for the board as well as the communication interface between a computer and the ESP32-C3 chip.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port.</li>
  <li><strong>Reset Button:</strong> Press this button to restart the system.</li>
  <li><strong>USB-to-UART Bridge:</strong> Single USB-to-UART bridge chip provides transfer rates up to 3 Mbps.</li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO8.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.digikey.com/en/products/detail/espressif-systems/ESP32-C3-DEVKITM-1/13684315">DigiKey</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 14 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32c3_devkitm_1_n4/</guid>
  </item><item>
    <title>ESP32-S2-DevKitC-1-N4</title>
    <link>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s2_devkitc_1_n4.jpg 300w,
               /assets/images/boards/large/espressif_esp32s2_devkitc_1_n4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s2_devkitc_1_n4.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>ESP32-S2-DevKitC-1 is an entry-level development board based on ESP32-S2-SOLO (on-board PCB antenna) or ESP32-S2-SOLO-U (external antenna connector), which are two general-purpose modules with a 4 MB SPI flash. This board integrates complete Wi-Fi functions.</p>

<p>Most of the I/O pins are broken out to the pin headers on both sides for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S2-DevKitC-1 on a breadboard.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003578116249.html">AliExpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n4/</guid>
  </item><item>
    <title>ESP32-S2-DevKitC-1-N4R2</title>
    <link>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n4r2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s2_devkitc_1_n4r2.jpg 300w,
               /assets/images/boards/large/espressif_esp32s2_devkitc_1_n4r2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s2_devkitc_1_n4r2.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>ESP32-S2-DevKitC-1 is an entry-level development board based on ESP32-S2-SOLO (on-board PCB antenna) or ESP32-S2-SOLO-U (external antenna connector), which are two general-purpose modules with a 4 MB SPI flash. This board integrates complete Wi-Fi functions.</p>

<p>Most of the I/O pins are broken out to the pin headers on both sides for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S2-DevKitC-1 on a breadboard.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003578116249.html">AliExpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 14 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n4r2/</guid>
  </item><item>
    <title>ESP32-S2-DevKitC-1-N8R2</title>
    <link>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n8r2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s2_devkitc_1_n8r2.jpg 300w,
               /assets/images/boards/large/espressif_esp32s2_devkitc_1_n8r2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s2_devkitc_1_n8r2.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>ESP32-S2-DevKitC-1 is an entry-level development board based on ESP32-S2-SOLO (on-board PCB antenna) or ESP32-S2-SOLO-U (external antenna connector), which are two general-purpose modules with a 4 MB SPI flash. This board integrates complete Wi-Fi functions.</p>

<p>Most of the I/O pins are broken out to the pin headers on both sides for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S2-DevKitC-1 on a breadboard.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.digikey.com/en/products/detail/espressif-systems/ESP32-S2-DEVKITC-1-N8R2/16688755">Digi-Key</a></li>
  <li><a href="https://amzn.to/3rXL5d8">Amazon</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 13 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s2_devkitc_1_n8r2/</guid>
  </item><item>
    <title>ESP32-S3 Box</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_box/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_box.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_box.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_box.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The <strong>ESP-BOX</strong> is a new generation AIoT development platform released by Espressif Systems. The ESP32-S3-BOX is an AIoT development board that is based on Espressif’s ESP32-S3 Wi-Fi + Bluetooth 5 (LE) SoC. The ESP32-S3-BOX provides a platform for developing the control of home appliances using Voice Assistance + touch screen controller, sensor, infrared controller, and intelligent Wi-Fi gateway.</p>

<p>The ESP32-S3-BOX comes with pre-built firmware that supports offline voice interaction, with the SDKs and examples provided by Espressif, you will be able to develop a wide variety of AIoT applications based on the ESP32-S3-BOX such as online and offline voice assistants, voice-enabled devices, HMI touch-screen devices, control panels, multi-protocol gateways easily.</p>

<p><strong>ESP-BOX features:</strong></p>

<ul>
  <li>Supports far-field voice interaction with 2 mics</li>
  <li>Offline voice wake-up with high wake-up rate</li>
  <li>Offline speech commands recognition in Chinese and English languages with high recognition rate</li>
  <li>Reconfigurable voice commands in Chinese and English languages</li>
  <li>Flexible and reusable GUI framework</li>
  <li>End-to-end IoT development framework ESP-RainMaker</li>
  <li>
    <p>Pmod™ compatible headers support expand peripheral modules</p>
  </li>
  <li>For getting started with ESP32-S3-BOX, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md">Please refer to the Getting Started</a></li>
  <li>For voice control and customization, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md#voice-assistance-control-and-customization">please refer to the Voice Assistance Control and Customization</a></li>
  <li>For controlling the device by graphical user interface, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md#esp32-s3-box-graphical-user-interface">please refer to the GUI Guide</a></li>
  <li>For more details of ESP32-S3-BOX hardware, <a href="https://github.com/espressif/esp-box/blob/master/docs/hardware_overview.md">Please refer to ESP32-S3-BOX hardware overview</a></li>
  <li>For the latest version firmware, <a href="https://github.com/espressif/esp-box/blob/master/docs/firmware_update.md">Please refer to the ESP32-S3-BOX firmware update</a></li>
</ul>

<p><strong>Important Note: We recommend <a href="https://github.com/espressif/esp-box/blob/master/docs/firmware_update.md">updating the ESP32-S3-BOX firmware</a> when you first receive the kit to have the latest features and bugfix. Current firmware support is though ESP-IDF (not Arduino yet)</strong></p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5290">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 14 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_box/</guid>
  </item><item>
    <title>ESP32-S3 Box Lite</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_box_lite/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_box_lite.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_box_lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_box_lite.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The <strong>ESP-BOX</strong> is a new generation AIoT development platform released by Espressif Systems. The ESP32-S3-BOX is an AIoT development board that is based on Espressif’s ESP32-S3 Wi-Fi + Bluetooth 5 (LE) SoC. The ESP32-S3-BOX provides a platform for developing the control of home appliances using Voice Assistance + touch screen controller, sensor, infrared controller, and intelligent Wi-Fi gateway.</p>

<p><strong><a href="https://www.espressif.com/en/news/ESP32-S3-BOX_video">The Lite version is a little different than the non-Lite:</a></strong></p>

<ul>
  <li>Does <strong>not</strong> include the dock that serves as a stand for your device.</li>
  <li>Comes with 3 mechanical buttons instead of software buttons</li>
  <li>Does not support AEC or waking during speak/music playback</li>
</ul>

<p><a href="https://www.espressif.com/en/news/ESP32-S3-BOX_video">Full differences are documented here.</a><em>**</em> If you want the original S3-Box, check out <a href="http://www.adafruit.com/product/5290">this version</a>.</p>

<p>The ESP32-S3-BOX Lite comes with pre-built firmware that supports offline voice interaction, with the SDKs and examples provided by Espressif, you will be able to develop a wide variety of AIoT applications based on the ESP32-S3-BOX Lite such as online and offline voice assistants, voice-enabled devices, HMI touch-screen devices, control panels, multi-protocol gateways easily.</p>

<p><strong>ESP-BOX Lite features:</strong></p>

<ul>
  <li>Supports far-field voice interaction with 2 mics</li>
  <li>Offline voice wake-up with high wake-up rate</li>
  <li>Offline speech commands recognition in Chinese and English languages with high recognition rate</li>
  <li>Reconfigurable voice commands in Chinese and English languages</li>
  <li>Flexible and reusable GUI framework</li>
  <li>End-to-end IoT development framework ESP-RainMaker</li>
  <li>
    <p>Pmod™ compatible headers support expand peripheral modules</p>
  </li>
  <li>For getting started with ESP32-S3-BOX, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md">Please refer to the Getting Started</a></li>
  <li>For voice control and customization, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md#voice-assistance-control-and-customization">please refer to the Voice Assistance Control and Customization</a></li>
  <li>For controlling the device by graphical user interface, <a href="https://github.com/espressif/esp-box/blob/master/docs/getting_started.md#esp32-s3-box-graphical-user-interface">please refer to the GUI Guide</a></li>
  <li>For more details of ESP32-S3-BOX hardware, <a href="https://github.com/espressif/esp-box/blob/master/docs/hardware_overview.md">Please refer to ESP32-S3-BOX hardware overview</a></li>
  <li>For the latest version firmware, <a href="https://github.com/espressif/esp-box/blob/master/docs/firmware_update.md">Please refer to the ESP32-S3-BOX firmware update</a></li>
</ul>

<p><strong>Important Note: We recommend <a href="https://github.com/espressif/esp-box/blob/master/docs/firmware_update.md">updating the ESP32-S3-BOX firmware</a> when you first receive the kit to have the latest features and bugfix. Current firmware support is though ESP-IDF (not Arduino yet)</strong></p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5511">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 08 Jul 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_box_lite/</guid>
  </item><item>
    <title>ESP32-S3-DevKitC-1-N8</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_devkitc_1.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-S3-DevKitC-1 is an entry-level development board equipped with ESP32-S3-WROOM-1, a general-purpose Wi-Fi + Bluetooth LE MCU module that integrates complete Wi-Fi and Bluetooth LE functions. <strong>This version is equipped with the ESP32-S3-WROOM-1 (PCB antenna) with 8MB Flash and no PSRAM.</strong></p>

<p><strong>Please note:</strong> The S<strong>3</strong> is <em>similar</em> to the ESP32-S<strong>2</strong> - but adds a dual core and Bluetooth LE (not classic!) However, there is minimal support for this dev board. For example, as of the time of this writing, there is no Arduino or CircuitPython support - only ESP IDF! Please purchase if you’re doing development with the S3, and OK with stuff not working 100% out of the box.</p>

<p>Most of the I/O pins on the module are broken out to the pin headers on both sides of this board for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S3-DevKitC-1 on a breadboard. We particularly like that there’s a debug UART/USB port and a separate native USB port, so you can upload/debug/USB all at once.</p>

<p>At the core of the module is an ESP32-S3FN8, an Xtensa® 32-bit LX7 CPU that operates at up to 240 MHz. You can power off the CPU and make use of the low-power co-processor to constantly monitor the peripherals for changes or crossing of thresholds.</p>

<p>ESP32-S3FN8 integrates a rich set of peripherals including SPI, LCD, Camera interface, UART, I2C, I2S, remote control, pulse counter, LED PWM, USB Serial/Jtag, MCPWM, SDIO host, GDMA, TWAI® controller (compatible with ISO 11898-1, i.e. CAN Specification 2.0), ADC, touch sensor, temperature sensor, timers, and watchdogs, as well as up to 45 GPIOs. It also includes a full-speed USB 1.1 On-The-Go (OTG) interface to enable USB communication</p>

<p>There are three mutually exclusive ways to provide power to the board:</p>

<ul>
  <li>USB-to-UART Port and ESP32-S3 USB Port (either one or both), default power supply (recommended)</li>
  <li>5V and G (GND) pins</li>
  <li>3v3 and G (GND) pins</li>
</ul>

<p><strong>Components:</strong></p>

<ul>
  <li><strong>ESP32-S3-WROOM-1</strong>: ESP32-S3-WROOM-1 is a powerful, generic Wi-Fi + Bluetooth LE MCU module that has a rich set of peripherals. It provides acceleration for neural network computing and signal processing workloads. ESP32-S3-WROOM-1 comes with a PCB antenna.</li>
  <li><strong>5V to 3.3V LDO</strong>: Power regulator that converts a 5V supply into a 3.3V output.</li>
  <li><strong>Pin Headers</strong>: All available GPIO pins (except for the SPI bus for flash) are broken out to the pin headers on the board for easy interfacing and programming. For details, please see <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#user-guide-s3-devkitc-1-v1-header-blocks">Header Block</a>.</li>
  <li><strong>USB-to-UART Port</strong>: A Micro-USB port used for power supply to the board, for flashing applications to the chip, as well as for communication with the chip via the on-board USB-to-UART bridge.</li>
  <li><strong>Native ESP32-S3 USB Port</strong>: ESP32-S3 full-speed USB OTG interface, compliant with the USB 1.1 specification. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB 1.1 protocols, as well as for JTAG debugging.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>USB-to-UART Bridge:</strong> Single USB-to-UART bridge chip provides transfer rates up to 3 Mbps.</li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO48.</li>
  <li><strong>3.3V Power On LED</strong>: Turns on when the USB power is connected to the board.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5312">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8/</guid>
  </item><item>
    <title>ESP32-S3-DevKitC-1-N8R2</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8r2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_devkitc_1.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-S3-DevKitC-1 is an entry-level development board equipped with ESP32-S3-WROOM-1, a general-purpose Wi-Fi + Bluetooth LE MCU module that integrates complete Wi-Fi and Bluetooth LE functions. <strong>This version is equipped with the ESP32-S3-WROOM-1 (PCB antenna) with 8MB Flash and 2MB PSRAM.</strong></p>

<p><strong>Please note:</strong> The S<strong>3</strong> is <em>similar</em> to the ESP32-S<strong>2</strong> - but adds a dual core and Bluetooth LE (not classic!) However, there is minimal support for this dev board. For example, as of the time of this writing, there is no Arduino or CircuitPython support - only ESP IDF! Please purchase if you’re doing development with the S3, and OK with stuff not working 100% out of the box.</p>

<p>Most of the I/O pins on the module are broken out to the pin headers on both sides of this board for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S3-DevKitC-1 on a breadboard. We particularly like that there’s a debug UART/USB port and a separate native USB port, so you can upload/debug/USB all at once.</p>

<p>At the core of the module is an ESP32-S3FN8, an Xtensa® 32-bit LX7 CPU that operates at up to 240 MHz. You can power off the CPU and make use of the low-power co-processor to constantly monitor the peripherals for changes or crossing of thresholds.</p>

<p>ESP32-S3FN8 integrates a rich set of peripherals including SPI, LCD, Camera interface, UART, I2C, I2S, remote control, pulse counter, LED PWM, USB Serial/Jtag, MCPWM, SDIO host, GDMA, TWAI® controller (compatible with ISO 11898-1, i.e. CAN Specification 2.0), ADC, touch sensor, temperature sensor, timers, and watchdogs, as well as up to 45 GPIOs. It also includes a full-speed USB 1.1 On-The-Go (OTG) interface to enable USB communication</p>

<p>There are three mutually exclusive ways to provide power to the board:</p>

<ul>
  <li>USB-to-UART Port and ESP32-S3 USB Port (either one or both), default power supply (recommended)</li>
  <li>5V and G (GND) pins</li>
  <li>3v3 and G (GND) pins</li>
</ul>

<p><strong>Components:</strong></p>

<ul>
  <li><strong>ESP32-S3-WROOM-1</strong>: ESP32-S3-WROOM-1 is a powerful, generic Wi-Fi + Bluetooth LE MCU module that has a rich set of peripherals. It provides acceleration for neural network computing and signal processing workloads. ESP32-S3-WROOM-1 comes with a PCB antenna.</li>
  <li><strong>5V to 3.3V LDO</strong>: Power regulator that converts a 5V supply into a 3.3V output.</li>
  <li><strong>Pin Headers</strong>: All available GPIO pins (except for the SPI bus for flash) are broken out to the pin headers on the board for easy interfacing and programming. For details, please see <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#user-guide-s3-devkitc-1-v1-header-blocks">Header Block</a>.</li>
  <li><strong>USB-to-UART Port</strong>: A Micro-USB port used for power supply to the board, for flashing applications to the chip, as well as for communication with the chip via the on-board USB-to-UART bridge.</li>
  <li><strong>Native ESP32-S3 USB Port</strong>: ESP32-S3 full-speed USB OTG interface, compliant with the USB 1.1 specification. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB 1.1 protocols, as well as for JTAG debugging.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>USB-to-UART Bridge:</strong> Single USB-to-UART bridge chip provides transfer rates up to 3 Mbps.</li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO48.</li>
  <li><strong>3.3V Power On LED</strong>: Turns on when the USB power is connected to the board.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5310">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 07 Dec 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8r2/</guid>
  </item><item>
    <title>ESP32-S3-DevKitC-1-N8R8</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8r8/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_devkitc_1.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_devkitc_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-S3-DevKitC-1 is an entry-level development board equipped with ESP32-S3-WROOM-1, a general-purpose Wi-Fi + Bluetooth LE MCU module that integrates complete Wi-Fi and Bluetooth LE functions. <strong>This version is equipped with the ESP32-S3-WROOM-1 (PCB antenna) with 8MB Flash and 8MB PSRAM.</strong></p>

<p><strong>Please note:</strong> The S<strong>3</strong> is <em>similar</em> to the ESP32-S<strong>2</strong> - but adds a dual core and Bluetooth LE (not classic!) However, there is minimal support for this dev board. For example, as of the time of this writing, there is no Arduino or CircuitPython support - only ESP IDF! Please purchase if you’re doing development with the S3, and OK with stuff not working 100% out of the box.</p>

<p>Most of the I/O pins on the module are broken out to the pin headers on both sides of this board for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S3-DevKitC-1 on a breadboard. We particularly like that there’s a debug UART/USB port and a separate native USB port, so you can upload/debug/USB all at once.</p>

<p>At the core of the module is an ESP32-S3FN8, an Xtensa® 32-bit LX7 CPU that operates at up to 240 MHz. You can power off the CPU and make use of the low-power co-processor to constantly monitor the peripherals for changes or crossing of thresholds.</p>

<p>ESP32-S3FN8 integrates a rich set of peripherals including SPI, LCD, Camera interface, UART, I2C, I2S, remote control, pulse counter, LED PWM, USB Serial/Jtag, MCPWM, SDIO host, GDMA, TWAI® controller (compatible with ISO 11898-1, i.e. CAN Specification 2.0), ADC, touch sensor, temperature sensor, timers, and watchdogs, as well as up to 45 GPIOs. It also includes a full-speed USB 1.1 On-The-Go (OTG) interface to enable USB communication</p>

<p>There are three mutually exclusive ways to provide power to the board:</p>

<ul>
  <li>USB-to-UART Port and ESP32-S3 USB Port (either one or both), default power supply (recommended)</li>
  <li>5V and G (GND) pins</li>
  <li>3v3 and G (GND) pins</li>
</ul>

<p><strong>Components:</strong></p>

<ul>
  <li><strong>ESP32-S3-WROOM-1</strong>: ESP32-S3-WROOM-1 is a powerful, generic Wi-Fi + Bluetooth LE MCU module that has a rich set of peripherals. It provides acceleration for neural network computing and signal processing workloads. ESP32-S3-WROOM-1 comes with a PCB antenna.</li>
  <li><strong>5V to 3.3V LDO</strong>: Power regulator that converts a 5V supply into a 3.3V output.</li>
  <li><strong>Pin Headers</strong>: All available GPIO pins (except for the SPI bus for flash) are broken out to the pin headers on the board for easy interfacing and programming. For details, please see <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#user-guide-s3-devkitc-1-v1-header-blocks">Header Block</a>.</li>
  <li><strong>USB-to-UART Port</strong>: A Micro-USB port used for power supply to the board, for flashing applications to the chip, as well as for communication with the chip via the on-board USB-to-UART bridge.</li>
  <li><strong>Native ESP32-S3 USB Port</strong>: ESP32-S3 full-speed USB OTG interface, compliant with the USB 1.1 specification. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB 1.1 protocols, as well as for JTAG debugging.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>USB-to-UART Bridge:</strong> Single USB-to-UART bridge chip provides transfer rates up to 3 Mbps.</li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO48.</li>
  <li><strong>3.3V Power On LED</strong>: Turns on when the USB power is connected to the board.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5336">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 15 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_devkitc_1_n8r8/</guid>
  </item><item>
    <title>ESP32-S3-DevKitM-1-N8</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_devkitm_1_n8/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_devkitm_1_n8.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_devkitm_1_n8.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_devkitm_1_n8.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-S3-DevKitM-1 is an entry-level development board equipped with the ESP32-S3-MINI-1, a powerful, generic Wi-Fi + Bluetooth LE MCU module that features a rich set of peripherals, yet an optimized size. It’s an ideal choice for a wide variety of application scenarios related to the Internet of Things (IoT), such as embedded systems, smart homes, wearable electronics, etc. ESP32-S3-MINI-1 comes with a PCB antenna. <strong>This version is equipped with the ESP32-S3-MINI-1 with 8MB Flash.</strong></p>

<p><strong>Please note:</strong> The S<strong>3</strong> is <em>similar</em> to the ESP32-S<strong>2</strong> - but adds a dual core and Bluetooth LE (not classic!) However, there is minimal support for this dev board. For example, as of the time of this writing, there is no Arduino or CircuitPython support - only ESP IDF! Please purchase if you’re doing development with the S3, and OK with stuff not working 100% out of the box.</p>

<p>Most of the I/O pins on the module are broken out to the pin headers on both sides of this board for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S3-DevKitM-1 on a breadboard.</p>

<p>At the core of the module is an ESP32-S3FN8, an Xtensa® 32-bit LX7 CPU that operates at up to 240 MHz. You can power off the CPU and make use of the low-power co-processor to constantly monitor the peripherals for changes or crossing of thresholds.</p>

<p>ESP32-S3FN8 integrates a rich set of peripherals including SPI, LCD, Camera interface, UART, I2C, I2S, remote control, pulse counter, LED PWM, USB Serial/Jtag, MCPWM, SDIO host, GDMA, TWAI® controller (compatible with ISO 11898-1, i.e. CAN Specification 2.0), ADC, touch sensor, temperature sensor, timers, and watchdogs, as well as up to 45 GPIOs. It also includes a full-speed USB 1.1 On-The-Go (OTG) interface to enable USB communication</p>

<p>There are three mutually exclusive ways to provide power to the board:</p>

<ul>
  <li>USB-to-UART Port and ESP32-S3 USB Port (either one or both), default power supply (recommended)</li>
  <li>5V and G (GND) pins</li>
  <li>3v3 and G (GND) pins</li>
</ul>

<p><strong>Components:</strong></p>

<ul>
  <li><strong>ESP32-S3-Mini-1</strong>: ESP32-S3-Mini-1 is a powerful, generic Wi-Fi + Bluetooth LE MCU module that has a rich set of peripherals. It provides acceleration for neural network computing and signal processing workloads. ESP32-S3-Mini-1 comes with a PCB antenna.</li>
  <li><strong>5V to 3.3V LDO</strong>: Power regulator that converts a 5V supply into a 3.3V output.</li>
  <li><strong>Pin Headers</strong>: All available GPIO pins (except for the SPI bus for flash) are broken out to the pin headers on the board for easy interfacing and programming. For details, please see <a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/hw-reference/esp32s3/user-guide-devkitc-1.html#user-guide-s3-devkitc-1-v1-header-blocks">Header Block</a>.</li>
  <li><strong>USB-to-UART Port</strong>: A Micro-USB port used for power supply to the board, for flashing applications to the chip, as well as for communication with the chip via the on-board USB-to-UART bridge.</li>
  <li><strong>Native ESP32-S3 USB Port</strong>: ESP32-S3 full-speed USB OTG interface, compliant with the USB 1.1 specification. The interface is used for power supply to the board, for flashing applications to the chip, for communication with the chip using USB 1.1 protocols, as well as for JTAG debugging.</li>
  <li><strong>Boot Button</strong>: Download button. Holding down <strong>Boot</strong> and then pressing <strong>Reset</strong> initiates Firmware Download mode for downloading firmware through the serial port.</li>
  <li><strong>Reset Button</strong></li>
  <li><strong>USB-to-UART Bridge:</strong> Single USB-to-UART bridge chip provides transfer rates up to 3 Mbps.</li>
  <li><strong>RGB LED</strong>: Addressable RGB LED, driven by GPIO48.</li>
  <li><strong>3.3V Power On LED</strong>: Turns on when the USB power is connected to the board.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5311">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_devkitm_1_n8/</guid>
  </item><item>
    <title>ESP32-S3-EYE</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_eye/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_eye.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_eye.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_eye.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The ESP32-S3-EYE is a small-sized AI development board produced by Espressif. It is based on the ESP32-S3 SoC and ESP-WHO, Espressif’s AI development framework. It features a 2-Megapixel camera, an LCD display, and a microphone, which are used for image recognition and audio processing. ESP32-S3-EYE offers plenty of storage, with an 8 MB Octal PSRAM and a 8 MB flash. It also supports image transmission via Wi-Fi and debugging through a Micro-USB port. With ESP-WHO, you can develop a variety of AIoT applications, such as smart doorbell, surveillance systems, facial recognition time clock, etc.</p>

<ul>
  <li>Equipped with ESP32-S3-WROOM-1 module</li>
  <li>Equipped with a 2 megapixel camera, and a 1.3-inch LCD screen</li>
  <li>High-performance image recognition and voice wake-up</li>
  <li>8 MB Flash and 8 MB PSRAM</li>
  <li>Support Wi-Fi image transmission, Micro-USB port debugging</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://amzn.to/3wlkuJw">Amazon</a></li>
  <li><a href="https://mou.sr/3KfVSrC">Mouser</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 21 Aug 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_eye/</guid>
  </item><item>
    <title>ESP32-S3-USB-OTG-N8</title>
    <link>https://circuitpython.org/board/espressif_esp32s3_usb_otg_n8/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_esp32s3_usb_otg_n8.jpg 300w,
               /assets/images/boards/large/espressif_esp32s3_usb_otg_n8.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_esp32s3_usb_otg_n8.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>ESP32-S3-USB-OTG is a development board that focuses on USB-OTG function verification and application development. It is based on ESP32-S3 SoC, supports Wi-Fi and BLE 5.0 wireless functions, and supports USB host and USB device functions. It can be used to develop applications such as wireless storage devices, Wi-Fi network cards, LTE MiFi, multimedia devices, virtual keyboards and mice. The development board has the following features:</p>

<ul>
  <li>Onboard ESP32-S3-MINI-1-N8 module, with built-in 8 MB flash</li>
  <li>Onboard USB Type-A host and device interface, with built-in USB interface switching circuit</li>
  <li>Onboard USB to serial debugging chip (Micro USB interface)</li>
  <li>Onboard 1.3-inch LCD color screen, supports GUI</li>
  <li>Onboard SD card interface, compatible with SDIO and SPI interfaces</li>
  <li>Onboard charging IC, can be connected to lithium battery</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.digikey.com/en/products/detail/espressif-systems/ESP32-S3-USB-OTG/15822449">DigiKey</a></li>
  <li><a href="https://amzn.to/3uTJB4F">Amazon</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_esp32s3_usb_otg_n8/</guid>
  </item><item>
    <title>ESP32-S2 Human Machine Interface Dev Kit</title>
    <link>https://circuitpython.org/board/espressif_hmi_devkit_1/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_hmi_devkit_1.jpg 300w,
               /assets/images/boards/large/espressif_hmi_devkit_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_hmi_devkit_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>Espressif’s <strong>ESP32-S2 Human Machine Interface Dev Kit 1 (ESP32-S2-HMI-DevKit-1)</strong> has been specifically designed for human-machine interfaces in smart-home automation controllers, smart speakers with display, smart alarm clocks, etc.</p>

<p>ESP32-S2-HMI-DevKit-1 is powered by the <a href="https://www.adafruit.com/?q=S2+WROVER&amp;sort=BestMatch">ESP32-S2-WROVER module</a>, which supports a 4.3” LCD screen. The development board can have an <em>optional</em> 1,950mAh rechargeable lithium battery installed. There’s lots of peripheral interfaces such as an extra USB serial programming/UART port, SPI, TWAI, I2C, and an SD card. It supports various sensors and functions such as audio playback and recording. Additionally, this development kit supports rapid secondary development, allowing developers to take advantage of the kit’s various onboard resources and expansion interfaces.</p>

<p>Please note this is an advanced development kit, for use with the ‘raw’ Espressif ESP IDF. For example, there isn’t CircuitPython or Arduino support for the display at this time. We’re stocking this because we think its a great dev board if you want to implement support for this hardware or play with display interfaces and the ESP32-S2</p>

<p><strong>ESP32-S2-HMI-DevKit-1 Specifications:</strong></p>

<ul>
  <li><strong>Wireless microcontoller module:</strong> ESP32-S2-WROVER module with ESP32-S2 Xtensa single-core 32-bit LX7 microprocessor, up to 240 MHz with 128 KB ROM, 320 KB SRAM, WiFi 4 connectivity, 4MB flash, 2MB PSRAM</li>
  <li><strong>Storage:</strong> MicroSD card slot</li>
  <li><strong>Display:</strong> 4.3” display with 800×480 resolution connected with 16-bit interface plus I2C capacitive touch panel overlay</li>
  <li><strong>Display interface:</strong> 16-bit, 20 MHz, 8080 parallel communication</li>
  <li><strong>Audio:</strong> Audio amplifier, built-in microphone, speaker connector</li>
  <li><strong>USB:</strong> 1x USB-C OTG (DFU/CDC) port, 1x USB-C debug port</li>
  <li><strong>Expansion:</strong> SPI header, TWAI (2-wire automotive interface)/CAN header, I2C header, UART/Prog header</li>
  <li><strong>Sensors:</strong> 3-axis accelerometer, 3-axis gyroscope, ambient light sensor, temperature and humidity sensors</li>
  <li><strong>Miscellaneous:</strong> Programmable RGB LEDs, wakeup and reset buttons, IR transmitter</li>
  <li><strong>Power Supply:</strong> 5V and 3.3V power headers</li>
  <li><strong>Optional Rechargeable Battery:</strong> 1,950 mAh Li-ion battery cutout and connector</li>
</ul>

<p><strong>Please note, Espressif is not shipping this product with a battery installed.</strong> An off-the-shelf iPhone 5-compatible battery can be purchased and installed by the end user.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/5207">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_hmi_devkit_1/</guid>
  </item><item>
    <title>ESP32-S2 Kaluga Dev Kit (v1.3) featuring WROVER</title>
    <link>https://circuitpython.org/board/espressif_kaluga_1.3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_kaluga_1.jpg 300w,
               /assets/images/boards/large/espressif_kaluga_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_kaluga_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The <strong>ESP32-S2-Kaluga-1</strong> version 1.3 kit is a full featured development kit by Espressif for the ESP32-S2. From TFTs to touch panels, this dev board has it all. Espressif designed this kit to demonstrate the ESP32-S2’s human-computer interaction functionalities and provide the users with the tools for development of human-computer interaction applications based on their new WiFi modules with the ESP32-S2 chip.</p>

<p>Version 1.3 was released starting in Summer 2020. The original version, 1.2, <a href="/board/espressif_kaluga_1/">also has a CircuitPython port</a>. The pinouts are slightly different between the two versions. You can tell which version you have by the silkscreen on the bottom of the main board.</p>

<p>The Kaluga comes with a WROVER module, which has 2 MB (16 Mbit) PSRAM mounted for a roomy development environment!</p>

<p>The micro USB connector on the Kaluga is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">USB-C</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<p>There are many ways of how the ESP32-S2’s abundant functionalities can be used. For starters, the possible use cases may include:</p>

<ul>
  <li><strong>Smart home</strong>: From simplest smart lighting, smart door locks, smart sockets, to video streaming devices, security cameras, OTT devices, and home appliances</li>
  <li><strong>Battery-powered equipment</strong>: Wi-Fi mesh sensor networks, Wi-Fi-networked toys, wearable devices, health management equipment</li>
  <li><strong>Industrial automation equipment</strong>: Wireless control and robot technology, intelligent lighting, HVAC control equipment, etc.</li>
  <li><strong>Retail and catering industry</strong>: POS machines and service robots</li>
</ul>

<p>Each order comes with a nice boxed kit containing:</p>

<ul>
  <li>Main board: ESP32-S2-Kaluga-1</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrat-8311a_v1.2.html">ESP-LyraT-8311A</a> audio player extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-toucha-v1.1.html">ESP-LyraP-TouchA</a> touch panel extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-lcd32-v1.1.html">ESP-LyraP-LCD32</a> 3.2” LCD screen extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-cam-v1.0.html">ESP-LyraP-CAM</a> camera board extension board</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4729">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 08 Jun 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_kaluga_1.3/</guid>
  </item><item>
    <title>ESP32-S2 Kaluga Dev Kit (v1.2) featuring WROVER</title>
    <link>https://circuitpython.org/board/espressif_kaluga_1/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_kaluga_1.jpg 300w,
               /assets/images/boards/large/espressif_kaluga_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_kaluga_1.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>The <strong>ESP32-S2-Kaluga-1</strong> version 1.2 kit is a full featured development kit by Espressif for the ESP32-S2. From TFTs to touch panels, this dev board has it all. Espressif designed this kit to demonstrate the ESP32-S2’s human-computer interaction functionalities and provide the users with the tools for development of human-computer interaction applications based on their new WiFi modules with the ESP32-S2 chip.</p>

<p>A newer version, 1.3, was released starting in Summer 2020, and <a href="/board/espressif_kaluga_1.3/">also has a CircuitPython port</a>. The pinouts are slightly different between the two versions. You can tell which version you have by the silkscreen on the bottom of the main board.</p>

<p>The Kaluga comes with a WROVER module, which has 2 MB (16 Mbit) PSRAM mounted for a roomy development environment!</p>

<p>The micro USB connector on the Kaluga is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">USB-C</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<p>There are many ways of how the ESP32-S2’s abundant functionalities can be used. For starters, the possible use cases may include:</p>

<ul>
  <li><strong>Smart home</strong>: From simplest smart lighting, smart door locks, smart sockets, to video streaming devices, security cameras, OTT devices, and home appliances</li>
  <li><strong>Battery-powered equipment</strong>: Wi-Fi mesh sensor networks, Wi-Fi-networked toys, wearable devices, health management equipment</li>
  <li><strong>Industrial automation equipment</strong>: Wireless control and robot technology, intelligent lighting, HVAC control equipment, etc.</li>
  <li><strong>Retail and catering industry</strong>: POS machines and service robots</li>
</ul>

<p>Each order comes with a nice boxed kit containing:</p>

<ul>
  <li>Main board: ESP32-S2-Kaluga-1</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrat-8311a_v1.2.html">ESP-LyraT-8311A</a> audio player extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-toucha-v1.1.html">ESP-LyraP-TouchA</a> touch panel extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-lcd32-v1.1.html">ESP-LyraP-LCD32</a> 3.2” LCD screen extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-cam-v1.0.html">ESP-LyraP-CAM</a> camera board extension board</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4729">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 29 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_kaluga_1/</guid>
  </item><item>
    <title>Saola 1 w/WROOM</title>
    <link>https://circuitpython.org/board/espressif_saola_1_wroom/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_saola_1_wroom.jpg 300w,
               /assets/images/boards/large/espressif_saola_1_wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_saola_1_wroom.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p>This is the Saola development board with a WROOM ESP32-S2 module.</p>

<p>The micro USB connector on the Saola is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">USB-C</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-saola-1-v1.2.html">User Guide</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 14 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_saola_1_wroom/</guid>
  </item><item>
    <title>Saola 1 w/WROVER</title>
    <link>https://circuitpython.org/board/espressif_saola_1_wrover/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espressif_saola_1_wrover.jpg 300w,
               /assets/images/boards/large/espressif_saola_1_wrover.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espressif_saola_1_wrover.jpg" alt="Image of Board" loading="lazy">
<p>By Espressif</p> <p><strong>ESP32-S2 Saola-1</strong> is a small-sized ESP32-S2 based development board produced by Espressif. Just about all of the I/O pins are broken out to the pin headers on both sides for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S2 Saola-1 on a breadboard - we recommend two breadboards ‘side-by-side’ since the Saola is a bit wide and you won’t have extra holes on one side for wiring.</p>

<p>This particular Saola comes with a WROVER module, which has 2 MB (8 Mbit) PSRAM mounted for a roomy development environment!</p>

<p>The micro USB connector on the Saola is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">USB-C</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4693">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 14 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_saola_1_wrover/</guid>
  </item><item>
    <title>Espruino Pico</title>
    <link>https://circuitpython.org/board/espruino_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espruino_pico.jpg 300w,
               /assets/images/boards/large/espruino_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espruino_pico.jpg" alt="Image of Board" loading="lazy">
<p>By Espruino</p> <p>Control Electronics quickly and easily with a tiny USB stick that runs JavaScript - introducing the <strong>Espruino Pico</strong>! <a href="https://www.adafruit.com/product/1887">Dig in to the JavaScript of things, with a mini version of the popular Espruino board we already carry</a></p>

<p>This little board has an STM32 microcontroller pre-programmed with Espruino all ready to go so you can start playing immediately. <strong>Warning: if you only use Assembly and think that even embedded C/C++ is for wimps, this device might explody your head.</strong></p>

<p><strong>Essential Features:</strong></p>
<ul>
  <li>22 GPIO pins: 9 analog inputs, 21 PWM, 2 serial, 3 SPI, 3 I2C</li>
  <li>All GPIO is 3.3V but 5 volt tolerant</li>
  <li>2 rows of 9 0.1” pins, with a third 0.05” row of 8 pins on the end</li>
  <li>On-board USB “PCB Type” connector, plugs right into any computer USB port</li>
  <li>Two on-board LEDs and one button</li>
  <li><a href="http://www.espruino.com/datasheets/STM32F401xD.pdf">STM32F401CDU6</a> CPU - ARM Cortex</li>
  <li>On-board 3.3v 250mA voltage regulator, accepts voltages from 3.5v to 16v</li>
  <li>Current draw in sleep: &lt; 0.05mA - over 2.5 years on a 2500mAh battery</li>
  <li>On-board FET can be used to drive high-current outputs</li>
</ul>

<p><strong>Note</strong>: As of Friday, October 2nd, 2015 we are selling the updated Pico with both a more helpful silkscreen marking for power, an updated USB power diode, and a 500mA polyfuse added!</p>

<p>The Espruino Pico is a USB stick with a tiny computer and JavaScript interpreter built in, allowing for instant feedback from whatever device you’re working with. Simply set up your code with the Espruino and send it to the device without having to wait for the board to ‘flash.’</p>

<p>The Pico is also designed to be easy to include in your own designs and builds. The .01” pins are easy to fit in to sockets, and castellated edges mean that unpinned Picos can easily be surface-mounted directly to a PCB. And to make it even easier, <a href="https://github.com/espruino/EspruinoBoard/tree/master/Pico/Component">Espruino provided a part library for Eagle CAD that includes the Pico’s footprint in several different configurations</a>.</p>

<p>The Espruino Pico’s fast response time has a lot of advantages. It allows for quick and easy debugging and is a great way to test your project before your big reveal. In addition, you can control the Espruino from almost anything - Windows, Mac OS, Linux, RasPi, Android, anything that can talk to a USB Serial port.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2621">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 07 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espruino_pico/</guid>
  </item><item>
    <title>Espruino WiFi</title>
    <link>https://circuitpython.org/board/espruino_wifi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/espruino_wifi.jpg 300w,
               /assets/images/boards/large/espruino_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/espruino_wifi.jpg" alt="Image of Board" loading="lazy">
<p>By Espruino</p> <p>Try the JavaScript of things with the <strong>Espruino WiFi</strong> - the world’s first open-source JavaScript microcontroller, this time with built in WiFi! This little board has an STM32 microcontroller pre-programmed with Espruino all ready to go so you can start playing with Javascript-microcontrollers. It also comes with an ESP8266 WiFi module, so you can connect to the Internet using Espruino. <strong>Warning:</strong> if you only use Assembly and think that even embedded C/C++ is for wimps, this device might explode your head.</p>

<p>The Espruino is a tiny computer with a JavaScript interpreter, allowing for instant feedback from whatever device you’re working with. Simply set up your code with the Espruino and send it to the device without having to wait for the board to ‘flash. With the new Espruino WiFi you get the best of Javascript with Internet connectivity.</p>

<p>Once you’ve uploaded code, you can inspect and change variables (including functions!) while your program is running. There’s loads of <a href="http://www.espruino.com/Reference">documentation</a>, <a href="http://www.espruino.com/Tutorials">tutorials</a> and support for a <a href="http://www.espruino.com/Modules">huge range of different hardware</a> too. See <a href="http://www.espruino.com/Quick+Start">how to get started here</a>, or if you have any questions ask away <a href="http://forum.espruino.com/">on the Espruino forums</a>!</p>

<p><strong>Features</strong></p>
<ul>
  <li>30mm x 23mm (1.2 x 0.9 inch)</li>
  <li>On-board Micro USB connector</li>
  <li>2 rows of 11 0.1” pins, with 2 extra 0.1” holes</li>
  <li>21 GPIO pins : 8 Analog inputs, 20 PWM, 1 Serial, 3 SPI, 3 I2C</li>
  <li>Three on-board LEDs (2x user programmable, 1x WiFi activity) and one button.</li>
  <li>STM32F411CEU6 32-bit 100MHz ARM Cortex M4 CPU, 512kb flash, 128kb RAM</li>
  <li>ESP8266 WiFi (802.11 b/g/n)</li>
  <li>All GPIO is 5 volt tolerant (Arduino compatible)</li>
  <li>RTC with external oscillator</li>
  <li>On-board 3.3v 250mA voltage regulator, accepts voltages from 3.5v to 5v</li>
  <li>Current draw in sleep: &lt; 0.05mA - over 2.5 years on a 2500mAh battery</li>
  <li>500mA polyfuse on board</li>
</ul>

<p>The Espruino’s fast response time has a lot of advantages. It allows for quick and easy debugging and is a great way to test your project before your big reveal. In addition, you can control the Espruino from almost anything - Windows, Mac OS, Linux, RasPi, Android, anything that can talk to a USB Serial port.</p>

<p>The Espruino also interacts well with our <a href="https://www.adafruit.com/category/168">NeoPixels</a>. For more info, check out <a href="http://www.espruino.com/WS2811">Espruino’s page on the WS2811 and WS2812</a>.</p>

<p>While the main advantage of the Espruino is its instant execution, it can also be used as a traditional board through a Web-based IDE hosted on your computer. The microcontroller also uses less power than Linux Boards (although its of course a lot less powerful as well) so will run longer on battery power, it has loads of IO pins, and it can be used as an IO board for PCs, Macs, or Rasp Pis without having to program it first. Simply take the Espruino out of its packaging and get started!</p>

<p><strong>NOTE:</strong> The Wifi of this board is based on ESP8266 and might not work with CircuitPython. CircuitPython typically use Airlift that rely on ESP32 with better support for TLS such as this <a href="https://www.adafruit.com/product/4201">breakout board</a>.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3514">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 13 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espruino_wifi/</guid>
  </item><item>
    <title>Feather Bluefruit Sense</title>
    <link>https://circuitpython.org/board/feather_bluefruit_sense/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_bluefruit_sense.jpg 300w,
               /assets/images/boards/large/feather_bluefruit_sense.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_bluefruit_sense.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Feather Bluefruit Sense</strong> takes our popular <a href="https://www.adafruit.com/product/4062">Feather nRF52840 Express</a> and adds a smorgasbord of sensors to make a great wireless sensor platform. This Feather microcontroller comes with Bluetooth Low Energy and native USB support featuring the nRF52840!  This Feather is an ‘all-in-one’ Arduino-compatible + Bluetooth Low Energy with built in USB plus battery charging. With native USB it works great with CircuitPython, too.</p>

<p>Like the Feather nRF52840, <strong>this chip comes with Arduino IDE support</strong> - you can program the nRF52840 chip directly to take full advantage of the Cortex-M4 processor, and then calling into the Nordic SoftDevice radio stack when you need to communicate over BLE. Since the underlying API and peripherals are the same for the ‘832 and ‘840, you can supercharge your older nRF52832 projects with the same exact code, with a single recompile!</p>

<p>This Feather is also a <strong>BLE-friendly CircuitPython board</strong>! CircuitPython works best with disk drive access, and this is the only BLE-plus-USB-native chip that has the memory to handle running a little Python interpreter. The massive RAM and speedy Cortex M4F chip make this a good match. Make centrals or peripherals with the ease of CircuitPython.</p>

<p>A chorus of supporting sensors surround the module so you can do all sorts of <strong>environmental and motion sensing</strong>:</p>

<ul>
  <li>ST Micro series 9-DoF motion - <a href="https://www.adafruit.com/product/4480">LSM6DS33 Accel/Gyro</a> + <a href="http://www.adafruit.com/product/4479">LIS3MDL magnetometer</a></li>
  <li><a href="https://www.adafruit.com/product/3595">APDS9960 Proximity, Light, Color, and Gesture Sensor</a></li>
  <li><a href="https://www.adafruit.com/product/3492">PDM Microphone sound sensor</a></li>
  <li><a href="https://www.adafruit.com/product/4099">SHT Humidity</a></li>
  <li><a href="https://www.adafruit.com/product/2651">BMP280 temperature and barometric pressure/altitude</a></li>
</ul>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>Up to +8 dBm output power</li>
  <li>21 GPIO, 6 x 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #13 red LED for general purpose blinking, Blue LED for general purpose connection status, NeoPixel for colorful feedback</li>
  <li>Power/enable pin</li>
  <li>Measures 2.0” x 0.9” x 0.28” (51 mm x 23 mm x 7.2 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 6 grams</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>SWD debug pads on bottom of PCB</li>
  <li><a href="https://www.adafruit.com/categories/814">Works out of the box with all of our Adafruit FeatherWings!</a> (Even the UART-using ones like the GPS FeatherWing)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4516">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_bluefruit_sense/</guid>
  </item><item>
    <title>Feather M0 Adalogger</title>
    <link>https://circuitpython.org/board/feather_m0_adalogger/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_adalogger.jpg 300w,
               /assets/images/boards/large/feather_m0_adalogger.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_adalogger.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Feather is a development board from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be a new open standard for portable microcontroller cores.</p>

<p>This is the <strong>Adafruit Feather M0 Adalogger</strong> - Adafruit’s take on an ‘all-in-one’ Cortex M0 datalogger (or data-reader) with built in USB and battery charging. It is an Adafruit Feather M0 with a microSD holder.  Check out the other boards in the <a href="https://www.adafruit.com/feather">Feather family</a>.</p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3 V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256 KB of FLASH (8x more than the Atmega328 or 32u4) and 32 KB of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7 V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<h2 id="-technical-details">## Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51 mm x 23 mm x 8 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.3 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3V logic/power</li>
  <li>256 KB of FLASH + 32 KB of RAM</li>
  <li>No EEPROM</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>20x GPIO pins
    <ul>
      <li>Hardware Serial, hardware I2C, hardware SPI support</li>
      <li>8x PWM pins</li>
      <li>10x analog inputs</li>
    </ul>
  </li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Adalogger</strong> uses the extra space left over to add MicroSD + a green LED:</p>

<ul>
  <li>Pin #8 green LED for your blinking pleasure</li>
  <li>MicroSD card holder for adding as much storage as you could possibly want, for reading or writing.</li>
</ul>

<p>Comes fully assembled and tested, with a USB bootloader. Includes some header so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-adalogger">Feather M0 Adalogger Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/2796">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_adalogger/</guid>
  </item><item>
    <title>Feather M0 Basic</title>
    <link>https://circuitpython.org/board/feather_m0_basic/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_basic.jpg 300w,
               /assets/images/boards/large/feather_m0_basic.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_basic.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Feather is thin, light, and lets you fly! Adafruit designed Feather to be a new open standard for portable microcontroller cores.</p>

<p>This is the <strong>Feather M0 Basic Proto</strong>, it has a bunch of prototyping space built right in. Check out the other boards in the <a href="https://www.adafruit.com/feather">Feather family</a>.</p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3 V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256 KB of FLASH (8x more than the Atmega328 or 32u4) and 32 KB of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, there is a connector for 3.7V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when it is available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51 mm x 23 mm x 8 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 4.6 grams</li>
  <li>ATSAMD21G18 @ 48 MHz with 3.3V logic/power</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>No EEPROM</li>
  <li>32.768 KHz crystal for clock generation &amp; RTC</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>PWM outputs on all pins</li>
  <li>6 x 12-bit analog inputs</li>
  <li>1 x 10-bit analog ouput (DAC)</li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Basic Proto</strong> has some extra space left over, so we give you a tiny little prototyping area. If you just need to attach a button or sensor, you may be able to skip out on a breadboard and wire it directly on there.</p>

<p>Comes fully assembled and tested, with a USB bootloader. Includes headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-basic-proto">Feather M0 Basic Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/2772">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_basic/</guid>
  </item><item>
    <title>Feather M0 Express</title>
    <link>https://circuitpython.org/board/feather_m0_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_express.jpg 300w,
               /assets/images/boards/large/feather_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Adafruit Feather M0 Express was one of the first development boards designed for CircuitPython by Adafruit. Unlike the original Feather M0 Basic, it added a NeoPixel status LED and external 2 MB SPI Flash for storing CircuitPython code.</p>

<p>It is a great entry into the Feather ecosystem with CircuitPython. However, it is now out performed by the <a href="/board/feather_m4_express/">Feather M4 Express</a> which has a faster microcontroller with more RAM. The additional RAM allows CircuitPython to load more code all at once than this Feather M0 Express can. Check out the other boards in the <a href="https://www.adafruit.com/feather">Feather family</a>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51 mm x 23 mm x 8 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>TSAMD21G18 @ 48 MHz with 3.3V logic/power</li>
  <li>256 KB of FLASH + 32 KB of RAM</li>
  <li>No EEPROM</li>
  <li>32.768 kHz crystal for clock generation &amp; RTC</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>20x GPIO pins (PWM outputs on all pins)
    <ul>
      <li>Hardware Serial, hardware I2C, hardware SPI support</li>
      <li>6 x 12-bit analog inputs</li>
      <li>1 x 10-bit analog ouput (DAC)</li>
    </ul>
  </li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-express-designed-for-circuit-python-circuitpython">Feather M0 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3403">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p87w83">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 08 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_express/</guid>
  </item><item>
    <title>Feather M0 Express + Crickit</title>
    <link>https://circuitpython.org/board/feather_m0_express_crickit/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_express_crickit.jpg 300w,
               /assets/images/boards/large/feather_m0_express_crickit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_express_crickit.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p><strong>Crickit</strong> is Adafruit’s <strong>C</strong>reative <strong>R</strong>obotics &amp; <strong>I</strong>nteractive <strong>C</strong>onstruction <strong>Kit</strong>. It’s an add-on to popular Feather ecosystem boards that lets you <strong>#MakeRobotFriend </strong>using CircuitPython.</p>

<p>Plug in <em>any</em> Feather mainboard you want into the center, and you’re good to go! The Crickit is powered by seesaw, an I2C-to-whatever bridge firmware. So you only need to use two I2C data pins to control the huge number of inputs and outputs on the Crickit. All those timers, PWMs, sensors are offloaded to the co-processor.</p>

<p>The only thing that is <em>not</em> managed by seesaw is the audio output. Provided is a small jumper you can solder to connect the audio amplifier to the first analog pin. On Feather M0’s this is a true analog output (DAC) and you can play audio clips with CircuitPython. Other Feathers <em>may not have a DAC!</em> In that case, you can solder a wire to jumper the audio amp to a PWM pin.</p>

<p>You get to use all the non-I2C signal pins on your feather and get a boat-load of extra in/out pins, motor controllers, capacitive touch sensors, a NeoPixel driver and amplified speaker output. It complements &amp; extends your Feather so you can still use all the goodies, including stacking FeatherWings on top. But now you have a robotics playground as well.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>4 x Analog or Digital Servo control, with precision 16-bit timers</li>
  <li>2 x Bi-directional brushed DC motor control, 1 A current limited each, with 8-bit PWM speed control (or one stepper)</li>
  <li>4 x High current “Darlington” 500 mA drive outputs with kick-back diode protection. For solenoids, relays, large LEDs, or one uni-polar stepper</li>
  <li>4 x Capacitive touch sensors with alligator-pads</li>
  <li>8 x Signal pins, digital in/out or analog inputs</li>
  <li>1 x NeoPixel driver with 5V level shifter - The NeoPixels are buffered and controlled by the seesaw chip</li>
  <li>1 x Class D, 4-8 ohm speaker, 3 W-max audio amplifier - the audio input pin is available as a solder-able pad for your configuration, you can connect it to your Feather’s DAC or PWM output as you desire.</li>
</ul>

<p>All are powered via 5V DC, so you can use any 5V-powered servos, DC motors, steppers, solenoids, relays etc. To keep things simple and safe, we don’t support mixing voltages, so only 5V, not for use with 9V or 12V robotic components.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-crickit-creative-robotic-interactive-construction-kit">Feather M0 Express + Crickit Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3403">Feather M0 Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3343">CRICKIT for Feather - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_express_crickit/</guid>
  </item><item>
    <title>Feather M0 RFM69</title>
    <link>https://circuitpython.org/board/feather_m0_rfm69/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_rfm69.jpg 300w,
               /assets/images/boards/large/feather_m0_rfm69.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_rfm69.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This is the<strong> Adafruit Feather M0 RFM69 Packet Radio (433, 868, or 915 MHz)</strong><strong>.</strong> Also called <em>RadioFruits<strong>,</strong></em> Adafruit’s take on an microcontroller with a RFM69HCW packet radio transceiver plus built in USB and battery charging. Its an Adafruit Feather M0 with a VHF radio module cooked in!</p>

<p>Feather is the development platform from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be an open standard for portable microcontroller cores. Check out the other boards in the <a href="https://www.adafruit.com/feather">Feather family</a>.</p>

<p><strong>There are two versions: 433 MHz and 900 MHz. The 900 MHz version can be used for either 868 MHz or 915MHz transmission/reception</strong> - the exact radio frequency is determined when you load the software since it can be tuned around dynamically.</p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3 V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256 KB of FLASH (8x more than the Atmega328 or 32u4) and 32 KB of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7 V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.3” (51 mm x 23 mm x 8 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.8 grams</li>
  <li>ATSAMD21G18 @ 48 MHz with 3.3 V logic/power</li>
  <li>No EEPROM</li>
  <li>3.3 V regulator with 500 mA peak current outpu0t</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x PWM pins</li>
  <li>10 x analog inputs</li>
  <li>1 x analog output</li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Radio</strong> uses the extra space left over to add an RFM69HCW 433 or 900 MHz radio module. These radios are not good for transmitting audio or video, but they do work quite well for small data packet transmission when you need more range than 2.4 GHz (BT, BLE, WiFi, ZigBee).</p>

<ul>
  <li>SX1231 based module with SPI interface</li>
  <li>433 MHz version: Uses the amateur or license-free ISM band (ITU “Europe” license-free ISM or ITU “American” amateur with limitations)</li>
  <li>900 MHz version: Uses the license-free ISM band (“European ISM” @ 868MHz or “American ISM” @ 915 MHz)</li>
  <li>+13 to +20 dBm up to 100 mW Power Output Capability (power output selectable in software)</li>
  <li>50 mA (+13 dBm) to 150mA (+20 dBm) current draw for transmissions</li>
  <li>Range of approx. 350 meters, depending on obstructions, frequency, antenna and power output</li>
  <li>Create multipoint networks with individual node addresses</li>
  <li>Encrypted packet engine with AES-128</li>
  <li>Simple wire antenna or spot for uFL connector</li>
</ul>

<p>Comes fully assembled and tested, with a USB bootloader. Includes some headers so you can solder it in and plug into a solderless breadboard. You will need to cut and solder on a small piece of wire (any solid or stranded core is fine) in order to create your antenna.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-radio-with-rfm69-packet-radio">Feather M0 RFM69 Tutorial</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3177">Adafruit</a> (433 MHz version)</li>
  <li><a href="https://www.adafruit.com/product/3176">Adafruit</a> (900 MHz version)</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_rfm69/</guid>
  </item><item>
    <title>Feather M0 RFM9x</title>
    <link>https://circuitpython.org/board/feather_m0_rfm9x/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_rfm9x.jpg 300w,
               /assets/images/boards/large/feather_m0_rfm9x.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_rfm9x.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This is the <strong>Adafruit Feather M0 RFM96 LoRa Radio (433 MHz).</strong> Also called <em>RadioFruits<strong>,</strong></em> Adafruit’s take on an microcontroller with a “<a href="https://www.lora-alliance.org/">Long Range (LoRa)</a>” packet radio transceiver with built in USB and battery charging. It is an Adafruit Feather M0 with a 433MHz radio module cooked in! Great for making wireless networks that are more flexible than Bluetooth LE and without the high power requirements of WiFi.</p>

<p>Feather is the development board platform from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be an open standard for portable microcontroller cores. Check out the other boards in the <a href="https://www.adafruit.com/feather">Feather family</a>.</p>

<p><strong>There are 433 MHz and 898/915 MHz radio versions.</strong></p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3 V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256 K of FLASH (8x more than the Atmega328 or 32u4) and 32 K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7 V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.3” (51 mm x 23 mm x 8 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.8 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3 V logic/power</li>
  <li>No EEPROM</li>
  <li>3.3 V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x PWM pins</li>
  <li>10 x analog inputs</li>
  <li>1 x analog output</li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>This <strong>Feather M0 LoRa Radio</strong> uses the extra space left over to add an RFM9x LoRa 868/915 MHz radio module. These radios are not good for transmitting audio or video, but they do work quite well for small data packet transmission when you need more range than 2.4 GHz (BT, BLE, WiFi, ZigBee).</p>

<ul>
  <li>SX127x LoRa® based module with SPI interface</li>
  <li>Packet radio with ready-to-go Arduino libraries</li>
  <li>Uses the license-free ISM bands (ITU “Europe” @ 433 MHz and ITU “Americas” @ 900 MHz)</li>
  <li>+5 to +20 dBm up to 100 mW Power Output Capability (power output selectable in software)</li>
  <li>~300 uA during full sleep, ~120 mA peak during +20 dBm transmit, ~40 mA during active radio listening.</li>
  <li>Simple wire antenna or spot for uFL connector</li>
</ul>

<p>The initial tests with default library settings: over 1.2mi/2Km line-of-sight with wire quarter-wave antennas. (<a href="http://forum.anarduino.com/posts/list/46.page#2854">With setting tweaking and directional antennas, 20 km is possible</a>).</p>

<p>Comes fully assembled and tested, with a USB bootloader. Also includes some headers so you can solder it in and plug into a solderless breadboard. You will need to cut and solder on a small piece of wire (any solid or stranded core is fine) in order to create your antenna.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-radio-with-lora-radio-module">Feather M0 RFM9x</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3178">Feather M0 RFM95 - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3179">Feather M0 RFM96 - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_rfm9x/</guid>
  </item><item>
    <title>Feather M0 Supersized</title>
    <link>https://circuitpython.org/board/feather_m0_supersized/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m0_supersized.jpg 300w,
               /assets/images/boards/large/feather_m0_supersized.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m0_supersized.jpg" alt="Image of Board" loading="lazy">
<p>By Dave Astels</p> <p>This is a <a href="/board/feather_m0_express/">Feather M0 Express</a> that has been
supersized by Dave Astels to fit a larger SPI flash chip than the default 2 MB chip. It is not
available for purchase.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_supersized/</guid>
  </item><item>
    <title>Feather M4 CAN</title>
    <link>https://circuitpython.org/board/feather_m4_can/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m4_can.jpg 300w,
               /assets/images/boards/large/feather_m4_can.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m4_can.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>One of our favorite Feathers, the Feather M4 Express, gets a glow-up here with an upgrade to the SAME51 chipset which has built-in CAN bus support! Like its SAMD51 cousin, the ATSAME51J19 comes with a 120 MHz Cortex M4 with floating point support and 512 KB Flash and 192 KB RAM. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset for CAN interfacing projects.</p>

<p>At the end of the board we have placed a CAN transceiver chip as well as a 5 V converter to generate 5 V power to the transceiver even when running on battery. The two CAN signal lines and ground reference signal are available on a 3-pin 3.5 mm terminal block. The chip and booster can be put to sleep for power saving. The built-in CAN can read or write packets and has support in both Arduino and CircuitPython.</p>

<p>Like the original Feather M4 Express, you’ll find a Mini NeoPixel and 2 MB SPI Flash. When used in CircuitPython, the 2 MB flash acts as storage for all your scripts, libraries and files.</p>

<p>And best of all, it’s a Feather - so you know it will work with all our FeatherWings! What a great way to quickly get up and running. It’s even pin-compatible with the original Feather M4.</p>

<p>Easy reprogramming: the Feather M4 CAN comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa-compatible).</p>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8 mm x 22.8 mm x 7 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>ATSAME51 32-bit Cortex M4 core running at 120 MHz, 32-bit, 3.3 V logic and power</li>
  <li>Hardware CAN bus support with built-in transceiver, 5V booster and terminal connection.</li>
  <li>Floating point support with Cortex M4 DSP instructions</li>
  <li>512 KB flash, 192 KB RAM</li>
  <li>2 MB SPI FLASH chip for storing files and CircuitPython code storage.</li>
  <li>No EEPROM</li>
  <li>32.768 kHz crystal for clock generation &amp; RTC</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li>USB-C connector for USB native support, comes with USB bootloader and serial port debugging</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
  <li>21 GPIO pins with following capabilities:
    <ul>
      <li>Dual 1 MSPS 12 bit true analog DAC (A0 and A1) - can be used to play 12-bit stereo audio clips</li>
      <li>Dual 1 MSPS 12 bit ADC (6 analog pins some on ADC1 and some on ADC2)</li>
      <li>6 hardware SERCOM - Native hardware SPI, I2C and Serial all available</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>I2S input and output</li>
      <li>8-bit Parallel capture controller (for camera/video in)</li>
    </ul>
  </li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/using-canio-circuitpython">CAN Bus with CircuitPython: Using the canio module</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4759">Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4759">Digikey</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_m4_can/</guid>
  </item><item>
    <title>Feather M4 Express</title>
    <link>https://circuitpython.org/board/feather_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m4_express.jpg 300w,
               /assets/images/boards/large/feather_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This feather is powered by the ATSAMD51J19 -  with its 120 MHz Cortex M4 with floating point support and 512 KB Flash and 192 KB RAM. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>And best of all, it’s a Feather - so you know it will work with all our FeatherWings! What a great way to quickly get up and running.</p>

<p>The most exciting part of the Feather M4 is that while you can use it with the Arduino IDE - and it’s bonkers fast when you do, we are shipping it with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with main.py on it. Edit main.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Feather and your code will go with you.</p>

<p>The Feather M4 Express uses the extra space left over to add a Mini NeoPixel, 2 MB SPI Flash storage and a little prototyping space. You can use the SPI Flash storage like a very tiny hard drive. When used in CircuitPython, the 2 MB flash acts as storage for all your scripts, libraries and files. When used in Arduino, you can read/write files to it, like a little datalogger or SD card, and then with our helper program, access the files over USB.</p>

<p>Easy reprogramming: the Feather M4 comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa-compatible).</p>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8 mm x 22.8 mm x 7 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>ATSAMD51 32-bit Cortex M4 core running at 120 MHz, 32-bit, 3.3 V logic and power</li>
  <li>Floating point support with Cortex M4 DSP instructions</li>
  <li>512 KB flash, 192 KB RAM</li>
  <li>2 MB SPI FLASH chip for storing files and CircuitPython code storage.</li>
  <li>No EEPROM</li>
  <li>32.768 kHz crystal for clock generation &amp; RTC</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
  <li>21x GPIO pins with following capabilities:
    <ul>
      <li>Dual 1 MSPS 12 bit true analog DAC (A0 and A1) - can be used to play 12-bit stereo audio clips</li>
      <li>Dual 1 MSPS 12 bit ADC (6 analog pins some on ADC1 and some on ADC2)</li>
      <li>6x hardware SERCOM - Native hardware SPI, I2C and Serial all available</li>
      <li>16x PWM outputs - for servos, LEDs, etc</li>
      <li>I2S input and output</li>
      <li>8-bit Parallel capture controller (for camera/video in)</li>
    </ul>
  </li>
  <li>Built in 100 mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m4-express-atsamd51">Feather M4 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3857">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p87f17">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 08 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m4_express/</guid>
  </item><item>
    <title>Feather M7 1011</title>
    <link>https://circuitpython.org/board/feather_m7_1011/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_m7_1011.jpg 300w,
               /assets/images/boards/large/feather_m7_1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_m7_1011.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The NXP iMX RT1011 microcontroller powers this board with a 500 MHz ARM Cortex M7 processor. There’s 4 MB of execute-in-place QSPI for firmware and disk storage plus 128 KB of SRAM in-chip.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>NXP iMX RT1011 processor - ARM Cortex M7 processor running at 500 MHz, with 128 KB SRAM and high speed USB!</li>
  <li>AirLift WiFi Co-processor, with TLS/SSL support, plenty of RAM for sockets, communication is over SPI and has CircuitPython library support ready to go for fast wireless integration.</li>
  <li>Power options - 6-12 V DC barrel jack or USB-C</li>
  <li>UNO-shape so shields can plug in</li>
  <li>Reset  button - Click to restart, double-click to enter UF2 bootloder</li>
  <li>Boot-mode switches to get into the ROM bootloader (you can always reload code over USB if TinyUF2 gets corrupted somehow)</li>
  <li>SWD connector for advanced debugging access.</li>
  <li>On/Off switch</li>
  <li>STEMMA QT connector for I2C devices</li>
  <li>On/User LEDs and status NeoPixel</li>
  <li>53.2 mm x 72 mm / 2” x 2.8”</li>
  <li>Height (w/ barrel jack): 14.8 mm / 0.6”</li>
  <li>Weight: 22.5 g</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4950">Adafruit</a></li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?time_continue=1059&amp;v=k62kM94gieo">YouTube</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m7_1011/</guid>
  </item><item>
    <title>Feather MIMXRT1011</title>
    <link>https://circuitpython.org/board/feather_mimxrt1011/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_mimxrt1011.jpg 300w,
               /assets/images/boards/large/feather_mimxrt1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_mimxrt1011.jpg" alt="Image of Board" loading="lazy">
<p>By arturo182</p> <p>A Work-In-Progress Feather featuring the NXP i.MX RT1011 MCU and a ESP32.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex-M7 MCU running at 500 MHz, 128 KB of RAM</li>
  <li>8 MB of Flash shared between MCU code and CircuitPython storage</li>
  <li>USB-C connector</li>
  <li>ESP32 that can be used as a SPI slave with the AirLift firmware</li>
  <li>Neopixel indicator</li>
  <li>Works with CircuitPython!</li>
  <li>I2C, UART, SPI, GPIO, ADCs</li>
  <li>Comes with a UF2 bootloader for easy FW update</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://twitter.com/arturo182/status/1199841134253682690">Reveal Tweet</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/arturo182/nxp-mimxrt1011-feather-with-esp32/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_mimxrt1011/</guid>
  </item><item>
    <title>Feather MIMXRT1062</title>
    <link>https://circuitpython.org/board/feather_mimxrt1062/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_mimxrt1062.jpg 300w,
               /assets/images/boards/large/feather_mimxrt1062.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_mimxrt1062.jpg" alt="Image of Board" loading="lazy">
<p>By arturo182</p> <p>A Work-In-Progress Feather featuring the NXP i.MX RT1062 MCU.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex-M7 MCU running at 600 MHz, 1 MB of RAM (!)</li>
  <li>8 MB of Flash shared between MCU code and CircuitPython storage</li>
  <li>USB-C connector</li>
  <li>High density connector with LCD interface supporting up to 1366x768</li>
  <li>Neopixel indicator</li>
  <li>MicroSD slot on the bottom</li>
  <li>Works with CircuitPython!</li>
  <li>I2C, UART, SPI, GPIO, ADCs</li>
  <li>Comes with a UF2 bootloader for easy FW update</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://twitter.com/arturo182/status/1199841134253682690">Reveal Tweet</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_mimxrt1062/</guid>
  </item><item>
    <title>Feather nRF52840 Express</title>
    <link>https://circuitpython.org/board/feather_nrf52840_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_nrf52840_express.jpg 300w,
               /assets/images/boards/large/feather_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_nrf52840_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Feather nRF52840 Express</strong> is the new Feather family member with Bluetooth Low Energy and <em>native USB support</em> featuring the nRF52840!  It is Adafruit’s take on an ‘all-in-one’ Bluetooth Low Energy device with built in USB plus battery charging. With native USB it’s part of the CircuitPython party.</p>

<p>This chip has twice the flash, and four times the SRAM of its earlier sibling, the nRF52832 - 1 MB of FLASH and 256KB of SRAM. Compared to the nRF51, this board has 4-8 times more of everything.</p>

<p><strong>This is Adafruit’s first BLE-friendly CircuitPython board</strong>! CircuitPython works best with disk drive access, and this is the only BLE-plus-USB-native chip that has the memory to handle running the Python interpreter. The massive RAM and speedy Cortex M4F chip makes this a good match.</p>

<p>It’s got tons of peripherals: plenty of GPIO, analog inputs, PWM, timers, etc. Best of all, it’s got that native USB! Finally, no need for a separate USB serial chip like CP2104 or FT232.</p>

<p>Some other upgrades are an extra ‘USER’ switch that could be used to trigger OTA updates (or whatever you choose), a NeoPixel LED for status updates, 2 MB of QSPI Flash for storing CircuitPython files, and a SWD connector.</p>

<p>Comes pre-programed the chip with a UF2 bootloader, which can use either command line UART programming with nrfutil or drag-n-drop mass storage, for CircuitPython installation and also because mass-storage-drive bootloaders make updating firmware so easy. Want to program the chip directly? You can use command line tools with your favorite editor and toolchain. If you want to use an SWD programmer/debugger (for even more advanced usage), use a standard 2x5 0.05” connector.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>Up to +8dBm output power</li>
  <li>1.7v to 3.3v operation with internal linear and DC/DC voltage regulators</li>
  <li>21 GPIO, 6 x 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #3 red LED for general purpose blinking, NeoPixel for colorful feedback</li>
  <li>Power/enable pin</li>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 7.2mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 6 grams</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>SWD connector for debugging</li>
</ul>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-the-adafruit-nrf52840-feather">Feather nRF52840 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4062">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_nrf52840_express/</guid>
  </item><item>
    <title>Feather STM32F405 Express</title>
    <link>https://circuitpython.org/board/feather_stm32f405_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/feather_stm32f405_express.jpg 300w,
               /assets/images/boards/large/feather_stm32f405_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/feather_stm32f405_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>ST takes flight in this upcoming Feather board. The new STM32F405 Feather (video) that we designed runs CircuitPython at a blistering 168MHz – our fastest CircuitPython board ever! We put a STEMMA QT / Qwiic port on the end, so you can really easily plug and play I2C sensors.</p>

<p>This Feather has lots of goodies:</p>

<p>STM32F405 Cortex M4 with 1MB Flash, 168MHz speed
3.3V logic, but almost all pins are 5V compliant!
USB C power and data - our first USB C Feather!
LiPo connector and charger
SD socket on the bottom, connected to SDIO port
2 MB SPI Flash chip
Built in NeoPixel indicator
I2C, UART, GPIO, ADCs, DACs
Qwiic/STEMMA-QT connector for fast I2C connectivity
We use the built-in USB DFU bootloader to load firmware. It does not come with a UF2 bootloader.
With CircuitPython basics running on this board, it’s fast to get all our drivers working, then use the built in plotter in Mu to instantly get sensor data displaying within 3 minutes of unboxing.</p>

<p>You can use MicroPython, CircuitPython or Arduino IDE with this board, with some caveats. This board and chipset is new so expect rapid developments and updates!</p>

<p>CircuitPython support is under development. We have digital IO, analog in/out, I2C, SPI, PWM working so far and more on the way. For example, the SDIO SD card is not yet supported natively. DisplayIO is also not yet supported.
Arduino is supported through STM32duino. There’s no auto-reset bootloader support yet so you have to pull the BOOT0 pin high and manually reset before uploading. That said, STM32 support is really good, and we were able to run just about every sketch we tried.
MicroPython support is very solid but Adafruit does not provide MicroPython libraries for sensors!
We tested this in Arduino STM32duino with all our FeatherWings and only the RFM69/RFM9x libraries did not work (they are very platform specific). Its an extraordinarily fast Feather, and our first foray into STM32 - very exciting!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-stm32f405-feather-express">Feather STM32F405 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4382">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_stm32f405_express/</guid>
  </item><item>
    <title>Fluff M0</title>
    <link>https://circuitpython.org/board/fluff_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/fluff_m0.jpg 300w,
               /assets/images/boards/large/fluff_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/fluff_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Radomir Dopieralski</p> <p>A minimal CircuitPython board compatible with the Feather M0 Basic. Everything
that is non-essential has been removed, and the smallest possible chip is used.</p>

<p><a href="https://hackaday.io/project/171381-fluff-m0">Project page on hackaday.io</a></p>

<p><strong>Here are some handy specs!</strong></p>
<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>ATSAMD21E18 @ 48MHz with 3.3V logic/power</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>No EEPROM</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 23 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x 12-bit analog inputs</li>
  <li>1 x 10-bit analog ouput (DAC)</li>
  <li>Yellow LED for general purpose blinking</li>
  <li>4 mounting holes</li>
</ul>

<p><strong>Differences from Feather M0</strong></p>
<ul>
  <li>No battery charger</li>
  <li>No crystal</li>
  <li>No external flash</li>
  <li>No reset button</li>
  <li>No enable pin, instead you get another GPIO pin</li>
  <li>Two additional analog pins (AREF and A6)</li>
  <li>LED is on a separate, dedicated pin, not on D13</li>
  <li>USB-C PCB socket</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 22 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/fluff_m0/</guid>
  </item><item>
    <title>Fomu</title>
    <link>https://circuitpython.org/board/fomu/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/fomu.jpg 300w,
               /assets/images/boards/large/fomu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/fomu.jpg" alt="Image of Board" loading="lazy">
<p>By Sean Cross (xobs)</p> <p>Only 13mm long, <strong>Fomu</strong> really puts the <em>micro</em> in microprocessor. Fomu is a fully open-source, programmable FPGA device that sits inside a USB Type-A port. It has four buttons, an RGB LED, and an FPGA that is compatible with a fully open source chain and capable of running a RISC-V core. Fomu comes in a custom plastic enclosure that slots perfectly into a USB port.</p>

<p>Fomu:</p>

<ul>
  <li><strong>has Python</strong>
    <ul>
      <li>With 128 kilobytes of RAM and a large amount of storage, Fomu is powerful enough to run Python natively. And since it lives in your USB port, installation is super simple. FPGAs are complicated, but the latest Python tools make it easy to use Fomu without any specialized training.</li>
    </ul>
  </li>
  <li><strong>runs RISC-V</strong>
    <ul>
      <li>Underneath the Python interpreter lies a RISC-V softcore running on the FPGA fabric. RISC-V is an up-and-coming processor architecture that is poised to take over everything from deeply-embedded chips to high-performance computing. Fomu’s RISC-V softcore is a great introduction to the processor architecture of the future.</li>
    </ul>
  </li>
  <li><strong>is an FPGA</strong>
    <ul>
      <li>An FPGA is a piece of reconfigurable silicon. The default Fomu firmware exposes a USB bootloader running a RISC-V softcore, but you can load whatever you want. Softcores are also available for LM32 and OpenRISC. You can practice adding instructions to the CPU, or add new blocks such as LED blink patterns or better captouch hardware blocks.</li>
    </ul>
  </li>
  <li><strong>is entirely open</strong>
    <ul>
      <li>Developing with Fomu is incredibly easy: just load code via USB and go. Whether you’re writing RISC-V code, Python code, or HDL, it’s all uploaded to Fomu in the same way. The ICE40UP5K FPGA is supported with a fully open toolchain, meaning you can start development without creating an account, signing an NDA, or downloading a multi-gigabyte installer.
An FPGA is an Array of Gates that is Field-Programmable. When you buy a chip such as a CPU, the logic cells are all fixed in place. A CPU can run any amount of code, but if you want to do anything exotic you need to create software and, depending on what you want to do, that software can be very slow.</li>
    </ul>
  </li>
</ul>

<p>For example, many embedded projects use WS2812 LEDs such as <a href="https://www.adafruit.com/?q=WS2812">NeoPixels</a> that require a specialized timing signal. A CPU can generate this signal in software, but it can’t do anything in the background while talking to the light. If the string of LEDs is very long, then the CPU wastes a lot of time and power generating the signal.</p>

<p>With an FPGA, it becomes possible to create an “LED driver” that allows the CPU to keep running while a hardware component handles the timing. The CPU could do other work, or could put itself in a low power state.</p>

<p>In fact, the “CPU” in the FPGA is created from a hardware description language, meaning it can be modified or swapped out. If you wanted, you could create a brand-new CPU instruction. Do you want to have fast 64-bit multiplies? Or maybe you want a way to get random numbers easily? With Fomu and its FPGA, you have the source code to the CPU itself.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4332">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/fomu/</guid>
  </item><item>
    <title>Franzininho WiFi Wroom</title>
    <link>https://circuitpython.org/board/franzininho_wifi_wroom/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/Franzininho-wifi-wroom.jpg 300w,
               /assets/images/boards/large/Franzininho-wifi-wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/Franzininho-wifi-wroom.jpg" alt="Image of Board" loading="lazy">
<p>By Franzininho</p> <p>Franzininho WiFi Board is a development board to evaluate ESP32-S2 Modules (Wroom and Wrover) and develop the new generation of Franzininho Boards. The Franzininho project was created to develop skills in people in the areas of electronics and programming, through activities in the DIY format and in conjunction with maker culture in Brazil.</p>

<p>As there are not many boards on the Brazilian market with ESP32-S2, we developed Franzininho WiFi to serve as the ESP32-S2 development platform and help us evaluate and validate applications with this SoC.</p>

<p>This version comes with <strong>ESP32-S2 Wroom module</strong>.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ESP32-S2 Wroom:
    <ul>
      <li>Xtensa®single-core32-bit LX7 microprocessor, up to 240 MHz</li>
      <li>128 KB ROM</li>
      <li>320 KB SRAM</li>
      <li>16 KB SRAM in RTC</li>
      <li>WiFi 802.11 b/g/n</li>
    </ul>
  </li>
  <li>Interfaces: GPIO, SPI, LCD, UART, I2C, I2S, Camera interface, IR, pulse counter, LED PWM, TWAI(compatible with ISO 11898-1), USB 1.1OTG, ADC, DAC, touch sensor, temperature sensor.</li>
  <li>USB Type-A Male</li>
  <li>RGB LED (WS2812) (GPIO 18)</li>
  <li>40 pin broken out to 2x20 2.54mm header pins(36 GPIO) - Breadboard Friendly</li>
  <li>Reset and DFU (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li>Serial debug pins ( TX and RX, for checking the hardware serial debug console)
JTAG pads for advanced debugging access.</li>
  <li>3.3 V Power On LED</li>
  <li>3.3 V Regulator</li>
  <li>Power:
    <ul>
      <li>Micro USB port (default power supply)</li>
      <li>5V and GND header pins</li>
      <li>3V3 and GND header pins</li>
    </ul>
  </li>
  <li>Dimensions: 72 mm x 30 mm</li>
  <li>Works with ESP-IDF or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://franzininho.com.br/">Franzininho (BRAZIL)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Mar 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/franzininho_wifi_wroom/</guid>
  </item><item>
    <title>Franzininho WiFi Wrover</title>
    <link>https://circuitpython.org/board/franzininho_wifi_wrover/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/Franzininho-wifi-wrover.jpg 300w,
               /assets/images/boards/large/Franzininho-wifi-wrover.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/Franzininho-wifi-wrover.jpg" alt="Image of Board" loading="lazy">
<p>By Franzininho</p> <p>Franzininho WiFi Board is a development board to evaluate ESP32-S2 Modules (Wroom and Wrover) and develop the new generation of Franzininho Boards. The Franzininho project was created to develop skills in people in the areas of electronics and programming, through activities in the DIY format and in conjunction with maker culture in Brazil.</p>

<p>As there are not many boards on the Brazilian market with ESP32-S2, we developed Franzininho WiFi to serve as the ESP32-S2 development platform and help us evaluate and validate applications with this SoC.</p>

<p>This version comes with <strong>ESP32-S2 Wrover module</strong>.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ESP32-S2 Wrover:
    <ul>
      <li>Xtensa®single-core32-bit LX7 microprocessor, up to 240 MHz</li>
      <li>128 KB ROM</li>
      <li>320 KB SRAM</li>
      <li>16 KB SRAM in RTC</li>
      <li>2 MB (8 Mbit) PSRAM</li>
      <li>WiFi 802.11 b/g/n</li>
    </ul>
  </li>
  <li>Interfaces: GPIO, SPI, LCD, UART, I2C, I2S, Camera interface, IR, pulse counter, LED PWM, TWAI(compatible with ISO 11898-1), USB 1.1OTG, ADC, DAC, touch sensor, temperature sensor.</li>
  <li>USB Type-A Male</li>
  <li>RGB LED (WS2812) (GPIO 18)</li>
  <li>40 pin broken out to 2x20 2.54mm header pins(36 GPIO) - Breadboard Friendly</li>
  <li>Reset and DFU (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li>Serial debug pins ( TX and RX, for checking the hardware serial debug console)
JTAG pads for advanced debugging access.</li>
  <li>3.3 V Power On LED</li>
  <li>3.3 V Regulator</li>
  <li>Power:
    <ul>
      <li>Micro USB port (default power supply)</li>
      <li>5V and GND header pins</li>
      <li>3V3 and GND header pins</li>
    </ul>
  </li>
  <li>Dimensions: 72 mm x 30 mm</li>
  <li>Works with ESP-IDF or CircuitPython</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://franzininho.com.br/">Franzininho (BRAZIL)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Mar 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/franzininho_wifi_wrover/</guid>
  </item><item>
    <title>Python powered GameBoy-compatible cartridge</title>
    <link>https://circuitpython.org/board/gb_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gb_m4.jpg 300w,
               /assets/images/boards/large/gb_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gb_m4.jpg" alt="Image of Board" loading="lazy">
<p>By Scott Shawcroft</p> <p>CircuitPython for Game Boy is a work in progress, check out the weekly “Show and Tell” or “Top Secret” segment on ASK AN ENGINEER or when it’s ready, the new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>

<h2 id="links-and-more">Links and more</h2>
<ul>
  <li><a href="https://twitter.com/adafruit/status/1119323846857904128">Twitter thread</a>.</li>
  <li>A Python powered GameBoy-compatible cartridge with a SAMD51 - <a href="https://github.com/chickadee-tech/pygb">GitHub</a>.</li>
  <li>GBIO branch - <a href="https://github.com/tannewt/circuitpython/tree/gbio">GitHub</a>.</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 05 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gb_m4/</guid>
  </item><item>
    <title>Gemma M0</title>
    <link>https://circuitpython.org/board/gemma_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gemma_m0.jpg 300w,
               /assets/images/boards/large/gemma_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gemma_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Gemma M0</strong> is a super small microcontroller board, with just enough built-in to create many simple projects. It may look small and cute: round, about the size of a quarter, with friendly alligator-clip sew pads. But do not be fooled! The Gemma M0 is incredibly powerful! Adafruit used the same form factor from <a href="https://www.adafruit.com/product/1222">the original ATtiny85-based Gemma</a> and gave it an upgrade. The Gemma M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse.</p>

<p>The Gemma M0 will super-charge your wearables! It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Gemma M0 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with <strong>code.py</strong> on it. Edit <strong>code.py</strong> with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Gemma M0 and your code will go with you.</p>

<p>Gemma M0 features:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Gemma</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li><strong>256KB Flash</strong> - 8x as much as 8 KB on ATtiny85</li>
  <li><strong>32 KB RAM</strong> - 64x as much as 512 bytes on ATtiny85</li>
  <li><strong>48 MHz 32 bit processor</strong> - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li><strong>Native USB supported by every OS</strong> - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li><strong>Built in RGB DotStar LED</strong></li>
  <li><strong>Three big-hole sew-pads</strong> can be used for conductive thread or alligator-clips for fast prototyping
    <ul>
      <li>Each I/O pad can be used for <strong>12-bit analog input</strong>, or <strong>digital input/output </strong>with internally connected pullups or pulldowns</li>
      <li>True <strong>analog output</strong> on one I/O pad - can be used to play 10-bit quality audio clips</li>
      <li><strong>Two</strong> <strong>high speed PWM</strong> outputs on other two I/O Pads - for servos, LEDs, etc</li>
      <li>All three pads can also be used as <strong>hardware capacitive touch sensors</strong> with no additional components required</li>
      <li>Can drive <strong>NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels</strong>. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware I2C or Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging)</li>
    </ul>
  </li>
  <li>Same <strong>Reset switch</strong> for starting your project code over</li>
  <li><strong>On/Off switch</strong> built in</li>
  <li><strong>JST battery connector</strong> for plugging in AAA’s or LiPoly battery (no built-in LiPoly charging so it is safe to use with NiMH/Alkalines)</li>
</ul>

<p>Fully assembled and tested Gemma M0 with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-gemma-m0">Gemma M0 Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3501">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/gemma_m0/</guid>
  </item><item>
    <title>Gemma M0 PyCon 2018</title>
    <link>https://circuitpython.org/board/gemma_m0_pycon2018/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gemma_m0_pycon2018.jpg 300w,
               /assets/images/boards/large/gemma_m0_pycon2018.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gemma_m0_pycon2018.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Gemma M0</strong> is a super small microcontroller board, with just enough built-in to create many simple projects. It may look small and cute: round, about the size of a quarter, with friendly alligator-clip sew pads. But do not be fooled! The Gemma M0 is incredibly powerful! Adafruit used the same form factor from <a href="https://www.adafruit.com/product/1222">the original ATtiny85-based Gemma</a> and gave it an upgrade. The Gemma M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse.</p>

<p>The Gemma M0 will super-charge your wearables! It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Gemma M0 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with <strong>code.py</strong> on it. Edit <strong>code.py</strong> with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Gemma M0 and your code will go with you.</p>

<p>Gemma M0 features:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Gemma</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li><strong>256KB Flash</strong> - 8x as much as 8 KB on ATtiny85</li>
  <li><strong>32 KB RAM</strong> - 64x as much as 512 bytes on ATtiny85</li>
  <li><strong>48 MHz 32 bit processor</strong> - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li><strong>Native USB supported by every OS</strong> - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li><strong>Built in RGB DotStar LED</strong></li>
  <li><strong>Three big-hole sew-pads</strong> can be used for conductive thread or alligator-clips for fast prototyping
    <ul>
      <li>Each I/O pad can be used for <strong>12-bit analog input</strong>, or <strong>digital input/output </strong>with internally connected pullups or pulldowns</li>
      <li>True <strong>analog output</strong> on one I/O pad - can be used to play 10-bit quality audio clips</li>
      <li><strong>Two</strong> <strong>high speed PWM</strong> outputs on other two I/O Pads - for servos, LEDs, etc</li>
      <li>All three pads can also be used as <strong>hardware capacitive touch sensors</strong> with no additional components required</li>
      <li>Can drive <strong>NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels</strong>. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware I2C or Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging)</li>
    </ul>
  </li>
  <li>Same <strong>Reset switch</strong> for starting your project code over</li>
  <li><strong>On/Off switch</strong> built in</li>
  <li><strong>JST battery connector</strong> for plugging in AAA’s or LiPoly battery (no built-in LiPoly charging so it is safe to use with NiMH/Alkalines)</li>
</ul>

<p>Fully assembled and tested Gemma M0 with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-gemma-m0">Adafruit Gemma M0</a></li>
</ul>

<h2 id="downloads">Downloads</h2>
<ul>
  <li><a href="https://github.com/adafruit/CircuitPython_Badge_README/tree/master/final_versions/PYCON_2018">PyCon 2018 Gemma Files</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gemma_m0_pycon2018/</guid>
  </item><item>
    <title>Grand Central M4 Express</title>
    <link>https://circuitpython.org/board/grandcentral_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/grandcentral_m4_express.jpg 300w,
               /assets/images/boards/large/grandcentral_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/grandcentral_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Grand Central</strong> features the <strong>Microchip ATSAMD51</strong>. This dev board is so big, it’s not named after a Metro train, it’s a whole freakin’ <em>station</em>!</p>

<p>This board is like a freight train, with its 120MHz Cortex M4 with floating point support. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>The Grand Central is the first SAMD board that has enough pins to make it in the form of the Arduino Mega - with a massive number of pins, tons of analog inputs, dual DAC output, 8 MBytes of QSPI flash, SD card socket, and a NeoPixel.</p>

<p>To start off our ATSAMD51 journey, it goes large with the Mega shape and pinout you know and love. The front half has the same shape and pinout as an Adafruit Metro, so it is compatible with many shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51P20:</p>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>1MB</strong> flash, <strong>256 KB</strong> RAM</li>
  <li>32-bit, 3.3V logic and power</li>
  <li><strong>70 GPIO pins in total</strong></li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (15 analog pins)</li>
  <li>8 x hardware SERCOM (can be I2C, SPI or UART)</li>
  <li>22 x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>12-bit Parallel capture controller (for camera/video in)</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
</ul>

<p>Extras:</p>

<ul>
  <li><strong>Power the Grand Central</strong> with 6-12V polarity protected DC or the micro USB connector to any 5V USB source. The 2.1mm DC jack has an on/off switch next to it so you can turn off your setup easily. The board will automagically switch between USB and DC.</li>
  <li><strong>Grand Central has 62 GPIO pins</strong>, 16 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. 5 more SERCOMs are available for extra I2C/SPI/UARTs.</li>
  <li><strong>Logic level is 3.3V</strong></li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>8 MB QSPI Flash </strong>storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 8 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Micro SD Card slot</strong> - removable storage of any size, connected to an SPI SERCOM (SDIO is not supported)</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible)</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 256KB of RAM CircuitPython runs <em>really</em> well on this chip!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-grand-central">Grand Central M4 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4064">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/grandcentral_m4_express/</guid>
  </item><item>
    <title>Cucumber M</title>
    <link>https://circuitpython.org/board/gravitech_cucumber_m/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gravitech_cucumber_m.jpg 300w,
               /assets/images/boards/large/gravitech_cucumber_m.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gravitech_cucumber_m.jpg" alt="Image of Board" loading="lazy">
<p>By Gravitech</p> <p>Cucumber M is a WiFi IoT development board. It features the latest ESP32-S2 chipset from Espressif (ESP32-S2-WROOM). M version is using integrated PCB antenna.</p>

<h2 id="features">Features</h2>

<ul>
  <li>x2 USB-C (debug and OTG)</li>
  <li>FTDI chip for USB-to-Serial converter</li>
  <li>RGB LED which use only one signal line and can mix up to over 16 million color</li>
  <li>TX/RX, IO2 and PWR LED</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.gravitech.us/cumesdebo.html">Gravitech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gravitech_cucumber_m/</guid>
  </item><item>
    <title>Cucumber MS</title>
    <link>https://circuitpython.org/board/gravitech_cucumber_ms/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gravitech_cucumber_ms.jpg 300w,
               /assets/images/boards/large/gravitech_cucumber_ms.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gravitech_cucumber_ms.jpg" alt="Image of Board" loading="lazy">
<p>By Gravitech</p> <p>Cucumber MS is a WiFi IoT development board. It features the latest ESP32-S2 chipset from Espressif (ESP32-S2-WROOM). MS version is using integrated PCB antenna. It is a special version which include on-board sensors.</p>

<h2 id="features">Features</h2>

<ul>
  <li>HS221 Temperature &amp; Humidity sensor</li>
  <li>MPU-6050 3-axis Accelerometer &amp; 3-axis Gyroscope</li>
  <li>BMP280 Pressure sensor.</li>
  <li>2x USB-C (debug and OTG)</li>
  <li>FTDI chip for USB-to-Serial converter which highly compatible with most computers</li>
  <li>RGB LED which use only one signal line and can mix up to over 16 million color</li>
  <li>TX/RX, IO2 and PWR LED</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.gravitech.us/cumsdebowise.html">Gravitech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gravitech_cucumber_ms/</guid>
  </item><item>
    <title>Cucumber R</title>
    <link>https://circuitpython.org/board/gravitech_cucumber_r/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gravitech_cucumber_r.jpg 300w,
               /assets/images/boards/large/gravitech_cucumber_r.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gravitech_cucumber_r.jpg" alt="Image of Board" loading="lazy">
<p>By Gravitech</p> <p>Cucumber R is a WiFi IoT development board. It features the latest ESP32-S2 chipset from Espressif (ESP32-S2-WROVER).</p>

<h2 id="features">Features</h2>

<ul>
  <li>x2 USB-C (debug and OTG)</li>
  <li>FTDI chip for USB-to-Serial converter</li>
  <li>RGB LED which use only one signal line and can mix up to over 16 million color</li>
  <li>TX/RX, IO2 and PWR LED</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.gravitech.us/curesdebo.html">Gravitech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gravitech_cucumber_r/</guid>
  </item><item>
    <title>Cucumber RS</title>
    <link>https://circuitpython.org/board/gravitech_cucumber_rs/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/gravitech_cucumber_rs.jpg 300w,
               /assets/images/boards/large/gravitech_cucumber_rs.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/gravitech_cucumber_rs.jpg" alt="Image of Board" loading="lazy">
<p>By Gravitech</p> <p>Cucumber RS is a special version which include on-board sensors.</p>

<h2 id="features">Features</h2>

<ul>
  <li>HS221 Temperature &amp; Humidity sensor</li>
  <li>MPU-6050 3-axis Accelerometer &amp; 3-axis Gyroscope</li>
  <li>BMP280 Pressure sensor.</li>
  <li>2x USB-C (debug and OTG)</li>
  <li>FTDI chip for USB-to-Serial converter which highly compatible with most computers</li>
  <li>RGB LED which use only one signal line and can mix up to over 16 million color</li>
  <li>TX/RX, IO2 and PWR LED</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.gravitech.us/cursdebowise.html">Gravitech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gravitech_cucumber_rs/</guid>
  </item><item>
    <title>HalloWing M0 Express</title>
    <link>https://circuitpython.org/board/hallowing_m0_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hallowing_m0_express.jpg 300w,
               /assets/images/boards/large/hallowing_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hallowing_m0_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This is Hallowing..this is Hallowing… Hallowing! Hallowing! </p>

<p>Are you the kind of person who doesn’t like taking down the skeletons and spiders until after January? This is development board for you. This is electronics at its <em>most spooky!</em> The <strong>Adafruit HalloWing</strong> is a skull-shaped ATSAMD21 board with a ton of extras built in to make for an adorable wearable, badge, development kit, or the engine for your next cosplay or prop.</p>

<p>On the front is a cute <strong>1.44” sized 128x128 full color TFT</strong>. There’s also 4 fang-teeth below the display, these are analog/capacitive touch inputs with big alligator-clip holes.</p>

<p>On the reverse is a smorgasbord of electronic goodies:</p>

<ul>
  <li><strong>ATSAMD21G18</strong> @ 48MHz with 3.3V logic/power - 256KB of FLASH + 32KB of RAM</li>
  <li><strong>8 MB of SPI Flash</strong> for storing images, sounds, animations, whatever!</li>
  <li><strong>3-axis accelerometer</strong> (motion sensor)</li>
  <li><strong>Light sensor</strong>, reverse-mount so that it points out the front</li>
  <li><strong>Mono Class-D speaker driver</strong> for 4-8 ohm speakers, up to 2 Watts, with mini volume pot</li>
  <li>LiPoly battery port with built in recharging capability</li>
  <li>USB port for battery charging, programming and debugging</li>
  <li>Two female header strips with Feather-compatible pinout so you can plug any FeatherWings in</li>
  <li>JST ports for Neopixels, sensor input, and I2C (you can fit I2C Grove connectors in here)</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>Reset button</li>
  <li>On-Off switch</li>
</ul>

<p>Right now you can use the Hallowing similarly Feather M0 Express, it’s got the same chip although the pins have been rearranged. CircuitPython support, the extra 8 MB of SPI Flash is great for sound effects projects where you want to play up to 3 minutes of WAV files.</p>

<p>On each side of the Hallowing are JST-PH plugs for connecting external devices. The 3-pin JSTs connect to analog pins on the SAMD21, so you can use them for analog inputs. One is labeled for Neopixel and one for Sensors since most people will have one of each. The 4-pin JST connector connects to the I2C port and you can fit Grove connectors in it for additional hardware support.</p>

<p>Comes fully assembled and ready to be your spooky friend. Comes installed with the UF2 bootloader.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-hallowing">HalloWing M0 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3900/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3900">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/hallowing_m0_express/</guid>
  </item><item>
    <title>HalloWing M4 Express</title>
    <link>https://circuitpython.org/board/hallowing_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hallowing_m4_express.jpg 300w,
               /assets/images/boards/large/hallowing_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hallowing_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This is Hallowing, now with SAMD51 M4 processor! More later!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-hallowing-m4">HalloWing M4 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4300/guides">HalloWing M4 Projects and Guides</a></li>
  <li><a href="https://learn.adafruit.com/products/3900/guides">HalloWing M0 Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4300">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/hallowing_m4_express/</guid>
  </item><item>
    <title>Odroid Go</title>
    <link>https://circuitpython.org/board/hardkernel_odroid_go/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hardkernel_odroid_go.jpg 300w,
               /assets/images/boards/large/hardkernel_odroid_go.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hardkernel_odroid_go.jpg" alt="Image of Board" loading="lazy">
<p>By HardKernel</p> <p><strong>The original Odroid Go has been discontinued</strong></p>

<p><strong>To celebrate ODROID’s 10th anniversary,</strong> we present the ODROID-GO Game Kit! It includes a special anniversary board with all the parts to put together your own game kit and see the workings behind such a device. It is not only a fun assembly project but also an educational tool to learn about all the hardware and software that goes into building such a device.</p>

<p><strong>Assembly and learning WHY</strong>
Have fun building your own handheld game kit while learning about the internal functions of each part and its purpose. Learn how each button is attached to a PCB switch pad, what materials are used, and how to put it all together to create a button control pad to play games! Learn how to connect power, speakers and how to download and install an OS. Learn why certain pieces are made of particular materials and why you need certain connectors. Since the device is clear, all the internal components and all the lights are visible.</p>

<p><strong>PLAY GAMES</strong>
Once you have assembled the ODROID-GO, you can download and install games. Enjoy your gaming device (that you built)!</p>

<p><strong>CODING CAMP</strong>
Install Arduino and learn some basic coding. We will provide online guides to code some simple, yet cool, tasks. Then, add a weather station<em>, learn how to check the battery life, test the speaker, add an ultrasonic distance meter</em> and more.
* Parts sold separately.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-go/">Hard Kernel</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/hardkernel_odroid_go/</guid>
  </item><item>
    <title>HiiBot BlueFi</title>
    <link>https://circuitpython.org/board/hiibot_bluefi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hiibot_bluefi.jpg 300w,
               /assets/images/boards/large/hiibot_bluefi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hiibot_bluefi.jpg" alt="Image of Board" loading="lazy">
<p>By Hangzhou LeBan</p> <p>The HiiBot BlueFi is a microbit-compatible single board computer, but has enhanced computing ability, and connectivity. BlueFi uses Nordic nRF52840 (64MHz Cortex M4F, 1MB Flash and 256KB SRAM) as main processor, ESP32 (160MHz dual CPU, 4MB Flash and 520KB SRAM) as a co-processor. Features:</p>

<ul>
  <li>Microbit-compatible (board size, extended interface)</li>
  <li>Built-in BlueTooth 5 (nRF52840) and WiFi (ESP32)</li>
  <li>2 MB of QSPI Flash storage</li>
  <li>Battery Charging and 1.5A DC-DC</li>
  <li>1.3” TFT-LCD (IPS 240x240)</li>
  <li>5x Neopixel</li>
  <li>1W Speaker with class-D amplifier</li>
  <li>1x Red LED (programmable)</li>
  <li>1x White LED (programmable)</li>
  <li>2x Button (A and B) + 1x reset button</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Integrated Optical sensor (Proximity, Gesture, Color, and Illumination)</li>
  <li>1x Temperature and Humidity sensor (SHT31-Dis)</li>
  <li>1x Magnetometer 3-axis sensor (LIS3MDL)</li>
  <li>1x 3-axis Accelerometer and 3-axis Gyroscope (LSM6DS)</li>
  <li>1x mini-Grove/Qwiic/STEMMA QT connector</li>
</ul>

<p>The HiiBot BlueFi have a lot of sensors, vs 6-DoF motion sensor of microbit, including 9-DoF motion sensors, sound sensor, temperature &amp; humidity sensor, and integrated optical sensor. At the same time, BlueFi have two buttons, three touchpads, and 40-Pin extended interface on the microbit.</p>

<p>In a variety of IoT application scenario, BlueTooth and WiFi is an integral part of the wireless connection channel. BlueTooth and WiFi be supportted at the same time on the BlueFI board. You can realize bridges, gateways and other net equipment with BlueFi.</p>

<p>Built-in a lot of sensors and output devices on the HiiBot BlueFi, but a low-cost SBC. Our purpose is to help you quickly realize all kinds of ideas, no trouble wiring and welding electronic components.</p>

<p>The most exciting part of the HiiBot BlueFi is that while you can use it with the Arduino IDE - and it’s bonkers fast when you do, we are shipping it with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the BlueFi and your code will go with you.</p>

<p>Easy reprogramming: the HiiBot BlueFi comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE.</p>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/hiibot_bluefi/</guid>
  </item><item>
    <title>HiiBot IoTs2</title>
    <link>https://circuitpython.org/board/hiibot_iots2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hiibot_iots2.jpg 300w,
               /assets/images/boards/large/hiibot_iots2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hiibot_iots2.jpg" alt="Image of Board" loading="lazy">
<p>By Hangzhou LeBan</p> <p>An ESP32-S2 based development board with small size (25.4 mm x 45.9 mm).</p>

<h2 id="features">Features</h2>

<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>8 MB SPI FlashROM</li>
  <li>8 MB SPI PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>USB-C</li>
  <li>1.14” TFT-LCD (IPS 135x240)</li>
  <li>1x Neopixel (<code class="language-plaintext highlighter-rouge">GPIO16</code>)</li>
  <li>1x programmable Blue LED (<code class="language-plaintext highlighter-rouge">GPIO37</code>)</li>
  <li>2x LED indicator (power[Green], charge[Red])</li>
  <li>1x programmable button (<code class="language-plaintext highlighter-rouge">GPIO21</code>)</li>
  <li>1x System Reset button</li>
  <li>1x 3-axis Accelerometer (LIS3DH, <code class="language-plaintext highlighter-rouge">GPIO1</code> &amp; <code class="language-plaintext highlighter-rouge">GPIO2</code>)</li>
  <li>20x GPIO pin exposed</li>
  <li>Battery Charging and 1.5 A DC-DC</li>
  <li>1x Qwiic/STEMMA QT connector (<code class="language-plaintext highlighter-rouge">GPIO1</code> &amp; <code class="language-plaintext highlighter-rouge">GPIO2</code>)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/bradchan/hiibot-iots2/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/hiibot_iots2/</guid>
  </item><item>
    <title>Hunter Cat NFC</title>
    <link>https://circuitpython.org/board/huntercat_nfc/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/huntercat_nfc.jpg 300w,
               /assets/images/boards/large/huntercat_nfc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/huntercat_nfc.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>The Hunter Cat NFC is the latest security tool for contactless (Near Field Communication) used in access control, identification and bank cards. Specially created to identify NFC readers and sniffing tools, with this tool you can audit, read or emulate cards of different types.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/hunter-cat-nfc/">Electronic Cats</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/huntercat_nfc/</guid>
  </item><item>
    <title>Ikigaisense Vita</title>
    <link>https://circuitpython.org/board/ikigaisense_vita/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ikigaisense_vita.jpg 300w,
               /assets/images/boards/large/ikigaisense_vita.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ikigaisense_vita.jpg" alt="Image of Board" loading="lazy">
<p>By Ikigaisense</p> <p>Ideally VitaPatch could be a disposable patch. It is an dedicated device to monitor vital signs of temperature, heart rate, SpO2 and blood pressure. It is also an integrated solution to monitor all these vital signs.</p>

<p>VitaPatch has to be small if not tiny so that it is convenient. It has to be cheap so that it could be available to more people. It will be open sourced so that anyone could hack and improve.</p>

<p>This is an ambitious endeavour and most likely a bumpy one. If you are intrigued, let’s join the force to make it real.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://hackaday.io/project/173761-vita-hardware">Hackaday.io</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 29 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ikigaisense_vita/</guid>
  </item><item>
    <title>MIMXRT1010 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1010_evk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/imxrt1010_evk.jpg 300w,
               /assets/images/boards/large/imxrt1010_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/imxrt1010_evk.jpg" alt="Image of Board" loading="lazy">
<p>By NXP</p> <p>The i.MX RT1010 EVK is a two-layer low-cost through-hole USB-powered PCB. At its heart lies the i.MX RT1010 crossover MCU in an 80LQFP package, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds of up to 500 MHz to provide high CPU performance and best real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1010-evaluation-kit:MIMXRT1010-EVK">NXP</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1010_evk/</guid>
  </item><item>
    <title>MIMXRT1020 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1020_evk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/imxrt1020_evk.jpg 300w,
               /assets/images/boards/large/imxrt1020_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/imxrt1020_evk.jpg" alt="Image of Board" loading="lazy">
<p>By NXP</p> <p>The i.MX RT1020 EVK is a 2-layer low-cost through-hole USB-powered PCB. At its heart lies the i.MX RT1020 crossover MCU in LQFP144 package, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds up to 500 MHz to provide high CPU performance and excellent real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1020-evaluation-kit:MIMXRT1020-EVK">NXP</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1020_evk/</guid>
  </item><item>
    <title>MIMXRT1060 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1060_evk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/imxrt1060_evk.jpg 300w,
               /assets/images/boards/large/imxrt1060_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/imxrt1060_evk.jpg" alt="Image of Board" loading="lazy">
<p>By NXP</p> <p>The i.MX RT1060 EVK is a 4-layer through-hole USB-powered PCB. At its heart lies the i.MX RT1060 crossover MCU, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds up to 600 MHz to provide high CPU performance and excellent real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1060-evaluation-kit:MIMXRT1060-EVK">NXP</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1060_evk/</guid>
  </item><item>
    <title>ItsyBitsy M0 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_m0_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/itsybitsy_m0_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/itsybitsy_m0_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy M0 Express</strong>! Small, powerful, with a rockin’ ATSAMD21 Cortex M0 processor running at 48 MHz - this microcontroller board is perfect when you want something very compact, but still with a bunch of pins.</p>

<p>ItsyBitsy M0 Express is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (12 of which can be analog in, 1x analog out, and 13x PWM out). It packs much of the same capability as an <a href="https://www.adafruit.com/product/3505">Adafruit Metro M0 Express</a> or <a href="https://www.adafruit.com/product/3403">Feather M0 Express</a> but <em>really really small</em>. So it’s great once you’ve finished up a prototype on a Metro M0 or Feather M0, and want to make the project much smaller. It even comes with 2MB of SPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy M0 is that it is shipping with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<p>Here are some of the updates you can look forward to when using ItsyBitsy M0:</p>

<ul>
  <li>Same size, form-factor as the ItsyBisty 32u4, and nearly-indentical pinout as <a href="https://www.adafruit.com/product/3675">ItsyBitsy 32u4 3.3V</a></li>
  <li><strong>ATSAMD21G18 32-bit Cortex M0+</strong> with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li><strong>3.3V logic</strong>, <strong>48 MHz</strong>, <strong>32 bit</strong> processor</li>
  <li><strong>2 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>Tons of GPIO! 23 x GPIO pins with following capabilities:
    <ul>
      <li>1 x True analog output pin - can be used to play 10-bit quality audio clips</li>
      <li>13 x PWM outputs - for servos, LEDs, etc</li>
      <li>11 x 12-bit analog inputs</li>
      <li>7 x Hardware capacitive touch sensors with no additional components required</li>
      <li>1 x Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other high-current devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on the VHigh pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware SPI, I2C and Serial all available</li>
    </ul>
  </li>
  <li>Reset button and pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
</ul>

<p>Comes assembled and tested ItsyBitsy M0, with header that can be soldered in for use with a breadboard. ItsyBity M0 comes with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-itsy-bitsy-m0">ItsyBitsy M0 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3727/guides">Projects and Guides</a>
    <h2 id="purchase">Purchase</h2>
  </li>
  <li><a href="https://www.adafruit.com/product/3727">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_m0_express/</guid>
  </item><item>
    <title>ItsyBitsy M4 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/itsybitsy_m4_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/itsybitsy_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy M4 Express</strong> featuring the <strong>Microchip ATSAMD51</strong>! Small, powerful, with a ultra fast ATSAMD51 Cortex M4 processor running at 120 MHz - this microcontroller board is perfect when you want something very compact, with a ton of horsepower and a bunch of pins. This Itsy is like a bullet train, with it’s <strong>120MHz Cortex M4</strong> with floating point support and <strong>512KB Flash and 192KB RAM</strong>. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>ItsyBitsy M4 Express is only is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (7 of which can be analog in, 2 x 1 MSPS analog out DACs, and 18 x PWM out). It’s the same chip as the <a href="https://www.adafruit.com/product/3382">Adafruit Metro M4</a> but <em>really really small</em>. So it’s great once you’ve finished up a prototype on a Metro M4 or (the upcoming) Feather M4, and want to make the project much smaller. It even comes with 2MB of SPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy M4 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<p>Here are some of the updates you can look forward to when using ItsyBitsy M4:</p>

<ul>
  <li>Same size, form-factor as the <a href="https://www.adafruit.com/product/3675">ItsyBitsy 32u4</a> and <a href="https://www.adafruit.com/product/3727">ItsyBitsy M0</a>, and nearly-identical pinout as both</li>
  <li><strong>ATSAMD51 32-bit Cortex M4</strong> core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li><strong>2 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>32-bit, 3.3V logic and power</li>
  <li>Tons of GPIO! 23 x GPIO pins with following capabilities:
    <ul>
      <li>Dual 1 MSPS 12 bit true analog DAC (A0 and A1) - can be used to play 12-bit stereo audio clips</li>
      <li>Dual 1 MSPS 12 bit ADC (7 analog pins some on ADC1 and some on ADC2)</li>
      <li>6 x hardware SERCOM - Native hardware SPI, I2C and Serial all available</li>
      <li>18 x PWM outputs - for servos, LEDs, etc</li>
      <li>No I2S. I2S is only supported on the 64 pin version of this chip. But there’s a stereo DAC you could use.</li>
      <li>1 x Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other 5V-logic devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 60,000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on the VHigh pin </a>so you can drive pixels without having to spend any processor time on it.</li>
    </ul>
  </li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>Reset button and pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa v1.8 compatible)</li>
</ul>

<p>Comes assembled and tested, with headers that can be soldered in for use with a breadboard. ItsyBitsy M4 comes with CircuitPython programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-adafruit-itsybitsy-m4">Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3800">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_m4_express/</guid>
  </item><item>
    <title>ItsyBitsy NRF52840 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_nrf52840_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/itsybitsy_nrf52840_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/itsybitsy_nrf52840_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy nRF52840 Express</strong> featuring the <strong>Nordic nRF52840 Bluetooth LE</strong> processor! Teensy &amp; powerful, with an fast nRF52840 Cortex M4 processor running at 64 MHz and 1 MB of FLASH - this microcontroller board is perfect when you want something very compact, with a heap-load of memory and Bluetooth LE support This Itsy is your best option for tiny wireless connectivity - it can act as both a BLE central and peripheral, with support in both Arduino and CircuitPython</p>

<p>ItsyBitsy nRF52840 Express is only 1.4” long by 0.7” wide, but has 6 power pins, 21 digital GPIO pins (6 of which can be analog in). It’s the same chip as the <a href="https://www.adafruit.com/product/4062">Feather nRF52840</a> but <em>really really small</em>. So it’s great for thse really compact builds. It even comes with 2MB of QSPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy is that while we ship it with an Arduino IDE compatible demo, you can also install CircuitPython on board with only a few clicks. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your wireless-enabled project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-itsybitsy-nrf52840-express">ItsyBitsy NRF52840 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4481">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_nrf52840_express/</guid>
  </item><item>
    <title>EncoderPad RP2040</title>
    <link>https://circuitpython.org/board/jpconstantineau_encoderpad_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jpconstantineau_encoderpad_rp2040.jpg 300w,
               /assets/images/boards/large/jpconstantineau_encoderpad_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jpconstantineau_encoderpad_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The EncoderPad RP2040 is a Video Editing Macropad with a 60mm Encoder Wheel. This encoder is made of metal and feels like it will last forever. The EncoderPad uses 9 mechanical switches (Cherry MX type) for sending commands to the computer and/or changing the operation of the encoder. The keys are hot-swap socketed and have an individual underglow RGB LED which can be turned on.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>9 keys connected directly to GPIOs</li>
  <li>Per key RGB LEDs (NeoPixels)</li>
  <li>60mm 100 step Encoder Wheel</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Included buzzer for audio feedback</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<h2 id="powered-by-circuitpython">Powered by CircuitPython</h2>
<p>It’s not just a macropad with a big encoder but also a USB drive containing the firmware as CircuitPython files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the macros or to add a new function. No need to download any software or setup a development environment.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jpconstantineau/EncoderPad_RP2040">Board Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>The EncoderPad RP2040 is now on the Tindie store if you are interested in getting one.</p>
<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/rgb-video-editing-macropad-with-a-rp2040/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 01 Sep 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/jpconstantineau_encoderpad_rp2040/</guid>
  </item><item>
    <title>PyKey18 Numpad</title>
    <link>https://circuitpython.org/board/jpconstantineau_pykey18/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jpconstantineau_pykey18.jpg 300w,
               /assets/images/boards/large/jpconstantineau_pykey18.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jpconstantineau_pykey18.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The PyKey18 is a custom programmable mechanical keyboard with a standard Numpad layout, a rotary encoder and a small OLED display. The PyKey18 uses mechanical switches (Cherry MX type). The keys are hot-swap socketed and have an individual underglow RGB LED which can be turned on.  The PCB was designed for use with PCB-mount stabilizers.</p>

<p>Since this is a Hot Swappable Switches keyboard, you can choose the MX switches as well as the keycaps you prefer.  You can even mix and match switches for the ultimate customization.</p>

<p>The PyKey18 also has a small 0.91” OLED display and has a location for an optional Stemma QT/QWIIC connector.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Per key RGB LEDs (NeoPixels)</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Included buzzer for audio feedback</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<h2 id="powered-by-circuitpython">Powered by CircuitPython</h2>
<p>It’s not just a keyboard but also a USB drive containing the firmware as CircuitPython files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the keymap, add macros or add a new function.  This keyboard is fully programmable via CiruitPython so there’s no software to install, just plug it in, change keymaps and start building macros. Since all of the programming happens on the keyboard Python files, you can plug it into any computer and take your custom layouts wherever you go.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jpconstantineau/PyKey60">Board Hardware Repo</a></li>
  <li><a href="http://pykey.jpconstantineau.com/docs/">Helpful Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>The PyKey18 is available on the Tindie store if you are interested in getting one.</p>
<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/pykey18-rgb-numpadkeyboard-with-a-rp2040/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 14 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/jpconstantineau_pykey18/</guid>
  </item><item>
    <title>PyKey44 Ergo Keyboard</title>
    <link>https://circuitpython.org/board/jpconstantineau_pykey44/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jpconstantineau_pykey44.jpg 300w,
               /assets/images/boards/large/jpconstantineau_pykey44.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jpconstantineau_pykey44.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The PyKey44 is a custom programmable mechanical keyboard with a compact ergonobic layout similar to the popular Atreus. The PyKey44 uses mechanical switches Kailh Choc type). The keys are hot-swap socketed and have an individual underglow RGB LED which can be turned on.</p>

<p>Since this is a Hot Swappable Switches keyboard, you can choose the Kailh Choc switches as well as the keycaps you prefer.  You can even mix and match switches for the ultimate customization.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Per key RGB LEDs (NeoPixels)</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Included buzzer for audio feedback</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<h2 id="powered-by-circuitpython">Powered by CircuitPython</h2>
<p>It’s not just a keyboard but also a USB drive containing the firmware as CircuitPython files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the keymap, add macros or add a new function.  This keyboard is fully programmable via CiruitPython so there’s no software to install, just plug it in, change keymaps and start building macros. Since all of the programming happens on the keyboard Python files, you can plug it into any computer and take your custom layouts wherever you go.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jpconstantineau/PyKey60">Board Hardware Repo</a></li>
  <li><a href="http://pykey.jpconstantineau.com/docs/">Helpful Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>The PyKey44 is available on the Tindie store if you are interested in getting one.</p>
<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/low-profile-44-keys-rgb-keyboard-pcb-with-a-rp2040/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 14 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/jpconstantineau_pykey44/</guid>
  </item><item>
    <title>PyKey60 Keyboard</title>
    <link>https://circuitpython.org/board/jpconstantineau_pykey60/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jpconstantineau_pykey60.jpg 300w,
               /assets/images/boards/large/jpconstantineau_pykey60.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jpconstantineau_pykey60.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The PyKey60 is a custom programmable mechanical keyboard with a standard ANSI 60% keyboard layout compatible with any cases made for the GH60. The PyKey60 uses mechanical switches (Cherry MX type). The keys are hot-swap socketed and have an individual underglow RGB LED which can be turned on.  The PCB was designed for use with PCB-mount stabilizers.</p>

<p>Since this is a Hot Swappable Switches keyboard, you can choose the MX switches as well as the keycaps you prefer.  You can even mix and match switches for the ultimate customization.</p>

<p>Just like CircuitPython, this keyboard is targeted for beginners.  The design keeps the matrix definition simple to 14 columns and 5 rows instead of using a GPIO-optimized matrix of 8 columns and 8 rows.  Neopixel order is also in line with key numbers.  This keeps the complexity of coding a keyboard firmware to a minimum.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Per key RGB LEDs (NeoPixels)</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Included buzzer for audio feedback</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<h2 id="powered-by-circuitpython">Powered by CircuitPython</h2>
<p>It’s not just a keyboard but also a USB drive containing the firmware as CircuitPython files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the keymap, add macros or add a new function.  This keyboard is fully programmable via CiruitPython so there’s no software to install, just plug it in, change keymaps and start building macros. Since all of the programming happens on the keyboard Python files, you can plug it into any computer and take your custom layouts wherever you go.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jpconstantineau/PyKey60">Board Hardware Repo</a></li>
  <li><a href="http://pykey.jpconstantineau.com/docs/">Helpful Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>The PyKey60 is available on the Tindie store if you are interested in getting one.</p>
<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/pykey60-rgb-keyboard-pcb-with-a-rp2040/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Sep 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/jpconstantineau_pykey60/</guid>
  </item><item>
    <title>PyKey87 Ten Key Less (TKL) Keyboard</title>
    <link>https://circuitpython.org/board/jpconstantineau_pykey87/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jpconstantineau_pykey87.jpg 300w,
               /assets/images/boards/large/jpconstantineau_pykey87.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jpconstantineau_pykey87.jpg" alt="Image of Board" loading="lazy">
<p>By JPConstantineau</p> <p>The PyKey87 is a custom programmable mechanical keyboard with a standard TKL layout. The PyKey87 uses mechanical switches (Cherry MX type). The keys are hot-swap socketed and have an individual underglow RGB LED which can be turned on.  The PCB was designed for use with PCB-mount stabilizers.</p>

<p>Since this is a Hot Swappable Switches keyboard, you can choose the MX switches as well as the keycaps you prefer.  You can even mix and match switches for the ultimate customization.</p>

<p>Just like CircuitPython, this keyboard is targeted for beginners.  The design keeps the matrix definition simple to 17 columns and 6 rows instead of using a GPIO-optimized matrix of 8 columns and 8 rows.  Neopixel order is also in line with key numbers.  This keeps the complexity of coding a keyboard firmware to a minimum.</p>

<p>The PCB also has a location for an optional Stemma QT/QWIIC connector.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Per key RGB LEDs (NeoPixels)</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Included buzzer for audio feedback</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<h2 id="powered-by-circuitpython">Powered by CircuitPython</h2>
<p>It’s not just a keyboard but also a USB drive containing the firmware as CircuitPython files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the keymap, add macros or add a new function.  This keyboard is fully programmable via CiruitPython so there’s no software to install, just plug it in, change keymaps and start building macros. Since all of the programming happens on the keyboard Python files, you can plug it into any computer and take your custom layouts wherever you go.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jpconstantineau/PyKey60">Board Hardware Repo</a></li>
  <li><a href="http://pykey.jpconstantineau.com/docs/">Helpful Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>The PyKey87 is available on the Tindie store if you are interested in getting one.</p>
<ul>
  <li><a href="https://www.tindie.com/products/jpconstantineau/pykey87-rgb-tkl-keyboard-with-a-rp2040/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 14 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/jpconstantineau_pykey87/</guid>
  </item><item>
    <title>KickSat Sprite</title>
    <link>https://circuitpython.org/board/kicksat-sprite/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/kicksat-sprite.jpg 300w,
               /assets/images/boards/large/kicksat-sprite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/kicksat-sprite.jpg" alt="Image of Board" loading="lazy">
<p>By Max Holliday</p> <p>CircuitPython provides an approachable and logical means of conducting science with hardware. Paired with low-cost hardware shown to work in space, we can enable an new generation to question and explore the unknown. With the necessary “satellite stuff” already baked in, students can spend their time trying something new rather than reinventing the wheel (similar philosophy to early Arduino efforts and the microcontroller movement in general).</p>

<h2 id="resources">Resources</h2>
<p><a href="https://github.com/RoboticExplorationLab/sprite">RoboticExplorationLab/sprite</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/kicksat-sprite/</guid>
  </item><item>
    <title>TTGO T-01C3 ESP32-C3</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t-01c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lilygo_ttgo_t-01c3.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t-01c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lilygo_ttgo_t-01c3.jpg" alt="Image of Board" loading="lazy">
<p>By LILYGO</p> <p>ESP32-C3 is a safe, stable, low-power, low-cost IoT chip, equipped with a RISC-V 32-bit single-core processor supporting 2.4 GHz WiFi and Bluetooth 5 (LE).</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003538055090.html">AliExpress</a></li>
  <li><a href="https://usa.banggood.com/LILYGO-TTGO-T-01C3-ESP32-C3-WIFI-Bluetooth-5_0-IPEX-Antenna-For-ESP-01-With-External-Antenna-Base-p-1924872.html">Banggood</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t-01c3/</guid>
  </item><item>
    <title>TTGO T-OI Plus</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t-oi-plus/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lilygo_ttgo_t-oi-plus.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t-oi-plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lilygo_ttgo_t-oi-plus.jpg" alt="Image of Board" loading="lazy">
<p>By LILYGO</p> <p>LILYGO® TTGO T-OI PLUS RISC-V ESP32-C3 Chip Module Rechargeable 16340 Battery Holder Support Wi-Fi BLE Development Board</p>

<p>T-OI PLUS is based on the ESP32-C3 main control chip,ESP32-C3 is a safe, low-power, low-cost RISC-V</p>

<p>MCU,supports Wi-Fi and Bluetooth 5 (LE).</p>

<p>Rich memory resources can meet the functional requirements of various common IoT products.</p>

<p>Continue the T-OI ESP8266 version appearance structure design,based on the pin interface compatible</p>

<p>with MINI D1 expansion shield,with 16340 lithium battery holder and compatible with Grove interface.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/lilygo/lilygo-ttgo-t-oi-plus-risc-v-esp32-c3/">Tindie</a></li>
  <li><a href="https://www.aliexpress.com/item/3256803162622213.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t-oi-plus/</guid>
  </item><item>
    <title>TTGO T8 ESP32-S2-WROOM</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t8_esp32_s2_wroom/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lilygo_ttgo_t8_esp32_s2_wroom.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t8_esp32_s2_wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lilygo_ttgo_t8_esp32_s2_wroom.jpg" alt="Image of Board" loading="lazy">
<p>By LILYGO</p> <p>The LILYGO TTGO T8 ESP32-S2 ESP32-S2-WROOM is a basic development board.</p>

<h2 id="features--specifications">Features &amp; Specifications</h2>

<ul>
  <li>ESP32-S2 240 MHz Tensilica processor</li>
  <li>Wi-Fi 802.11 b/g/n 2.4 GHz</li>
  <li>4 MB FLASH</li>
  <li>320 kB RAM (no PSRAM)</li>
  <li>reset and boot button</li>
  <li>onboard 32.768 kHz crystal oscillator</li>
  <li>USB-C connector</li>
</ul>

<h2 id="schematic">Schematic</h2>

<ul>
  <li><a href="https://github.com/Xinyuan-LilyGO/ESP32_S2">LILYGO Github repository</a></li>
</ul>

<h2 id="setup-instructions">Setup instructions</h2>

<p>You need to install an UF2 Bootloader.</p>

<p>After flashing the Bootloader change the DIP switches (the ones closer to the
USB-C connector) to OTG mode, when reconnected you should see the drive and can
copy over the CircuitPython UF2 file.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>USB        OTG

On         On
o   o        o   o
  o   o    o   o
1 2 3 4    1 2 3 4
</code></pre></div></div>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/4001080875553.html?spm=a2g0o.store_pc_groupList.8148356.17.4c0236fcsFJuWs">AlixExpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Mar 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t8_esp32_s2_wroom/</guid>
  </item><item>
    <title>TTGO T8 ESP32-S2</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t8_s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lilygo_ttgo_t8_s2.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t8_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lilygo_ttgo_t8_s2.jpg" alt="Image of Board" loading="lazy">
<p>By LILYGO</p> <p>The TTGO T8 ESP32-S2 development board has useful features like the microSD card slot or the option to run the board with battery power. This board is very similar to the TTGO T8 ESP32-S2 ST7789 just without the display.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ESP32-S2 240 MHz Tensilica processor</li>
  <li>Wi-Fi 802.11 b/g/n 2.4 GHz</li>
  <li>4 MB FLASH</li>
  <li>8 MB PSRAM</li>
  <li>microSD card slot</li>
  <li>built in battery charging, 2-pin 1.25 mm JST connector</li>
  <li>on/off power switch</li>
  <li>reset and boot button</li>
  <li>onboard 32.768 kHz crystal oscillator</li>
  <li>USB-C connector</li>
</ul>

<h2 id="schematic">Schematic</h2>

<ul>
  <li><a href="https://github.com/Xinyuan-LilyGO/ESP32_S2">LILYGO Github repository</a></li>
</ul>

<h2 id="setup">Setup</h2>

<p>To flash this image use this command:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>esptool.py <span class="nt">--chip</span> esp32s2 <span class="nt">--port</span> <span class="o">(</span>COMPORT<span class="o">)</span> <span class="se">\</span>
  <span class="nt">--baud</span> 115200 write_flash 0x000 <span class="se">\</span>
  adafruit-circuitpython-lilygo_ttgo_t8_s2-xx_XX-X.Y.Z.bin
</code></pre></div></div>

<p>After flashing change the DIP switches (the ones closer to the USB-C connector) to OTG mode, when reconnected you should see the <code class="language-plaintext highlighter-rouge">CIRCUITPY</code> drive.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>USB        OTG

On         On
o   o        o   o
  o   o    o   o
1 2 3 4    1 2 3 4
</code></pre></div></div>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/4001080714038.html?spm=a2g0o.store_pc_groupList.8148356.43.2de336fcINy4O7">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 08 Mar 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t8_s2/</guid>
  </item><item>
    <title>TTGO T8 ESP32-S2 ST7789</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t8_s2_st7789/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lilygo_ttgo_t8_s2_st7789.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t8_s2_st7789.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lilygo_ttgo_t8_s2_st7789.jpg" alt="Image of Board" loading="lazy">
<p>By LILYGO</p> <p>The TTGO T8 ESP32-S2 development board has a ST7789 display and other useful features which allows one to create a variety of projects.</p>

<p>The display has native CircuitPython support.</p>

<h2 id="features--specifications">Features &amp; Specifications</h2>

<ul>
  <li>ESP32-S2 240 MHz Tensilica processor</li>
  <li>Wi-Fi 802.11 b/g/n 2.4 GHz</li>
  <li>4 MB FLASH</li>
  <li>8 MB PSRAM</li>
  <li>1.14” ST7789 Display (Resolution: 240 x 135)</li>
  <li>microSD card slot</li>
  <li>built in battery charging, 2-pin 1.25 mm JST connector</li>
  <li>on/off power switch</li>
  <li>reset and boot button</li>
  <li>onboard 32.768 kHz crystal oscillator</li>
  <li>USB-C connector</li>
</ul>

<h2 id="schematic">Schematic</h2>

<ul>
  <li><a href="https://github.com/Xinyuan-LilyGO/LilyGo-T-Display-S2">LILYGO Github repository</a></li>
</ul>

<h2 id="setup">Setup</h2>

<p>To flash this image, use this command:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>esptool.py  <span class="nt">--chip</span> esp32s2 <span class="nt">--port</span> <span class="o">(</span>COMPORT<span class="o">)</span> <span class="nt">--baud</span> 115200 write_flash 0x000 <span class="se">\</span>
  adafruit-circuitpython-lilygo_ttgo_t8_s2_st7789-xx_XX-X.Y.Z.bin
</code></pre></div></div>

<p>After flashing change the DIP switches (the ones closer to the USB-C connector) to OTG mode, when reconnected you should see the CIRCUITPY drive.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>USB        OTG

On         On
o   o        o   o
  o   o    o   o
1 2 3 4    1 2 3 4
</code></pre></div></div>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/4001211703708.html">AliExpress - LILYGO store</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Feb 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t8_s2_st7789/</guid>
  </item><item>
    <title>LOLIN C3 Mini</title>
    <link>https://circuitpython.org/board/lolin_c3_mini/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lolin_c3_mini.png 300w,
               /assets/images/boards/large/lolin_c3_mini.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lolin_c3_mini.png" alt="Image of Board" loading="lazy">
<p>By LOLIN</p> <p>A mini Wi-Fi &amp; Bluetooth LE board based on ESP32-C3FH4.</p>

<h2 id="features">Features</h2>

<ul>
  <li>based ESP32-C3 WIFI &amp; Bluetooth LE RISC-V Single-Core CPU</li>
  <li>Type-C USB</li>
  <li>4MB Flash</li>
  <li>Clock speed: 160 Mhz</li>
  <li>12x Digital IO</li>
  <li>ADC, I2C, SPI, UART</li>
  <li>Size: 34.3 mm x 25.4 mm</li>
  <li>Weight: 2.6g</li>
  <li>Compatible with LOLIN D1 mini shields</li>
  <li>Compatible with MicroPython, Arduino and ESP-IDF</li>
  <li>Default firmware: MicroPython</li>
</ul>

<h2 id="about-board-versions">About Board Versions</h2>

<p>Circuitpython builds after 8.0.0-beta6 target the v2.1 revision of this board. V1.0 had a design flaw
in the antenna circuitry which cannot be compensated for in software. V2.1 replaces the PCB trace antenna
with a small ceramic antenna and the status LED on GPIO7 is replaced by a WS2812B RGB addressable LED.</p>

<p>Using 8.0.0-beta6 or earlier builds on a v2.1 board or post-8.0.0-beta6 builds on a 1.0 board will not result in proper
status LED operation.</p>

<p>V1.0 boards need set WIFI Tx Power to 8.5dBm in order to use WIFI.</p>

<p><code class="language-plaintext highlighter-rouge">wifi.radio.tx_power = 8.5</code></p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005004740051202.html">AliExpress</a></li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.wemos.cc/en/latest/c3/c3_mini.html">Manufacturer Specifications</a></li>
  <li><a href="https://www.espressif.com/sites/default/files/documentation/esp32-c3_datasheet_en.pdf">ESP32-C3 Datasheet</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/sch_c3_mini_v2.1.0.pdf">Schematic</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/dim_c3_mini_v1.0.0.pdf">Dimension</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 02 Nov 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lolin_c3_mini/</guid>
  </item><item>
    <title>LOLIN S2 Mini</title>
    <link>https://circuitpython.org/board/lolin_s2_mini/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lolin_s2_mini.jpg 300w,
               /assets/images/boards/large/lolin_s2_mini.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lolin_s2_mini.jpg" alt="Image of Board" loading="lazy">
<p>By LOLIN</p> <p>The LOLIN S2 Mini is a small (33.4 mm x 25.4 mm) development board. The form factor is almost the same as the well-known LOLIN D1 mini. This means that there is a high chance that the <a href="https://www.wemos.cc/en/latest/d1_mini_shield/index.html">D1 Mini Shields</a> could also be uses with this board.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ESP32-S2FN4R2 WiFi SoC
    <ul>
      <li>Xtensa® single-core 32-bit LX7 microprocessor, up to 240 MHz</li>
      <li>Integrated 802.11 b/g/n WiFi 2.4 GHz Transceiver, up to 150 Mbps</li>
      <li>Integrated RISC-V ULP Coprocessor</li>
      <li>Integrated Temperature Sensor (-20 °C to 110 °C)</li>
      <li>Operating Voltage: 3.0 to 3.6 V
        <ul>
          <li>WiFi: 310 mA (peak)</li>
          <li>Modem-sleep: 12-19 mA</li>
          <li>Light-Sleep: 450 µA</li>
          <li>Deep-Sleep: 20-190 µA</li>
        </ul>
      </li>
      <li>320 KB SRAM</li>
      <li>4 MB Flash (embedded)</li>
      <li>2 MB PSRAM (embedded)</li>
      <li>16 KB SRAM in RTC (accessable by main CPU, 8 KB accessable by ULP coprocessor)</li>
      <li>4 Kbit eFuse (1792 bits reserved for user data)</li>
      <li>2 13-bit SAR ADCs, up to 20 channels (2 channels not available on ADC2 due to USB D+/D-)
        <ul>
          <li>2 8-bit DAC</li>
          <li>14 touch sensing IOs</li>
          <li>4 SPI (2 usable due to embedded flash &amp; PSRAM)</li>
          <li>1 I2S</li>
          <li>2 I2C</li>
          <li>2 UART</li>
          <li>1 DVP 8/16 camera interface, implemented using the hardware resources of I2S</li>
          <li>1 LCD interface (8-bit serial RGB/8080/6800), implemented using the hardware resources of SPI2</li>
          <li>1 LCD interface (8/16/24-bit parallel), implemented using the hardware resources of I2S</li>
          <li>1 TWAI® controller compatible with ISO 11898-1 (CAN Specification 2.0)</li>
          <li>LED PWM controller, up to 8 channels</li>
          <li>USB OTG 1.1 controller and PHY, with host and device support</li>
          <li>Cryptographic Hardware Accelerators: AES, ECB/CBC/OFB/CFB/CTR, GCM, SHA, RSA, ECC (Digital Signature)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>USB-C connector, for built-in ROM USB bootloader, serial port debugging, and USB device mode</li>
  <li>3.3 V regulator ME6211C33
    <ul>
      <li>Maximum Output Current: 500 mA （V<sub>IN</sub>＝4.3 V, V<sub>OUT</sub>＝3.3 V）</li>
      <li>Dropout Voltage: 100 mV@ I<sub>OUT</sub>＝100 mA</li>
      <li>Operating Voltage Range: 2V～6.0V</li>
      <li>Low Power Consumption: 40 µA （typ.）</li>
      <li>Standby Current: 0.1 µA （typ.）</li>
    </ul>
  </li>
  <li>27 GPIO pins, plus <code class="language-plaintext highlighter-rouge">EN</code>, <code class="language-plaintext highlighter-rouge">VBUS</code>, <code class="language-plaintext highlighter-rouge">3V3</code>, <code class="language-plaintext highlighter-rouge">GND</code>, <code class="language-plaintext highlighter-rouge">GND</code>
    <ul>
      <li>16 pins (outer) compatible with WEMOS/LOLIN D1 mini shields</li>
      <li><code class="language-plaintext highlighter-rouge">EN</code> RESET button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO0</code> BOOT button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO15</code> LED (blue status LED)</li>
    </ul>
  </li>
  <li>Compatible with CircuitPython, MicroPython (default firmware), Arduino and ESP-IDF</li>
</ul>

<h2 id="notes">Notes</h2>

<ul>
  <li>There is an error on the v1.0.0 board silkscreen. GPIO12/13 should be reversed. Error is fixed without version change since late 2021.</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.wemos.cc/en/latest/s2/s2_mini.html">Manufacturer Specifications</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/sch_s2_mini_v1.0.0.pdf">Schematics</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/dim_s2_mini_v1.0.0.pdf">Dimensions</a></li>
  <li><a href="https://www.wemos.cc/en/latest/tutorials/s2/get_started_with_micropython_s2.html">Factory MicroPython firmware</a></li>
</ul>

<h2 id="enter-bootloader">Enter bootloader</h2>

<p>To enter UF2 Bootloader Version 0.10.2:</p>
<ul>
  <li>Click reset button</li>
  <li>Wait until LED is lit</li>
  <li>Hold BOOT button</li>
</ul>

<p>Be sure not to hold BOOT button when RESET button is pressed.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003145192016.html">AliExpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lolin_s2_mini/</guid>
  </item><item>
    <title>LOLIN S2 Pico</title>
    <link>https://circuitpython.org/board/lolin_s2_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lolin_s2_pico.jpg 300w,
               /assets/images/boards/large/lolin_s2_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lolin_s2_pico.jpg" alt="Image of Board" loading="lazy">
<p>By LOLIN</p> <p>A development boards with an OLED and a small form factor.</p>

<h2 id="features">Features</h2>

<ul>
  <li>ESP32-S2FN4R2 WiFi SoC
    <ul>
      <li>Xtensa® single-core 32-bit LX7 microprocessor, up to 240 MHz</li>
      <li>Integrated 802.11 b/g/n WiFi 2.4 GHz Transceiver, up to 150 Mbps</li>
      <li>Integrated RISC-V ULP Coprocessor</li>
      <li>Integrated Temperature Sensor (-20 °C to 110 °C)</li>
      <li>Operating Voltage: 3.0 to 3.6 V (WiFi: 310 mA (peak), Modem sleep: 12-19 mA, Light sleep: 450 µA, Deep sleep: 20-190 µA)</li>
      <li>320 KB SRAM, 4 MB Flash (embedded), 2 MB PSRAM (embedded), 16 KB SRAM in RTC (accessable by main CPU, 8 KB accessable by ULP coprocessor), 4 Kbit eFuse (1792 bits reserved for user data)</li>
      <li>2 x 13-bit SAR ADCs, up to 20 channels (2 channels not available on ADC2 due to USB D+/D-)</li>
      <li>2 x 8-bit DAC, 14 x touch sensing IOs</li>
      <li>4 x SPI (2 usable due to embedded flash &amp; PSRAM), 1 x I2S, 2 x I2C, 2 x UART</li>
      <li>1 x DVP 8/16 camera interface, implemented using the hardware resources of I2S</li>
      <li>1 x LCD interface SPI2 (8-bit serial RGB/8080/6800), 1 x LCD interface I2S (8/16/24-bit parallel)</li>
      <li>1 x TWAI® controller compatible with ISO 11898-1 (CAN Specification 2.0)</li>
      <li>LED PWM controller, up to 8 channels</li>
      <li>USB OTG 1.1 controller and PHY, with host and device support</li>
      <li>Cryptographic Hardware Accelerators: AES, ECB/CBC/OFB/CFB/CTR, GCM, SHA, RSA, ECC (Digital Signature)</li>
    </ul>
  </li>
  <li>USB-C connector, for built-in ROM USB bootloader, serial port debugging, and USB device mode</li>
  <li>27 x GPIO pins, plus <code class="language-plaintext highlighter-rouge">VBUS</code>, <code class="language-plaintext highlighter-rouge">3V3</code>, <code class="language-plaintext highlighter-rouge">GND</code>
    <ul>
      <li>21 x pins broken out to breadboard-friendly headers</li>
      <li><code class="language-plaintext highlighter-rouge">EN</code> RESET button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO0</code> BOOT button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO10</code> LED (blue status LED)</li>
      <li>Lolin I2C JST SH 4-pin port (<strong>does not match QWIIC/Stemma-Qt pinout</strong>) using <code class="language-plaintext highlighter-rouge">GPIO8</code> (SDA) and <code class="language-plaintext highlighter-rouge">GPIO9</code> (SCL)</li>
      <li>128 x 32 SSD1306 OLED display internally connected to the same I2C bus as the external port, reset pin connected to <code class="language-plaintext highlighter-rouge">GPIO18</code>, I2C address <code class="language-plaintext highlighter-rouge">0x3C</code> (<strong>not supported in CircuitPython firmware, require user code initialisation</strong>)</li>
    </ul>
  </li>
  <li>Compatible with CircuitPython, MicroPython (default firmware), Arduino and ESP-IDF</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005003215673294.html">AliExpress</a></li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.wemos.cc/en/latest/s2/s2_pico.html">Manufacturer Specifications</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/sch_s2_pico_v1.0.0.pdf">Schematic</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/dim_s2_pico_v1.0.0.pdf">Dimension</a></li>
  <li><a href="https://www.wemos.cc/en/latest/tutorials/s2/get_started_with_micropython_s2.html">Factory MicroPython firmware</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 02 Nov 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lolin_s2_pico/</guid>
  </item><item>
    <title>LOLIN S3</title>
    <link>https://circuitpython.org/board/lolin_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lolin_s3.png 300w,
               /assets/images/boards/large/lolin_s3.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lolin_s3.png" alt="Image of Board" loading="lazy">
<p>By LOLIN</p> <p>WiFi &amp; Bluetooth 5 (LE) development boards based ESP32-S3-WROOM-1.</p>

<h2 id="features">Features</h2>

<ul>
  <li>based ESP32-S3-WROOM-1
    <ul>
      <li>16MB Flash (Quad SPI)</li>
      <li>8MB PSRAM (Octal SPI)</li>
    </ul>
  </li>
  <li>2x USB-C connector
    <ul>
      <li>OTG: for built-in ROM USB bootloader, serial port debugging, and USB device mode</li>
      <li>UART: CH340 USB-TTL</li>
    </ul>
  </li>
  <li>Peripherals
    <ul>
      <li>31 x GPIO pins</li>
      <li><code class="language-plaintext highlighter-rouge">EN</code> RESET button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO0</code> BOOT button</li>
      <li><code class="language-plaintext highlighter-rouge">GPIO38</code> WS2812B RGB LED</li>
      <li>Lolin I2C JST SH 4-pin port (<strong>does not match QWIIC/Stemma-Qt pinout</strong>) using <code class="language-plaintext highlighter-rouge">GPIO42</code> (SDA) and <code class="language-plaintext highlighter-rouge">GPIO41</code> (SCL)</li>
    </ul>
  </li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/3256804457160611.html">AliExpress</a></li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.wemos.cc/en/latest/s3/s3.html">Manufacturer Specifications</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/sch_s3_v1.0.0.pdf">Schematic</a></li>
  <li><a href="https://www.wemos.cc/en/latest/_static/files/dim_s3_v1.0.0.pdf">Dimension</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 05 Sep 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/lolin_s3/</guid>
  </item><item>
    <title>Luatos Core ESP32C3</title>
    <link>https://circuitpython.org/board/luatos_core_esp32c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/luatos_core_esp32c3.jpg 300w,
               /assets/images/boards/large/luatos_core_esp32c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/luatos_core_esp32c3.jpg" alt="Image of Board" loading="lazy">
<p>By Luatos</p> <p>A low-cost WiFi/BLE board based on ESP32-C3.</p>

<h2 id="features">Features</h2>

<ul>
  <li>Based on the ESP32-C3 WIFI &amp; Bluetooth LE RISC-V Single-Core CPU</li>
  <li>Type-C USB</li>
  <li>Castellated pads</li>
  <li>4MB Flash</li>
  <li>Clock speed: 160 Mhz</li>
  <li>15x Digital IO</li>
  <li>ADC(5 channel, 12-bit), I2C, SPI, UARTx2</li>
  <li>Size: 21mm x 51mm</li>
  <li>Default firmware: LuatOS</li>
  <li>2 red status LEDs</li>
</ul>

<h2 id="note">Note</h2>

<p>There are 2 versions of this board, differing in the inclusion of a CH343 UART to USB component. This board definition targets the
version without the CH343 which connects the built-in USB-CDC/JTAG to the USB-C connector.</p>

<p>Onboard LDO can be disabled by grounding the PWB pin (15).</p>

<p>GPIO11 can only be used by setting the EFUSE_VDD_SPI_AS_GPIO efuse and building a custom Circuitpython image.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://wiki.luatos.com/chips/esp32c3/board.html">Manufacturer Specifications</a></li>
  <li><a href="https://www.espressif.com/sites/default/files/documentation/esp32-c3_datasheet_en.pdf">ESP32-C3 Datasheet</a></li>
  <li><a href="https://cdn.openluat-luatcommunity.openluat.com/attachment/20220609213416069_CORE-ESP32-A12.pdf">Schematic</a></li>
  <li><a href="https://cdn.openluat-luatcommunity.openluat.com/attachment/CORE-ESP32-C3%E5%8F%82%E8%80%83%E5%B0%BA%E5%AF%B8_V1.2.pdf">Dimension</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 19 Dec 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/luatos_core_esp32c3/</guid>
  </item><item>
    <title>M5Stack ATOM Lite ESP32 IoT</title>
    <link>https://circuitpython.org/board/m5stack_atom_lite/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/m5stack_atom_lite.jpg 300w,
               /assets/images/boards/large/m5stack_atom_lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/m5stack_atom_lite.jpg" alt="Image of Board" loading="lazy">
<p>By M5Stack</p> <p>Atom Lite, which has a size of only 24*24mm, is a very compact development board in the M5Stack development kit series. It provides more GPIOs for user customization which is very suitable for embedded smart home devices and in making smart toys. The main control adopts the ESP32-PICO chip which comes integrated with Wi-Fi technologies and has a 4MB of integrated SPI flash memory. Atom Lite board provides an Infra-Red LED, a RGB LED, buttons, and a HY2.0 interface. In addition, it can connect to external sensors and actuators through 6 GPIOs. The on-board Type-C USB interface enables rapid program upload and execution.</p>

<h3 id="features">Features</h3>
<ul>
  <li>ESP32-based</li>
  <li>RGB LED(SK6812)</li>
  <li>Programmable button</li>
  <li>Built-in Infra-red</li>
  <li>Extendable Pins &amp; Holes</li>
</ul>

<h2 id="documentation">Documentation</h2>

<ul>
  <li><a href="https://docs.m5stack.com/en/core/atom_lite">ATOM Lite ESP32 IoT</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.m5stack.com/collections/m5-controllers/products/atom-lite-esp32-development-kit">M5Stack</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Nov 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/m5stack_atom_lite/</guid>
  </item><item>
    <title>M5Stack Basic Core IoT</title>
    <link>https://circuitpython.org/board/m5stack_core_basic/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/m5stack_core_basic.jpg 300w,
               /assets/images/boards/large/m5stack_core_basic.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/m5stack_core_basic.jpg" alt="Image of Board" loading="lazy">
<p>By M5Stack</p> <p>Get yourself a kit that can do it all! The M5Stack Basic Development Kit is a ESP32-based WiFi microcontroller that’s compatible with MicroPython and Arduino. It comes jam-packed with Wi-Fi / Bluetooth capability, running at 240 MHz with the dual-core processor and 16MB of SPI Flash.</p>

<p>Perfect for people who want to make advanced ESP32 projects with a display, user interface, speaker, and a couple buttons. It’s super easy to snap in other M5 blocks to add sensors, interfaces or cameras, no soldering required. Upload your code with the built in USB C port, there’s example code available on the M5Stack website.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ESP32 module, with WiFi / Bluetooth capability</li>
  <li>16MB of FLASH</li>
  <li>Micro-SD Card slot</li>
  <li>USB to Serial converter built in</li>
  <li>320x240 2.0” TFT display</li>
  <li>3 User Buttons + 1 Reset Button</li>
  <li>Small 1W speaker</li>
  <li>110mAh LiPo battery</li>
  <li>Grove/I2C connector</li>
  <li>M5 stacking GPIO connector</li>
</ul>

<h2 id="documentation">Documentation</h2>

<ul>
  <li><a href="https://docs.m5stack.com/en/core/basic_v2.6">Basic Core IoT</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4178">Adafruit</a></li>
  <li><a href="https://shop.m5stack.com/collections/m5-controllers/products/esp32-basic-core-iot-development-kit-v2-6">M5Stack</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 29 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/m5stack_core_basic/</guid>
  </item><item>
    <title>M5Stack Core Fire</title>
    <link>https://circuitpython.org/board/m5stack_core_fire/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/m5stack_core_fire.jpg 300w,
               /assets/images/boards/large/m5stack_core_fire.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/m5stack_core_fire.jpg" alt="Image of Board" loading="lazy">
<p>By M5Stack</p> <p>M5Stack FIRE is a cost-effective Wi-Fi IoT controller adopts Espressif ESP32 main control chip, equipped with two low-power Xtensa® 32-bit LX6 microprocessors, with main frequency up to 240MHz. With 8M PSRAM + 16M FLASH memory, 2.0-inch full-color HD IPS display panel, IMU, LED, microphone, speaker, TFCard slot and other peripherals. The full-coverage case ensures circuit stability even in complex industrial applications. The internal offers a wide range of common interface resources (ADC/DAC/I2C/UART/SPI, etc.) which is highly expandable. This functional and powerful IoT controller is very applicable to various product prototyping, industrial control and smart building applications.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ESP32 module, with WiFi / Bluetooth capability</li>
  <li>16MB of FLASH</li>
  <li>Micro-SD Card slot</li>
  <li>USB to Serial converter built in</li>
  <li>320x240 2.0” TFT display</li>
  <li>3 User Buttons + 1 Reset Button</li>
  <li>Small 1W speaker</li>
  <li>500mAh LiPo battery</li>
  <li>Grove/I2C connector</li>
  <li>M5 stacking GPIO connector</li>
</ul>

<h2 id="documentation">Documentation</h2>

<ul>
  <li><a href="https://docs.m5stack.com/en/core/fire_v2.6">Basic Core IoT</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.m5stack.com/collections/m5-controllers/products/m5stack-fire-iot-development-kit-psram-v2-6">M5Stack</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Nov 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/m5stack_core_fire/</guid>
  </item><item>
    <title>M5Stack Stamp C3</title>
    <link>https://circuitpython.org/board/m5stack_stamp_c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/m5stack_stamp_c3.jpg 300w,
               /assets/images/boards/large/m5stack_stamp_c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/m5stack_stamp_c3.jpg" alt="Image of Board" loading="lazy">
<p>By M5Stack</p> <p>M5Stack just added a new family to its popular series of modules with the Stamp-C3. the new Stamp-C3 featuring ESPRESSIF ESP32-C3 RISC-V MCU with Wi-Fi connectivity for IoT edge devices such as home appliances and Industrial Automation. By combining RSA-3072-based secure boot and the AES-128-XTS-based flash encryption, while also make it optimal for industrial IoT equipment collecting sensor data within a factory or a building.</p>

<p>The Stamp-C3 is based on 32-bit RISC-V microcontroller and operates at a maximum clock frequency of 160 MHz. With 400 KB of internal RAM and 4 MB Flash, it can facilitate many different use-cases involving connected devices. Furthermore, the exceptional heat resistance plastic enclosure is sustained at a higher operating temperature.</p>

<h2 id="documentation">Documentation</h2>

<ul>
  <li><a href="https://docs.m5stack.com/en/core/stamp_c3">Stamp C3</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.m5stack.com/collections/m5-controllers/products/m5stamp-c3-5pcs">M5Stack</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Nov 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/m5stack_stamp_c3/</guid>
  </item><item>
    <title>Maker badge</title>
    <link>https://circuitpython.org/board/maker_badge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/maker_badge.jpg 300w,
               /assets/images/boards/large/maker_badge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/maker_badge.jpg" alt="Image of Board" loading="lazy">
<p>By Czech maker & Make More</p> <p>The Maker badge board is official badge board for Maker Faire´s in Czech republic. Main purpose is to show visitors/exhibitors name and/or project, but secondary goal is to have at each Maker Faire some interactive game so people can have more fun at the time of the visit.</p>

<h2 id="features">Features</h2>

<ul>
  <li>2.13” black and white E Ink® display (212 x 104 pixels in rev. A or 250 x 122 in rev.B)</li>
  <li>Powered by ESP32-S2 module (single core 32-bit LX7 microprocessor running up to 240 MHz with 320kB of SRAM, 4 MB Flash (embedded))</li>
  <li>Five touch buttons</li>
  <li>Reset and boot buttons (the boot button can also be used as a user button)</li>
  <li>5 x RGB LED with WS2812B IC</li>
  <li>USB-C connector for power and programming</li>
  <li>JST-PH connector for attaching a battery (input range 2.7V - 6V)</li>
  <li>CR2032 battery holder</li>
</ul>

<h2 id="notes">Notes</h2>

<ul>
  <li>rev. A (distributed by Czech maker) is using 212 x 104 px e-ink display with UC8151D driver</li>
  <li>rev. B (distributed by Make More) is using 250 x 122 px e-ink display with SSD1680 driver</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li>will be added later</li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://github.com/dronecz/maker_badge">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 12 Nov 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/maker_badge/</guid>
  </item><item>
    <title>M60 Mechanical Keyboard</title>
    <link>https://circuitpython.org/board/makerdiary_m60_keyboard/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/makerdiary_m60_keyboard.jpg 300w,
               /assets/images/boards/large/makerdiary_m60_keyboard.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/makerdiary_m60_keyboard.jpg" alt="Image of Board" loading="lazy">
<p>By MakerDiary</p> <p>The M60 Mechanical Keyboard a 60% keyboard which has USB and BLE 5.0 connectivity and is hot-swappable.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Core Module: nRF52840 M.2 Module, 64MHz Cortex-M4F, 1MB FLASH/256KB RAM, 8MB QSPI Flash Memory, M.2 KEY-E Form Factor</li>
  <li>Connectivity: USB wired &amp; Bluetooth Low Energy 5.0 and NFC (with cabled PCB antenna)</li>
  <li>Layout: 60% (61 Keys)</li>
  <li>Switch Option: Cherry MX compatible Switches</li>
  <li>RGB Lighting: Programmable 64 RGBs matrix</li>
  <li>Battery Charger: Up to 890 mA charge current, USB-friendly, Battery Pack temperature monitoring</li>
  <li>Firmware: Python with UF2 Bootloader</li>
  <li>Compatibility: Mac/iOS, Windows, Linux, Android</li>
  <li>Dimensions: 285 mm x 94.6 mm</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://makerdiary.com/products/m60-mechanical-keyboard-pcba">MakerDiary</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_m60_keyboard/</guid>
  </item><item>
    <title>nRF52840 M.2 Developer Kit</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_m2_devkit/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/makerdiary_nrf52840_m2_devkit.jpg 300w,
               /assets/images/boards/large/makerdiary_nrf52840_m2_devkit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/makerdiary_nrf52840_m2_devkit.jpg" alt="Image of Board" loading="lazy">
<p>By MakerDiary</p> <p>nRF52840 M.2 Developer Kit is a versatile IoT prototyping platform, including the nRF52840 M.2 Module and M.2 Dock. You can use the developer kit to prototype your IoT products and then scale to production faster using the nRF52840 M.2 Module combined with your custom PCB hardware.</p>

<p>The nRF52840 M.2 Module is a removable M.2 E-Key form factor module based on the nRF52840 SoC, supporting Bluetooth 5, Bluetooth mesh, Thread, Zigbee, 802.15.4, ANT and 2.4 GHz proprietary stacks.</p>

<p>The M.2 Dock extends the interfaces compared to the nRF52840 M.2 Module through an M.2 E-Key connector. This design also features a fully-integrated DAPLink debugger with Power Profiling, enabling you to program, debug and perform real-time current profiling of your applications without using external tools.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://makerdiary.com/products/nrf52840-m2-developer-kit">MakerDiary</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_m2_devkit/</guid>
  </item><item>
    <title>nRF52840 Micro Dev Kit</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_mdk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nRF52840_micro_dev_kit.jpg 300w,
               /assets/images/boards/large/nRF52840_micro_dev_kit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nRF52840_micro_dev_kit.jpg" alt="Image of Board" loading="lazy">
<p>By MakerDiary</p> <p>The nRF52840-MDK is a versatile, easy-to-use IoT hardware platform for Bluetooth 5, Bluetooth Mesh, Thread, IEEE 802.15.4, ANT and 2.4GHz proprietary wireless applications using the nRF52840 SoC.</p>

<p>The development kit comes with a fully integrated debugger (also known as DAPLink)that provides USB drag-and-drop programming, USB Virtual COM port and CMSIS-DAP interface.</p>

<p>The kit contains a Microchip USB 2.0 Hi-Speed hub controller with two downstream ports: one for DAPLink interface and one for nRF52840 USB device controller. The kit also features ultra-low power 64-Mb QSPI FLASH memory, programmable user button, RGB LED, up to 24 GPIOs, antenna selection for custom applications.</p>

<p>It supports the standard Nordic Software Development Tool-chain using GCC, Keil and IAR. It can also be used to play with many popular frameworks, such as nRF5 SDK, nRF5 SDK for Mesh, OpenThread, ZigBee 3.0, Mbed OS 5, Zephyr, Mynewt, Web Bluetooth, iBeacon, Eddystone, and more.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/collections/frontpage/products/nrf52840-mdk-iot-development-kit">MakerDiary</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_mdk/</guid>
  </item><item>
    <title>nRF52840 Micro Dev Kit USB Dongle</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_mdk_usb_dongle/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nRF52840_micro_dev_kit_usb_dongle.jpg 300w,
               /assets/images/boards/large/nRF52840_micro_dev_kit_usb_dongle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nRF52840_micro_dev_kit_usb_dongle.jpg" alt="Image of Board" loading="lazy">
<p>By MakerDiary</p> <p>The nRF52840 Micro Dev Kit USB Dongle is a small and low-cost development platform enabled by the nRF52840 multi-protocol SoC in a convenient USB dongle form factor.</p>

<p>The nRF52840 Micro Dev Kit USB Dongle features a programmable user button, RGB LED, up to 12 GPIOs and 2.4G Chip antenna on board.</p>

<p>The USB Dongle can be used as a low-cost Bluetooth5/Tread/802.15.4/ANT/2.4GHz multi-protocol node or development board. Alternatively the USB Dongle can be used as a Network Co-Processor (NCP) with a simple connection to a PC or other USB enabled device.</p>

<p>It could be required that you have to <a href="https://wiki.makerdiary.com/nrf52840-mdk-usb-dongle/programming/#upgrade-to-uf2-bootloader-from-open-bootloader">switch from the Open Bootloader to the UF2 Bootloader</a>.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/collections/frontpage/products/nrf52840-mdk-usb-dongle">MakerDiary</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_mdk_usb_dongle/</guid>
  </item><item>
    <title>Matrix Portal M4</title>
    <link>https://circuitpython.org/board/matrixportal_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/matrixportal_m4.jpg 300w,
               /assets/images/boards/large/matrixportal_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/matrixportal_m4.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Folks love our <a href="https://www.adafruit.com/category/327">wide selection of RGB matrices</a> and accessories, for making custom colorful LED displays… and our RGB Matrix Shields and FeatherWings can be quickly soldered together to make the wiring much easier. But what if we made it even easier than that? <strong>Like, no solder, no wiring, just instant plug-and-play?</strong> Dream no more - with the <strong>Adafruit Matrix Portal add-on for RGB Matrices</strong>, there’s never been an easier way to create powerful Internet-connected LED displays.</p>

<p>Plug directly into the back of <a href="https://www.adafruit.com/category/327">any HUB-75 compatible display (all the ones we stock will work) from 16x32 up to 64x64</a>! Use the included screws to attach the power cable to the power plugs with a common screwdriver, then power it with any USB C power supply. (For larger projects, power the matrices with a separate 5V power adapter)</p>

<p>Then code up your project in <a href="https://learn.adafruit.com/rgb-led-matrices-matrix-panels-with-circuitpython">CircuitPython</a> or <a href="https://learn.adafruit.com/adafruit-protomatter-rgb-matrix-library">Arduino</a>, our Protomatter matrix library works great on the SAMD51 chipset, knowing that you’ve got the wiring and level shifting all handled.</p>

<h3 id="features">Features</h3>

<ul>
  <li><strong>ATSAMD51J19 Cortex M4 processor</strong>, 512 KB flash, 192 K of SRAM, with full Arduino or CircuitPython support</li>
  <li><strong>ESP32 WiFi co-processor</strong> with TLS support and SPI interface to the M4, with full Arduino or CircuitPython support</li>
  <li><strong>USB-C</strong> connector for data and power connectivity</li>
  <li><a href="https://www.adafruit.com/category/620"><strong>I2C STEMMA QT connector</strong> for plug-n-play use of any of our STEMMA QT devices or sensors</a> can also be used with <a href="https://www.adafruit.com/product/4528">any Grove I2C devices using this adapter cable</a>)</li>
  <li><strong>JST 3-pin connector</strong> that also has analog input/output, say for adding audio playback to projects</li>
  <li><strong>LIS3DH accelerometer</strong> for digital sand projects or detecting taps/orientation.</li>
  <li><strong>GPIO breakouts</strong> including 4 analog outputs with PWM and SPI support for adding other hardware.</li>
  <li><strong>Address E line jumper</strong> for use with 64x64 matrices (check your matrix to see which pin is used for address E!</li>
  <li><strong>Two user interface buttons</strong> + one reset button</li>
  <li><strong>Indicator NeoPixel</strong> and red LED</li>
  <li><strong>Green power indicator LEDs</strong> for both 3 V and 5 V power</li>
  <li><strong>2x10 socket connector</strong> fits snugly into 2x8 HUB75 ports without worrying about ‘off by one’ errors.</li>
</ul>

<p>The Matrix Portal uses an ATMEL (Microchip) ATSAMD51J19, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO, so it can handle the high speed updating of the RGB matrix.</p>

<p>Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<p>Comes with one fully-programmed and assembled MatrixPortal, preprogrammed with a rainbow digital sand demo for 32x64 LED matrices.</p>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4745">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/matrixportal_m4/</guid>
  </item><item>
    <title>Shake RP2040</title>
    <link>https://circuitpython.org/board/melopero_shake_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/melopero_shake_rp2040.jpg 300w,
               /assets/images/boards/large/melopero_shake_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/melopero_shake_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Melopero</p> <p>The <strong>Melopero Shake RP2040</strong> is a powerful development board based on the <strong>Raspberry Pi RP2040</strong> microcontroller, programmable in C/C++, MicroPython, CircuitPython and Arduino.</p>

<p>The board features:</p>

<ul>
  <li><strong>16MB</strong> of FLASH Memory</li>
  <li>3.7-4.2 LiPo <strong>battery charger</strong> (200mA charge curret)</li>
  <li><strong>Battery monitor</strong> (it sends an alert when the battery voltage drops at 3.4V)</li>
  <li>Reset and boot buttons (no need to detach/attach the board to enter boot mode)</li>
  <li><strong>Qwiic/Stemma QT connector</strong> for attaching lots of Melopero, Adafruit and * SparkFun sensors</li>
  <li>Classic <strong>Feather pinout</strong> for maximum compatibility</li>
  <li>USB-C connector for powering, programming and charging</li>
  <li>JST 2-pin connector for attaching the battery (we follow the Adafruit and SparkFun batteries polarity)</li>
  <li>Green user LED on pin 13</li>
  <li><strong>RGB WS2812 LED</strong> (aka NeoPixel)</li>
  <li>Orange LED for signaling the charging status</li>
  <li>SWD header for debugging</li>
  <li>4 mounting holes</li>
  <li>Programmable in <strong>C/C++</strong>, <strong>MicroPython</strong>, <strong>CircuitPython</strong> and <strong>Arduino</strong></li>
</ul>

<p>Dimensions: 2.0” x 0.9” x 0.28” (50.8mm x 22.8mm x 7.05/max height)</p>

<p><strong>The RP2040 key features:</strong></p>

<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analogue inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.melopero.com/melopero-shake-rp2040">Melopero</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 22 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/melopero_shake_rp2040/</guid>
  </item><item>
    <title>Meowbit</title>
    <link>https://circuitpython.org/board/meowbit_v121/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/meowbit_v121.jpg 300w,
               /assets/images/boards/large/meowbit_v121.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/meowbit_v121.jpg" alt="Image of Board" loading="lazy">
<p>By KittenBot</p> <p>From the creative and cat-lovin’ engineers at KittenBot comes the <strong>Meowbit</strong> - a handheld retro gaming computer for coding your own games with MakeCode Arcade and MicroPython. This design is really fun, with a GameBoy-like shape that can plug into micro:bit expansion boards. The built in display is a 160x128 color 1.8” TFT screen with the familiar ST7735 chipset over SPI. You also get 8 buttons (4-way D-Pad, A and B, menu and reset) to make games or interface with, and there’s also a built-in speaker and SD card. For inputs there’s a bunch of sensors including a light sensor, temperature sensor and even a 6-DoF gyroscope/accelerometer.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4324">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/meowbit_v121/</guid>
  </item><item>
    <title>Meow Meow</title>
    <link>https://circuitpython.org/board/meowmeow/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/meowmeow.jpg 300w,
               /assets/images/boards/large/meowmeow.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/meowmeow.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>Meow Meow is a electronic board that allows you to connect different objects to a computer and interact with it, since you can convert many everyday objects into touch panels that send signals to the computer, and allows you to use it as a conventional keyboard, you can even connect them to the internet.</p>

<p>Meow Meow was designed by Electronic Cats and wants to encourage experimentation, both for beginners and experts, who want to interact with the real world (physical) and with digital world. For this reason, it can be applied in visual and arts, music… engineering, etc. Even, for purposes of physical rehabilitation and related to the interaction between human and technology.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://electroniccats.com/producto/meowmeow/">Electronic Cats</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/ElectronicCats/MeowMeow">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/meowmeow/</guid>
  </item><item>
    <title>Metro M0 Express</title>
    <link>https://circuitpython.org/board/metro_m0_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/metro_m0_express.jpg 300w,
               /assets/images/boards/large/metro_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/metro_m0_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This <strong>Metro M0 Express</strong> board looks a whole lot like the <a href="https://www.adafruit.com/product/2488">original Metro 328</a>, but with a huge upgrade. Instead of the ATmega328, this Metro features a ATSAMD21G18 chip, an ARM Cortex M0+. It’s the first Adafruit Metro that is designed for use with CircuitPython!</p>

<p>At the Metro M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3 V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256 KB of FLASH (8x more than the Atmega328) and 32 KB of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>Power the METRO</strong> with 7-9 V polarity protected DC or the micro USB connector to any 5 V USB source. The 2.1 mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 12 of which are analog in, and one of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3 V.</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M0 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like a keyboard, mouse or MIDI device as well.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB SPI Flash</strong> storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython, PXT/MakeCode or Arduino IDE (it is bossa-compatible).</li>
</ul>

<p>Comes fully assembled with headers, tested, and with the UF2 bootloader loaded on. Includes 4 rubber bumpers to keep it from slipping off your desk. No soldering required to use, plug and play!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/overview">Metro M0 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3505">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/metro_m0_express/</guid>
  </item><item>
    <title>Metro M4 AirLift Lite</title>
    <link>https://circuitpython.org/board/metro_m4_airlift_lite/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/metro_m4_airlift_lite.jpg 300w,
               /assets/images/boards/large/metro_m4_airlift_lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/metro_m4_airlift_lite.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Give your next project a lift with <em>AirLift</em> - Adafruit’s witty name for the ESP32 co-processor that graces this Metro M4.</p>

<p>You already know about the <strong>Adafruit Metro M4</strong> featuring the <strong>Microchip ATSAMD51</strong>, with it’s 120 MHz Cortex M4 with floating point support. With a train-load of FLASH and RAM, your code will be fast and roomy. And what better way to improve it than to add wireless? Now cooked in directly on board, you get a certified WiFi module that can handle all your TLS and socket needs, it even has root certificates pre-loaded.</p>

<p>This Metro is the same size as the others, and is compatible with all our shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51J19.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>32-bit, 3.3V logic and power</li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (8 analog pins)</li>
  <li>6x hardware SERCOM (I2C, SPI or UART)</li>
  <li>22x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>10-bit Parallel capture controller (for camera/video in)</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
  <li>64 QFN</li>
</ul>

<p>The PCB comes with all these extras:</p>

<ul>
  <li><strong>Power the METRO M4</strong> with 7-9 V polarity protected DC or the micro USB connector to any 5 V USB source. The 2.1 mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 8 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3 V.</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>AirLift WiFi Co-processor</strong>, with TLS/SSL support, plenty of RAM for sockets, communication is over SPI and has Arduino and CircuitPython libraries ready to go for fast wireless integration.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the back edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB QSPI Flash</strong> storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files. When used in Arduino, you can read/write files to it, like a little datalogger or SD card, and then with our helper program, access the files over USB.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible).</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 192 KB of RAM CircuitPython runs really well on this chip! CircuitPython’s built in support for JSON parsing plus our <em>requests</em> compatible library makes it incredibly easy to build secure IoT projects in just a few minutes.</p>

<p>Metro M4 AirLift, see how easy and fast it is to get started with IoT projects using CircuitPython!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m4-express-airlift-wifi">Metro M4 AirLift Lite Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4000">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_m4_airlift_lite/</guid>
  </item><item>
    <title>Metro M4 Express</title>
    <link>https://circuitpython.org/board/metro_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/metro_m4_express.jpg 300w,
               /assets/images/boards/large/metro_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/metro_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The most powerful Metro at this time, the <strong>Adafruit Metro M4</strong> featuring the <strong>Microchip ATSAMD51</strong>. This Metro is like a bullet train, with it’s 120 MHz Cortex M4 with floating point support. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>To start off the ATSAMD51 journey it has a classic ‘Arduino compatible’ shape and pinout. This Metro is the same size as the others, and is compatible with many shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51J19.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>32-bit, 3.3 V logic and power</li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (8 analog pins)</li>
  <li>6x hardware SERCOM (I2C, SPI or UART)</li>
  <li>22x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>64 QFN</li>
</ul>

<p>Includes:</p>

<ul>
  <li><strong>Power the METRO M4</strong> with 7-9 V polarity protected DC or the micro USB connector to any 5 V USB source. The 2.1 mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 8 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3 V.</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB QSPI Flash</strong> storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible).</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 192 KB of RAM CircuitPython runs really well on this chip. At this time, the latest versions of CircuitPython working on this board, and more API parts are added every week.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m4-express-featuring-atsamd51">Metro M4 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3382/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3382">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/metro_m4_express/</guid>
  </item><item>
    <title>Metro M7 1011</title>
    <link>https://circuitpython.org/board/metro_m7_1011/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/metro_m7_1011.jpg 300w,
               /assets/images/boards/large/metro_m7_1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/metro_m7_1011.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The NXP iMX RT1011 microcontroller powers the Metro M7 with a 500 MHz ARM Cortex M7 processor. There’s 4 MB of execute-in-place QSPI for firmware + disk storage and 128 KB of SRAM in-chip.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>NXP iMX RT1011 processor - ARM Cortex M7 processor running at 500 MHz, with 128 KB SRAM and high speed USB!</li>
  <li>AirLift WiFi Co-processor, with TLS/SSL support, plenty of RAM for sockets, communication is over SPI</li>
  <li>4 MB of QSPI XIP Flash</li>
  <li>Power options - 6-12 VDC barrel jack or USB-C</li>
  <li>UNO-shape so shields can plug in</li>
  <li>Reset  button - Click to restart, double-click to enter UF2 bootloder</li>
  <li>Boot-mode switches to get into the ROM bootloader (you can always reload code over USB if TinyUF2 gets corrupted somehow)</li>
  <li>SWD connector for advanced debugging access.</li>
  <li>On/Off switch</li>
  <li>STEMMA QT connector for I2C devices</li>
  <li>On/User LEDs + status NeoPixel</li>
  <li>53.2 mm x 72 mm / 2” x 2.8”</li>
  <li>Height (w/ barrel jack): 14.8 mm / 0.6”</li>
  <li>Weight: 22.5 g</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?v=_sLgycNpMCQ">YouTube</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4950">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_m7_1011/</guid>
  </item><item>
    <title>Metro nRF52840 Express</title>
    <link>https://circuitpython.org/board/metro_nrf52840_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/metro_nrf52840_express.png 300w,
               /assets/images/boards/large/metro_nrf52840_express.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/metro_nrf52840_express.png" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>Adafruit Metro nRF52840 Express</strong> is a new Metro family member with Bluetooth Low Energy and <em>native USB support</em> featuring the nRF52840! </p>

<p>This chip has twice the flash, and four times the SRAM of its earlier sibling, the nRF52832 - 1 MB of FLASH and 256 KB of SRAM. Compared to the nRF51, this board has 4-8 times more of everything.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64 MHz</li>
  <li>1 MB flash and 256 KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4 GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_nrf52840_express/</guid>
  </item><item>
    <title>micro:bit v2</title>
    <link>https://circuitpython.org/board/microbit_v2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/microbit_v2.jpg 300w,
               /assets/images/boards/large/microbit_v2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/microbit_v2.jpg" alt="Image of Board" loading="lazy">
<p>By BBC</p> <p>Meet the new <strong>BBC micro:bit v2</strong> - Upgraded with a powerful new processor that has tons more capability and also adds more sensing with a new speaker and microphone!</p>

<p>The latest micro:bit will fit right into your existing lessons and materials; all the existing <strong>MakeCode</strong> blocks and <strong>MicroPython</strong> code will work in the same way as they do on the original micro:bit. More features, including easy ways to take AI and ML into the classroom, will be released throughout 2021.</p>

<p>It’s the same size and shape as the original micro:bit so you can use the same accessories you already own.</p>

<p>Some new features of the board:</p>

<ul>
  <li>A more powerful Nordic nRF52833 processor, lots more RAM and Flash so MicroPython works a lot better!</li>
  <li>A MEMS microphone, can hear the world around it</li>
  <li>A speaker, provide audio feedback, play tones</li>
  <li>Capacitive touch sensor, the logo now acts as a button you can boop!</li>
  <li>Power saving mode, double click the reset button to enter low power mode.</li>
</ul>

<h3 id="purchase">Purchase</h3>
<ul>
  <li><a href="https://www.adafruit.com/product/4781">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Aug 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/microbit_v2/</guid>
  </item><item>
    <title>MicroDev microC3</title>
    <link>https://circuitpython.org/board/microdev_micro_c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/microdev_micro_c3.jpg 300w,
               /assets/images/boards/large/microdev_micro_c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/microdev_micro_c3.jpg" alt="Image of Board" loading="lazy">
<p>By MicroDev</p> <p>Introducing MicroDev microC3 dev-board based on Espressif’s ESP32-C3 SoC, which is equipped with a RISC-V 32-bit single-core processor, operating frequency up to 160 MHz, supports secondary development without using other microcontrollers or processors. The ESP32-C3 is an highly integrated low power Wi-Fi and Bluetooth system-level chip (SoC), designed for various applications such as internet of things (IoT), mobile devices, wearable electronics, smart home, etc.</p>

<h3 id="features">Features</h3>

<ul>
  <li>Blue led and two NeoPixels.</li>
  <li>Castellated pinout.</li>
  <li>Onborad 700mA, 3.3V LDO.</li>
  <li>Stemma-QT/Qwiic connector.</li>
  <li>External Flash 4MB.</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>Wi-Fi 802.11b/g/n, 1T1R mode data rate up to 150Mbps.</li>
  <li>BLE 5.0 and rate support: 125Kbps, 500Kbps, 1Mbps, 2Mbps.</li>
  <li>ESP32-C3 chip, 32-bit RISC-V single-core processor.</li>
  <li>UART/PWM/GPIO/ADC/I2C/I2S interface, temperature sensor, pulse counter.</li>
  <li>Multiple sleep modes, deep sleep electric current is less than 5uA.</li>
  <li>STA/AP/STA+AP mode and mix mode.</li>
  <li>USB port local upgrade and remote firmware upgrade (FOTA).</li>
  <li>Secondary development, integrated Linux development environment.</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 05 Oct 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/microdev_micro_c3/</guid>
  </item><item>
    <title>MicroDev microS2</title>
    <link>https://circuitpython.org/board/microdev_micro_s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/microdev_micro_s2.jpg 300w,
               /assets/images/boards/large/microdev_micro_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/microdev_micro_s2.jpg" alt="Image of Board" loading="lazy">
<p>By MicroDev</p> <p>Introducing the <strong>microS2</strong> - <em>An ESP32-S2 based dev-board in the size of a tiny module!</em></p>

<p>With Wi-Fi, native USB and a load of Flash + PSRAM, the microS2 is perfect for use with CircuitPython or Arduino while keeping the form-factor small. Native USB means it can act like a keyboard or a disk drive. WiFi means its awesome for IoT projects.</p>

<p>The ESP32-S2 is a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has built-in native USB as well as some other interesting new technologies. With its state-of-the-art power and RF performance, this SoC is an ideal choice for a wide variety of application scenarios relating to the Internet of Things (IoT), wearable electronics, and smart homes.</p>

<h3 id="features--specifications">Features &amp; Specifications</h3>
<ul>
  <li><strong>ESP32-S2</strong> 32-bit 240MHz Tensilica processor - the next generation of ESP32</li>
  <li><strong>16MB Flash + 8MB PSRAM</strong> - you can have huge data buffers</li>
  <li><strong>Wi-Fi</strong> 2.4GHz 802.11b/g/n - get communicating with the world</li>
  <li><strong>All pins exposed</strong> - too good to be true</li>
  <li><strong>Neopixel</strong> (IO33) <strong>Blue led</strong> (IO21) - who doesn’t love some lights</li>
  <li><strong>Reset &amp; Boot</strong> buttons - can also be used as user button</li>
  <li><strong>USB micro-B &amp; QWIIC/STEMMA</strong> connector - easily connect with peripherals</li>
  <li><strong>31 x 18 mm</strong> - all of the above in a small form factor</li>
</ul>

<h3 id="learn-more">Learn More</h3>
<ul>
  <li><a href="https://github.com/MicroDev1/microS2/wiki">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 25 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/microdev_micro_s2/</guid>
  </item><item>
    <title>Mini SAM M4</title>
    <link>https://circuitpython.org/board/mini_sam_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/mini_sam_m4.jpg 300w,
               /assets/images/boards/large/mini_sam_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/mini_sam_m4.jpg" alt="Image of Board" loading="lazy">
<p>By Benjamin Shockley</p> <p>Mini SAM is a LEGO® minifigure-sized development board based on the Microchip SAMD51G 48-Pin 32-Bit ARM® Cortex®-M4F MCU  running at 48Mhz.</p>

<h1 id="board-features">Board Features</h1>
<h2 id="io">I/O</h2>
<p>The boards includes a micro USB interface for programming and power. Around the edges are 0.050″ spaced breakouts for the six analog pins, including true analog out, and several digital pins available on the SAMD51G including some dedicated I2C, SPI, and UART connections.</p>

<p>The Mini SAM boards include two LED indicators; a standard “Built-In” LED and an APA102 RGB LED.  The standard LED is red and located on the reverse side of the board.  When illuminated it lights up the spaceship on on the logo. There are two built-in buttons as well; a RESET button and a user programmable BUTTON.</p>

<h2 id="memory">Memory</h2>
<p>In order to support CircuitPython, a 2MB Quad-SPI flash memory chip is included. This provides plenty of space for the CircuitPython program as well as space for user programming.  It comes pre-loaded with the latest CircuitPython library bundle.</p>

<h2 id="power">Power</h2>
<p>The boards include a 600mA 3.3V regulator, more than enough to power this little board and its built-in features. The board can be powered from a micro-USB or via a battery connected to the BAT pin – it will automatically switch between the two.  There are exposed pads to solder on an optional 2-JST battery connector on the back or directly to the BAT pin.</p>

<h2 id="purchase">Purchase</h2>
<p>When in stock, you can purchase a board from minifigboards.com</p>
<ul>
  <li><a href="https://minifigboards.com/products/mini-sam-m4">Minifigboards.com</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/mini_sam_m4/</guid>
  </item><item>
    <title>MixGo CE Serial</title>
    <link>https://circuitpython.org/board/mixgo_ce_serial/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/mixgo_ce_serial.jpg 300w,
               /assets/images/boards/large/mixgo_ce_serial.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/mixgo_ce_serial.jpg" alt="Image of Board" loading="lazy">
<p>By Mixly</p> <p>Mixgo CE Serial(Serial port loader) is designed by mixly team and can be programmed with mixly software (mixly2.0 version of graphic and graphic mixed programming platform) to facilitate information popularization and education</p>

<h3 id="specifications">Specifications</h3>
<ul>
  <li>ESP32-S2FH4 main control chip</li>
  <li>16x8 blue LED dot matrix screen</li>
  <li>Infrared reception, infrared remote control</li>
  <li>2-way infrared ranging</li>
  <li>4-way capacitive touch</li>
  <li>There are sensors for temperature, light, sound, acceleration, etc.</li>
  <li>4 RGB full-color lights</li>
  <li>Passive buzzer</li>
  <li>6-way mechanical button</li>
  <li>4-way Type-C USB external expansion</li>
</ul>

<h2 id="about">About</h2>
<ul>
  <li><a href="https://mixly.org/">Mixly</a></li>
  <li><a href="https://xmote.org/">Mixly online programming Edition</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 22 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/mixgo_ce_serial/</guid>
  </item><item>
    <title>MixGo CE UDisk</title>
    <link>https://circuitpython.org/board/mixgo_ce_udisk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/mixgo_ce_udisk.jpg 300w,
               /assets/images/boards/large/mixgo_ce_udisk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/mixgo_ce_udisk.jpg" alt="Image of Board" loading="lazy">
<p>By Mixly</p> <p>Mixgo CE UDisk(USB disk loader) is designed by mixly team and can be programmed with mixly software (mixly2.0 version of graphic and graphic mixed programming platform) to facilitate information popularization and education</p>

<h3 id="specifications">Specifications</h3>
<ul>
  <li>ESP32-S2FH4 main control chip</li>
  <li>16x8 blue LED dot matrix screen</li>
  <li>Infrared reception, infrared remote control</li>
  <li>2-way infrared ranging</li>
  <li>4-way capacitive touch</li>
  <li>There are sensors for temperature, light, sound, acceleration, etc.</li>
  <li>4 RGB full-color lights</li>
  <li>Passive buzzer</li>
  <li>6-way mechanical button</li>
  <li>4-way Type-C USB external expansion</li>
</ul>

<h2 id="about">About</h2>
<ul>
  <li><a href="https://mixly.org/">Mixly</a></li>
  <li><a href="https://xmote.org/">Mixly online programming Edition</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 01 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/mixgo_ce_udisk/</guid>
  </item><item>
    <title>MONSTER M4SK</title>
    <link>https://circuitpython.org/board/monster_m4sk/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/monster_m4sk.jpg 300w,
               /assets/images/boards/large/monster_m4sk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/monster_m4sk.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Peep dis! Have you always wanted to have another pair of eyes on the back of your
head? Or outfit your costume with big beautiful orbs? The MONSTER M4SK is like the
Hallowing but twice as good, with two gorgeous 240x240 pixel IPS TFT displays, driven
by a 120MHZ Cortex M4 processor that can pump out those pixels super fast. You’ll get
the same quality display as our Raspberry Pi Eyes kit but without needing to tote
around a full Linux computer</p>

<p>This unique design has the eyes at the same pupil-distance as a human (~63mm) but is
designed so that the nose section can be broken apart with pliers/cutters and then
wired together with a 9-pin JST SH cable up to 100mm long so the eyes can be
re-positioned or freely attached.</p>

<p>We wanted to make audio-effects easier so in addition to a class D audio amp, there’s
also a stereo headphone jack that is connected to the two DACs on the chip. Use it
when you want an externally sound amplifier box for big effects. For small portable
effects, the built-in amp can drive 8 ohm speakers up to 1 Watt.</p>

<p>On each side are JST-PH plugs for connecting external devices. The 3-pin JSTs connect
to analog/timer pins on the SAMD51, so you can use them for sensors or GPIO
devices. The 4-pin JST connector connects to the I2C port and you can fit Grove
connectors in it for additional hardware support. For the PDM mic port, you can use
this cable to wire to a PDM mic.</p>

<p>There’s also plenty of sensors built in - light sensor, 3 tactile buttons, and a
capacitive touch pad on the nose.</p>

<p>Speaking of that nose, the silkscreen is by the skillful Miss Monster, check out those fangs!</p>

<p>This is by far the cutest, creepiest and most incredible development board we’ve made so far!
Gaze upon these features:</p>

<ul>
  <li>ATSAMD51G19 Cortex M4 microcontroller running at 120MHz with 512KB Flash, 192KB RAM</li>
  <li>8 MB QSPI flash for storing graphics and sound effects</li>
  <li>Two 240x240 IPS TFT displays each on their own SPI bus</li>
  <li>Beautiful silkscreen with a boop-able nose that is a capacitive touch pad</li>
  <li>Lipoly battery charge circuit for portable use</li>
  <li>Stereo headphone jack out, for sound effects via an amplifier</li>
  <li>Mono speaker driver for smaller 8 ohm 1W speakers</li>
  <li>One 4 pin STEMMA JST connector for I2C connection (also Grove compatible)</li>
  <li>Two 3 pin STEMMA JST connectors with digital/analog/PWM for servos, sensors, etc</li>
  <li>One 4 pin JST SH port for connecting an optional PDM microphone</li>
  <li>Backlight controls</li>
  <li>Three tactile buttons</li>
  <li>Light sensor</li>
  <li>On/Off Switch and reset button</li>
</ul>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-monster-m4sk-eyes">MONSTER M4SK Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4343/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4343">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/monster_m4sk/</guid>
  </item><item>
    <title>MorphESP 240</title>
    <link>https://circuitpython.org/board/morpheans_morphesp-240/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/morpheans_morphesp-240.jpg 300w,
               /assets/images/boards/large/morpheans_morphesp-240.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/morpheans_morphesp-240.jpg" alt="Image of Board" loading="lazy">
<p>By Morpheans</p> <p>While there are many ESP32 dev boards on the market, we here at <a href="http://www.morpheans.com/">Morpheans</a> found ourselves lamenting the scarcity of such boards for the new ESP32-<em>S2</em>. So we decided to build one. <strong>Introducing MorphESP 240, an easy-to-use, Arduino- and CircuitPython-compatible, open hardware ESP32-S2 dev board with a built-in high-resolution, IPS-color display.</strong></p>

<p>Our target was <em>minimalism with room to grow</em>, and—after squeezing the following specs into a 20 g, 89 x 28 x 6 mm package—we believe we’ve hit the bullseye:</p>

<ul>
  <li>An ESP32-S2 WROOM with
    <ul>
      <li>A 240 MHz single-core microcontroller</li>
      <li>128 KB of ROM</li>
      <li>320 KB of SRAM</li>
      <li>802.11 b/g/n/ 2.4 GHz Wi-Fi</li>
    </ul>
  </li>
  <li>An on-board, SPI-driven, 240 x 240 pixel ST7789 display</li>
  <li>A classic, multi-color WS2812B RGB LED</li>
  <li>A built-in, JST-connected battery with a USB charging module</li>
  <li>A 5 V to 3.3 V regulator to feed additional modules</li>
  <li>Plenty of GPIOs to play with</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.crowdsupply.com/morpheans/morphesp-240">Crowd Supply</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 24 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/morpheans_morphesp-240/</guid>
  </item><item>
    <title>NanoESP32 S2 w/WROOM</title>
    <link>https://circuitpython.org/board/muselab_nanoesp32_s2_wroom/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/muselab_nanoesp32_s2.jpg 300w,
               /assets/images/boards/large/muselab_nanoesp32_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/muselab_nanoesp32_s2.jpg" alt="Image of Board" loading="lazy">
<p>By Muselab</p> <p>This is the nanoESP32-S2 board with a WROOM ESP32-S2 module.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Microcontroller: Xtensa single-core 32-bit LX7</li>
  <li>Clock Frequency: 160/240 MHz</li>
  <li>Co-processor: ULP (RISC-V)</li>
  <li>SRAM: 320 KB</li>
  <li>ROM: 128 KB</li>
  <li>RTC Memory: 16 KB</li>
  <li>External SPIRAM: Up to 128 MB</li>
  <li>External Flash: Up to 1 GB</li>
  <li>Wi-Fi (802.11 b/g/n): HT20</li>
  <li>ESP-MESH: Yes</li>
  <li>GPIO (total): 43</li>
  <li>Touch sensors: 14</li>
  <li>SPI: 4 (OSPI)</li>
  <li>I2C: 2</li>
  <li>I2S: 1</li>
  <li>UART: 2</li>
  <li>ADC/DAC: 20 (12-bit)/2 (8-bit)</li>
  <li>USB OTG: Yes</li>
  <li>LCD/Camera interface: Yes/Yes</li>
  <li>Temperature/hall sensor: Yes/No</li>
  <li>Low Power Consumption: Automatic RF power management 5 uA in idle mode, 24 uA at 1% duty cycle</li>
</ul>

<h2 id="setup">Setup</h2>

<p>This image can be flashed with the <a href="https://github.com/adafruit/tinyuf2/releases">TinyUF2 bootloader</a> or with <code class="language-plaintext highlighter-rouge">esptool</code> using this command:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>esptool.py <span class="nt">-p</span> <span class="o">(</span>COMPORT<span class="o">)</span> <span class="nt">-b</span> 460800 write_flash <span class="nt">--flash_mode</span> dio <span class="se">\</span>
  <span class="nt">--flash_size</span> detect <span class="nt">--flash_freq</span> 40m 0x00000 <span class="se">\</span>
  adafruit-circuitpython-muselab_nanoesp32_s2_wroom-ll_LL-X.Y.Z.bin
</code></pre></div></div>

<p><strong>NOTE:</strong> This board has 2 USB-C connector, one for Serial (ch340) and one for Native USB (esp32).</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/wuxx/nanoESP32-S2">User Guide</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 15 Sep 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/muselab_nanoesp32_s2_wroom/</guid>
  </item><item>
    <title>NanoESP32 S2 w/WROVER</title>
    <link>https://circuitpython.org/board/muselab_nanoesp32_s2_wrover/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/muselab_nanoesp32_s2.jpg 300w,
               /assets/images/boards/large/muselab_nanoesp32_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/muselab_nanoesp32_s2.jpg" alt="Image of Board" loading="lazy">
<p>By Muselab</p> <p>This is the nanoESP32-S2 board with a WROVER ESP32-S2 module.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Microcontroller: Xtensa single-core 32-bit LX7</li>
  <li>Clock Frequency: 160/240 MHz</li>
  <li>Co-processor: ULP (RISC-V)</li>
  <li>SRAM: 320 KB</li>
  <li>ROM: 128 KB</li>
  <li>RTC Memory: 16 KB</li>
  <li>External SPIRAM: Up to 128 MB</li>
  <li>External Flash: Up to 1 GB</li>
  <li>Wi-Fi (802.11 b/g/n): HT20</li>
  <li>ESP-MESH: Yes</li>
  <li>GPIO (total): 43</li>
  <li>Touch sensors: 14</li>
  <li>SPI: 4 (OSPI)</li>
  <li>I2C: 2</li>
  <li>I2S: 1</li>
  <li>UART: 2</li>
  <li>ADC/DAC: 20 (12-bit)/2 (8-bit)</li>
  <li>USB OTG: Yes</li>
  <li>LCD/Camera interface: Yes/Yes</li>
  <li>Temperature/hall sensor: Yes/No</li>
  <li>Low Power Consumption: Automatic RF power management 5 uA in idle mode, 24 uA at 1% duty cycle</li>
</ul>

<h2 id="setup">Setup</h2>

<p>This image can be flashed with the <a href="https://github.com/adafruit/tinyuf2/releases">TinyUF2 bootloader</a> or with <code class="language-plaintext highlighter-rouge">esptool</code> using this command:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>esptool.py <span class="nt">-p</span> <span class="o">(</span>COMPORT<span class="o">)</span> <span class="nt">-b</span> 460800 write_flash <span class="nt">--flash_mode</span> dio <span class="se">\</span>
  <span class="nt">--flash_size</span> detect <span class="nt">--flash_freq</span> 40m 0x00000 <span class="se">\</span>
  adafruit-circuitpython-muselab_nanoesp32_s2_wrover-ll_LL-X.Y.Z.bin
</code></pre></div></div>

<p><strong>NOTE:</strong> This board has 2 USB-C connector, one for Serial (ch340) and one for Native USB (esp32).</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/wuxx/nanoESP32-S2">User Guide</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 15 Sep 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/muselab_nanoesp32_s2_wrover/</guid>
  </item><item>
    <title>Ndbit6</title>
    <link>https://circuitpython.org/board/ndgarage_ndbit6/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ndgarage_ndbit6.jpg 300w,
               /assets/images/boards/large/ndgarage_ndbit6.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ndgarage_ndbit6.jpg" alt="Image of Board" loading="lazy">
<p>By n°Garage</p> 
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 05 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ndgarage_ndbit6/</guid>
  </item><item>
    <title>Neo Trinkey - SAMD21</title>
    <link>https://circuitpython.org/board/neopixel_trinkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/neopixel_trinkey_m0.jpg 300w,
               /assets/images/boards/large/neopixel_trinkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/neopixel_trinkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit Trinket<em>…</em>it’s <strong>Neo Trinkey</strong>, the circuit board with a Trinket M0 heart and four RGB NeoPixels for customizable glow. We were inspired by some USB key flashlight boards that would turn any battery pack into an LED torch. So we thought, hey what if we made something like that but with fully programmable color NeoPixels? And this is what we came up with!</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an ATSAMD21 microcontroller on board with just enough circuitry to keep it happy. One pin of the microcontroller connects to the four NeoPixel LEDs. Two other pins are used as capacitive touch inputs on the end - if you look carefully you can see the slotted end has left and right touch pads. A reset button lets you enter bootloader mode if necessary. That’s it!</p>

<p>The SAMD21 can run CircuitPython or Arduino very nicely - with existing NeoPixel and our FreeTouch libraries for the capacitive touch input. Over the USB connection you can have serial, MIDI or HID connectivity. The Neo Trinkey is perfect for simple projects that can use a few user inputs and colorful outputs. Maybe you’ll set it up as a simple status notifier, or stretch-break timer, or a macro keypad, or a random color generator, or, hey you could still make it into an LED flashlight if you wanted!</p>

<p>We think its just an adorable little board, small and durable and inexpensive enough that it could be a first microcontroller board, or inspiration for advanced developers to make something simple and fun.</p>

<ul>
  <li>ATSAMD21E18 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Four RGB NeoPixel LEDs</li>
  <li>Two Capacitive Touch pads</li>
  <li>Reset switch for starting your project code over or entering bootloader mode</li>
  <li>Slim and cute, keychain-friendly!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4870">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/neopixel_trinkey_m0/</guid>
  </item><item>
    <title>NFC Copy Cat</title>
    <link>https://circuitpython.org/board/nfc_copy_cat/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nfc_copy_cat.jpg 300w,
               /assets/images/boards/large/nfc_copy_cat.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nfc_copy_cat.jpg" alt="Image of Board" loading="lazy">
<p>By Electronic Cats</p> <p>NFC Copy Cat, manufactured by Electronic Cats, is a small device that combines two powerful cybersecurity tools, NFCopy and MagSpoof. NFCopy works by reading or emulating a NFC card; depending on the necessities of the researcher. On the other hand, MagSpoof can wirelessly emulate/spoof any magnetic stripe card. So using NFC Copy Cat, the user will have a device capable of storing magnetic stripe data or NFC payment data to be replayed later — known in the cybersecurity world as a replay attack.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://github.com/ElectronicCats/NFC-Copy-Cat">NFC Copy Cat - GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nfc_copy_cat/</guid>
  </item><item>
    <title>Nice!Nano</title>
    <link>https://circuitpython.org/board/nice_nano/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nice_nano.jpg 300w,
               /assets/images/boards/large/nice_nano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nice_nano.jpg" alt="Image of Board" loading="lazy">
<p>By Nice Keyboards</p> <p>The nice!nano is a Pro Micro replacement development board offering BLE using the nRF52840 chip. It has the same pinout as the Pro Micro meaning it will work with almost any Pro Micro keyboard. The nice!nano also has a 3.7 V lithium battery charger on board as well as a software level switch to cut off power to LEDs, which can eat 1 mA each even when off.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Mid mount USB-C port making the board a 3.2 mm total thickness (thinner than a Pro Micro)</li>
  <li>nRF52840 chip on board with 1 MB of Flash and 256 KB of RAM</li>
  <li>Adafruit Bootloader loaded offering DFU flashing as well as flashing via UF2 storage</li>
  <li>Programmable indicator (blue) LED as well as a charging indicator (orange) LED</li>
  <li>Battery voltage reader to report battery percentage to main device</li>
  <li>External power can be cut off using an on board MOSFET saving power from LEDs</li>
  <li>5 extra GPIO pins (3 thru holes and 2 pads on the back) offering a total of 23 GPIO pins</li>
  <li>3.3 V out of the VCC pin to power external features</li>
  <li>32.768 kHz oscillator on board for real-time clock capabilities</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://docs.nicekeyboards.com/#/nice!nano/">Documentation</a></li>
  <li><a href="https://docs.nicekeyboards.com/#/nice!nano/pinout_schematic">Pinout and schematic</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://nicekeyboards.com/nice-nano/#find-a-store">Nice! Resellers</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 04 Jun 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nice_nano/</guid>
  </item><item>
    <title>STM32F446RE Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_f446re/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nucleo_f446re.jpg 300w,
               /assets/images/boards/large/nucleo_f446re.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nucleo_f446re.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32 Nucleo-64 board provides an affordable and flexible way for users to try out new concepts and build prototypes by choosing from the various combinations of performance and power consumption features, provided by the STM32 microcontroller. For the compatible boards, the external SMPS significantly reduces power consumption in Run mode.</p>

<p>The ARDUINO® Uno V3 connectivity support and the ST morpho headers allow the easy expansion of the functionality of the STM32 Nucleo open development platform with a wide choice of specialized shields.</p>

<p>The STM32 Nucleo-64 board does not require any separate probe as it integrates the ST-LINK debugger/programmer.</p>

<p>The STM32 Nucleo-64 board comes with the STM32 comprehensive free software libraries and examples available with the STM32Cube MCU Package.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/en/products/detail/stmicroelectronics/NUCLEO-F446RE/5347712">Digi-Key</a></li>
  <li><a href="https://amzn.to/3T5Lo19">Amazon</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 05 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_f446re/</guid>
  </item><item>
    <title>STM32F746 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_f746zg/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nucleo_f746zg.jpg 300w,
               /assets/images/boards/large/nucleo_f746zg.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nucleo_f746zg.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32F746 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-f746zg.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicro/NUCLEO-F746ZG/497-16282-ND/5806779">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 22 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_f746zg/</guid>
  </item><item>
    <title>STM32F767 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_f767zi/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nucleo_f767zi.jpg 300w,
               /assets/images/boards/large/nucleo_f767zi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nucleo_f767zi.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32F767 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-f767zi.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicro/NUCLEO-F767ZI/497-16525-ND/6004740">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 05 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_f767zi/</guid>
  </item><item>
    <title>STM32H743 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_h743zi_2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nucleo_h743zi_2.jpg 300w,
               /assets/images/boards/large/nucleo_h743zi_2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nucleo_h743zi_2.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32H743 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-h743zi.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicroelectronics/NUCLEO-H743ZI/497-17786-ND/7809236">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_h743zi_2/</guid>
  </item><item>
    <title>Bread 2040 Dev Board</title>
    <link>https://circuitpython.org/board/odt_bread_2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odt_bread_2040.jpg 300w,
               /assets/images/boards/large/odt_bread_2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odt_bread_2040.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>BREAD 2040 is a compact and breadboard friendly development board which features the Raspberry Pi RP2040, a NeoPixel compatible SK6812mini, 2M B of QSPI Flash, Reset button, and all GPIO and SWD pins broken out to the side in an easily breadboard design. No weird pins on the ends! This board is also CircuitPython compatible meaning you can develop your projects faster with Python.</p>

<p>The BREAD2040 was designed in an inspirational burst of energy while watching the CircuitPython Day Adafruit Board Tour.</p>

<p>The BREAD 2040 takes an old fashion approach to this design, keeping in mind bread board friendliness as well as providing modern USB style plugs with the USB-C connector.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/24791/">Tindie</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/skerr92/odt-dev-boards/tree/master/boards/BREAD%202040">Schematics</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 16 Oct 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/odt_bread_2040/</guid>
  </item><item>
    <title>CAST-AWAY RP2040</title>
    <link>https://circuitpython.org/board/odt_cast_away_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odt_cast_away_rp2040.jpg 300w,
               /assets/images/boards/large/odt_cast_away_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odt_cast_away_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>Cast your project fears away with the Cast-Away RP2040, a small and easy to use RP2040 dev board designed to take your project to the beach. This board uses the popular Raspberry Pi RP2040, a dual core ARM Cortex M0 microcontroller.</p>

<h2 id="features">Features</h2>

<ul>
  <li>USB-C Connector</li>
  <li>NEOPIXEL Compatible SK6812mini Addressable RGB LED</li>
  <li>15 Flexible GPIO (3 Analog, All PWM’able)</li>
  <li>Castellated single sided design for flush mounting</li>
  <li>Buttons on the corners for easy access</li>
  <li>3.3 V broken out with 500 mA max output</li>
  <li>Raw USB Power (5.5 V) and USB PID configured for up to 3 A with USB-C PID Supply</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/oakdevtech/cast-away-rp2040-a-castellated-rp2040-dev-board/">Tindie</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/skerr92/odt-dev-boards/tree/master/boards/Cast-Away-RP2040">Schematics</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/odt_cast_away_rp2040/</guid>
  </item><item>
    <title>PixelWing ESP32-S2 RGB Matrix</title>
    <link>https://circuitpython.org/board/odt_pixelwing_esp32_s2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odt_pixelwing_esp32_s2.jpg 300w,
               /assets/images/boards/large/odt_pixelwing_esp32_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odt_pixelwing_esp32_s2.jpg" alt="Image of Board" loading="lazy">
<p>By Oak Development Technologies</p> <p>The PixelWing Matrix is a powerful ESP32-S2 RGB Matrix Display board that allows you to make a simple connected display, data logger, or environmental indicator. The PixelWing features USB-C power, a 5x10 RGB Matrix Display using SK6812mini Addressable LEDs that are compatible with Adafruit NEOPIXEL Libraries!</p>

<p>In addition to this, the PixelWing provides a quick access I2C JST connector that is compatible with Qwiic and Stemma QT connectors allowing you to connect all your favorite Adafruit and Sparkfun sensor breakouts.</p>

<p>All of this is combined with CircuitPython support making it easy to get programming on your project.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/oakdevtech/pixelwing-esp32-s2-rgb-matrix/">Tindie</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://github.com/skerr92/odt-dev-boards/tree/master/boards/PixelWing-ESP32">Schematics</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 24 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/odt_pixelwing_esp32_s2/</guid>
  </item><item>
    <title>Open Hardware Summit 2020 Badge</title>
    <link>https://circuitpython.org/board/ohs2020_badge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ohs2020_badge.jpg 300w,
               /assets/images/boards/large/ohs2020_badge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ohs2020_badge.jpg" alt="Image of Board" loading="lazy">
<p>By OSHWA</p> <p>This is the badge for the Open Hardware Summit in NYC on on March 13th.
<a href="https://2020.oshwa.org/">Conference Link</a></p>

<p>It is going to be in a wrist watch form factor with several awesome features.</p>

<ul>
  <li>Rigado BMD340 (Nordic nRF52840)</li>
  <li>1.54” LCD</li>
  <li>4 user buttons</li>
  <li>BME680 Temperature, Pressure, and Humidity sensor</li>
  <li>APDS-9960 Gesture Sensor</li>
  <li>LSM9DS1 9DoF IMU</li>
  <li>SPH0645LM4H-B Microphone (Optional)</li>
  <li>Sparkfun QWIIC connector</li>
  <li>LiPo Charger</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Not available for direct purchase.
The badge will be given to all attendees of the Open Hardware Summit!</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ohs2020_badge/</guid>
  </item><item>
    <title>The Open Book </title>
    <link>https://circuitpython.org/board/openbook_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/openbook_m4.jpg 300w,
               /assets/images/boards/large/openbook_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/openbook_m4.jpg" alt="Image of Board" loading="lazy">
<p>By Oddly Specific Objects</p> <p>The Open Book is an open-hardware device for reading books in all the languages of the world. It includes a large screen and buttons for navigation, as well as audio options for accessibility and ports to extend its functionality. Its detailed silkscreen, with the all the manic energy and quixotic ambition of a Dr. Bronner’s bottle, aims to demystify the Open Book’s own design, breaking down for the curious reader both how the book works, and how they can build one for themselves.</p>

<p>For more detailed technical specifications, check out <a href="https://hackaday.io/project/168761-the-open-book-feather">the Hackaday.io project page</a>.</p>

<h2 id="purchase">Purchase</h2>

<p>The Open Book is not yet available for purchase, but you can <a href="https://oshpark.com/shared_projects/9h6jn9B1">order the board</a> from OSH Park, and the BOM is available at <a href="https://github.com/joeycastillo/The-Open-Book">the project’s GitHub page</a>. Instructions for assembly are printed on the front of the PCB.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/openbook_m4/</guid>
  </item><item>
    <title>OpenMV H7</title>
    <link>https://circuitpython.org/board/openmv_h7/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/openmv_h7.jpg 300w,
               /assets/images/boards/large/openmv_h7.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/openmv_h7.jpg" alt="Image of Board" loading="lazy">
<p>By OpenMV</p> <p>STM32H7 powered OpenMV camera board.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4478">Adafruit</a></li>
  <li><a href="https://openmv.io/collections/products/products/openmv-cam-h7">OpenMV</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 29 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/openmv_h7/</guid>
  </item><item>
    <title>Argon</title>
    <link>https://circuitpython.org/board/particle_argon/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/particle_argon.jpg 300w,
               /assets/images/boards/large/particle_argon.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/particle_argon.jpg" alt="Image of Board" loading="lazy">
<p>By Particle</p> <p>The Argon is a powerful Wi-Fi enabled development kit that can act as a standalone Wi-Fi endpoint. It is based on the Nordic nRF52840 and has built-in battery charging circuitry so it’s easy to connect a Li-Po and deploy your local network in minutes.</p>

<p>The Argon is great for connecting projects or as a gateway to connect an entire group of local endpoints. It’s everything you love about the Photon, with more features like Bluetooth.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Espressif ESP32-D0WD 2.4 GHz Wi-Fi coprocessor
    <ul>
      <li>On-board 4 MB flash for ESP32</li>
      <li>802.11 b/g/n support</li>
      <li>802.11 n (2.4 GHz), up to 150 Mbps</li>
    </ul>
  </li>
  <li>Nordic Semiconductor nRF52840 SoC
    <ul>
      <li>ARM Cortex-M4F 32-bit processor @ 64MHz</li>
      <li>1 MB flash, 256 KB RAM</li>
      <li>IEEE 802.15.4-2006: 250 Kbps</li>
      <li>Bluetooth 5: 2 Mbps, 1 Mbps, 500 Kbps, 125 Kbps</li>
      <li>Supports DSP instructions, HW accelerated Floating Point Unit (FPU) calculations</li>
      <li>ARM TrustZone CryptoCell-310 Cryptographic and security module</li>
      <li>Up to +8 dBm TX power (down to -20 dBm in 4 dB steps)</li>
      <li>NFC-A tag</li>
    </ul>
  </li>
  <li>On-board additional 4 MB SPI flash</li>
  <li>20 mixed signal GPIO (6x Analog, 8x PWM), UART, I2C, SPI</li>
  <li>Micro USB 2.0 full speed (12 Mbps)</li>
  <li>Integrated Li-Po charging and battery connector</li>
  <li>JTAG (SWD) Connector</li>
  <li>RGB status LED</li>
  <li>Reset and Mode buttons</li>
  <li>On-board 2.4 GHz PCB antenna for Thread/BLE (does not support Wi-Fi)</li>
  <li>Two U.FL connectors for external antennas (one for Thread/BLE, another for Wi-Fi)</li>
  <li>Meets the Feather specification in dimensions and pinout</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://store.particle.io/products/argon-kit">Argon Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3997">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3993">Argon Kit - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_argon/</guid>
  </item><item>
    <title>Boron</title>
    <link>https://circuitpython.org/board/particle_boron/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/particle_boron.jpg 300w,
               /assets/images/boards/large/particle_boron.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/particle_boron.jpg" alt="Image of Board" loading="lazy">
<p>By Particle</p> <p>This board hasn’t been fully documented yet. Please make a pull request adding more info to this file.</p>

<p>The description should be written to inform a CircuitPython user what makes the board unique and link to relevant info about it.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.particle.io/products/boron-kit">Boron Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3998">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3994">Boron Kit - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_boron/</guid>
  </item><item>
    <title>Xenon</title>
    <link>https://circuitpython.org/board/particle_xenon/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/particle_xenon.jpg 300w,
               /assets/images/boards/large/particle_xenon.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/particle_xenon.jpg" alt="Image of Board" loading="lazy">
<p>By Particle</p> <p>This board hasn’t been fully documented yet. Please make a pull request adding more info to this file.</p>

<p>The description should be written to inform a CircuitPython user what makes the board unique and link to relevant info about it.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.particle.io/products/xenon-kit">Xenon Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3999">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3995">Xenon Kit - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_xenon/</guid>
  </item><item>
    <title>nRF52840 DK (PCA10056)</title>
    <link>https://circuitpython.org/board/pca10056/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nRF52840_dk.jpg 300w,
               /assets/images/boards/large/nRF52840_dk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nRF52840_dk.jpg" alt="Image of Board" loading="lazy">
<p>By Nordic Semiconductor</p> <p>The Nordic nRF52840 kit is hardware compatible with the Arduino Uno Revision 3 standard for shields, making it possible to use 3rd-party shields that are compatible to this standard. An NFC antenna can be connected the kit to enable NFC tag functionality. The kit gives access to all I/O and interfaces via connectors and has 4 LEDs and 4 buttons which are user-programmable. It supports the standard Nordic Software Development Tool-chain using Segger Embedded Studio, Keil, IAR and GCC. Program/Debug options on the kit is Segger J-Link OB.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nrf52840-DK">Price Comparison</a></li>
  <li><a href="https://www.arrow.com/en/products/nrf52840-dk/nordic-semiconductor?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=oemsecrets_2019_arrow&amp;utm_content=inv_listing&amp;utm_keyword=NRF52840-DK">Arrow Electronics</a></li>
  <li><a href="https://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=94949&amp;utm_source=OemSecrets&amp;utm_medium=compref&amp;utm_campaign=OemSecrets&amp;utm_term=NRF52840-DK">Symmetry Electronics</a></li>
  <li><a href="https://www.mouser.co.uk/ProductDetail/Nordic-Semiconductor/nRF52840-DK?qs=F5EMLAvA7IA76ZLjlwrwMw==&amp;utm_source=OEMSECRETS&amp;utm_medium=aggregator&amp;utm_campaign=nRF52840-DK&amp;utm_term=nrf52840-DK&amp;utm_content=Nordic%20Semiconductor">Mouser</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/nordic-semiconductor-asa/NRF52840-DK/1490-1072-ND/8593726?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=buynow">Digi-Key</a></li>
  <li><a href="https://www.avnet.com/shop/us/products/nordic-semiconductor/nrf52840-dk-3074457345635668705?CMP=EMA_OEMSecrets_inventoryfeed_VSE">Avnet America</a></li>
  <li><a href="https://sg.element14.com/nordic-semiconductor/nrf52840-dk/dev-kit-bluetooth-low-energy-soc/dp/2842321?CMP=GRHB-OEMSECRETS">element14</a></li>
  <li><a href="https://www.avnet.com/shop/emea/products/nordic-semiconductor/nrf52840-dk-3074457345635159181?c=EUR&amp;r=EMEA&amp;CMP=EMEA_OEMSecrets_inventoryfeed_VSE">Avnet Europe/Middle East/Africa</a></li>
  <li><a href="https://www.tme.eu/en/details/nrf52840-dk/development-kits-others/nordic-semiconductor/?utm_source=oemsecrets.com&amp;utm_medium=cpc&amp;utm_campaign=compare-2020-01">TME</a></li>
  <li><a href="https://www.avnet.com/shop/apac/products/nordic-semiconductor/nrf52840-dk-3074457345635203852?r=ASIA&amp;CMP=ASIA_OEMSecrets_inventoryfeed_VSE">Avnet Asia Pacific</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pca10056/</guid>
  </item><item>
    <title>nRF52840 Dongle (PCA10059)</title>
    <link>https://circuitpython.org/board/pca10059/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nRF52840_dongle.jpg 300w,
               /assets/images/boards/large/nRF52840_dongle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nRF52840_dongle.jpg" alt="Image of Board" loading="lazy">
<p>By Nordic Semiconductor</p> <p>The nRF52840 dongle from Nordic Semiconductor is a small, low-cost USB dongle for Bluetooth Low Energy, Bluetooth mesh, Thread, ZigBee, 802.15.4, ANT, and 2.4 GHz proprietary applications using the nRF52840 SoC. The dongle has been designed to be used as a wireless hardware device together with nRF Connect for Desktop.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Bluetooth 5.2 ready multiprotocol radio (2 Mbps, Long Range, Advertising Extensions, Channel Selection Algorithm #2)</li>
  <li>IEEE 802.15.4 radio support (Thread, Zigbee)</li>
  <li>Arm Cortex-M4 with floating point support</li>
  <li>DSP instruction set</li>
  <li>Arm CryptoCell CC310 cryptographic accelerator</li>
  <li>15 GPIO available via edge castellation</li>
  <li>USB interface direct to nRF52840 SoC</li>
  <li>Integrated 2.4 GHz PCB antenna</li>
  <li>1 user-programmable button</li>
  <li>1 user-programmable RGB LED</li>
  <li>1 user-programmable LED</li>
  <li>1.7-5.5 V operation from USB or external</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://infocenter.nordicsemi.com/index.jsp?topic=/ug_nrf52840_dongle/UG/nrf52840_Dongle/getting_started.html">Getting started guide</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nRF52840DONGLE">Price Comparison</a></li>
  <li><a href="https://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=94964&amp;utm_source=OemSecrets&amp;utm_medium=compref&amp;utm_campaign=OemSecrets&amp;utm_term=NRF52840-DONGLE">Symmetry Electronics</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/nordic-semiconductor-asa/NRF52840-DONGLE/1490-1073-ND/9491124?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=buynow">Digi-Key</a></li>
  <li><a href="https://www.arrow.com/en/products/nrf52840-dongle/nordic-semiconductor?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=oemsecrets_2019_arrow&amp;utm_content=inv_listing&amp;utm_keyword=NRF52840-DONGLE">Arrow Electronics</a></li>
  <li><a href="https://www.avnet.com/shop/us/products/nordic-semiconductor/nrf52840-dongle-3074457345635709668?CMP=EMA_OEMSecrets_inventoryfeed_VSE">Avnet America</a></li>
  <li><a href="https://www.mouser.co.uk/ProductDetail/Nordic-Semiconductor/nRF52840-Dongle?qs=gTYE2QTfZfTbdrOaMHWEZg==&amp;utm_source=OEMSECRETS&amp;utm_medium=aggregator&amp;utm_campaign=nRF52840-Dongle&amp;utm_term=nRF52840DONGLE&amp;utm_content=Nordic+Semiconductor">Mouser</a></li>
  <li><a href="https://sg.element14.com/nordic-semiconductor/nrf52840-dongle/bluetooth-module-v5-2mbps/dp/2902521?CMP=GRHB-OEMSECRETS">element14 Farnell</a></li>
  <li><a href="https://www.avnet.com/shop/emea/products/nordic-semiconductor/nrf52840-dongle-3074457345635584192?c=EUR&amp;r=EMEA&amp;CMP=EMEA_OEMSecrets_inventoryfeed_VSE">Avnet Europe/Middle East/Africa</a></li>
  <li><a href="https://www.tme.eu/en/details/nrf52840-dongle/development-kits-for-data-transmission/nordic-semiconductor/?utm_source=oemsecrets.com&amp;utm_medium=cpc&amp;utm_campaign=compare-2020-01">TME</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pca10059/</guid>
  </item><item>
    <title>nRF52833 DK (PCA10100)</title>
    <link>https://circuitpython.org/board/pca10100/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pca10100.jpg 300w,
               /assets/images/boards/large/pca10100.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pca10100.jpg" alt="Image of Board" loading="lazy">
<p>By Nordic Semiconductor</p> <p>Nordic Semiconductor nRF52833 DK is a single-board development kit for the development of Bluetooth Low Energy, Bluetooth mesh, NFC, Thread, and Zigbee applications on nRF52833 SoC.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Arm® Cortex-M4 with FPU</li>
  <li>Bluetooth 5.2 multiprotocol radio (2 Mbps, Long range, Advertising extensions, Channel Selection Algorithm #2, Bluetooth mesh, Direction Finding)</li>
  <li>IEEE 802.15.4 radio support (Thread, Zigbee)</li>
  <li>Arduino Rev3 compatible connector for use with third-party shields</li>
  <li>All I/Os and interfaces available via connectors</li>
  <li>Segger J-Link OB programming/debugging supported</li>
  <li>Support for programming/debugging of external boards</li>
  <li>USB interface direct to nRF52833 SoC</li>
  <li>USB interface to power and program/debug</li>
  <li>Connector for external NFC antenna (included)</li>
  <li>SWF connector for direct RF measurements</li>
  <li>Pins for power consumption measurements</li>
  <li>4x user-programmable buttons</li>
  <li>4x user-programmable LEDs</li>
  <li>CR2032 coin-cell battery holder</li>
  <li>1.7 V to 5.5 V supplied from battery, USB or external VDD</li>
  <li>Integrated 2.4 GHz PCB antenna</li>
  <li>50 Ω antenna connector type</li>
</ul>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://www.mouser.ch/datasheet/2/297/nRF52833_DK_PB_1.0-1815248.pdf">Datasheet</a></li>
  <li><a href="https://www.mouser.ch/pdfDocs/Nordic_nRF52833-DK_UG.pdf">User guide</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nRF52833-DK&amp;series_token=nRF52833">Price Comparison</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 May 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pca10100/</guid>
  </item><item>
    <title>PewPew</title>
    <link>https://circuitpython.org/board/pewpew10/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pewpew_10.2.jpg 300w,
               /assets/images/boards/large/pewpew_10.2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pewpew_10.2.jpg" alt="Image of Board" loading="lazy">
<p>By Radomir Dopieralski</p> <p>This board was designed to be an affordable device for teaching game
development. An eight by eight display, with four shades of pixels, together
with an equivalent of a Trinket M0 on board let you create and play simple
games such as Snake, Tetris or Frogger. A number of example games, together
with an online tutorial and documentation, let you quickly pick up the skills
that you will later find useful when creating bigger games and interactive
applications. A row of pins on the back also lets you connect anything you
could use with other boards, so you can also use this for playing with
electronics.</p>

<h2 id="learn-more">Learn More</h2>
<p>More information is available at <a href="https://pewpew.rtfd.io">pewpew.rtfd.io</a>.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.makerfabs.com/pewpew-standalone.html">Makerfabs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pewpew10/</guid>
  </item><item>
    <title>PewPew LCD</title>
    <link>https://circuitpython.org/board/pewpew_lcd/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pewpew_lcd.jpg 300w,
               /assets/images/boards/large/pewpew_lcd.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pewpew_lcd.jpg" alt="Image of Board" loading="lazy">
<p>By Radomir Dopieralski</p> <p>PewPew are a family of handheld game devices designed for running Python
programming workshops. The PewPew LCD is a member of that family with an
LCD screen enabling you to see the error messages without having to
connect to the REPL from your computer.</p>

<h2 id="learn-more">Learn More</h2>
<p>More information about the project is available at <a href="https://hackaday.io/project/185291-pewpew-lcd">hackaday.io</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 09 May 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pewpew_lcd/</guid>
  </item><item>
    <title>PewPew M4</title>
    <link>https://circuitpython.org/board/pewpew_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pewpew_m4.jpg 300w,
               /assets/images/boards/large/pewpew_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pewpew_m4.jpg" alt="Image of Board" loading="lazy">
<p>By Radomir Dopieralski</p> <p>This board was designed to get you to make games with CircuitPython with
minimal fuss and also minimal cost. It comes with a powerful SAMD51 Cortex M4
microcontroller already loaded with CircuitPython and some example games,
a 160x128 display, and seven buttons arranged in a familiar way. Just plug it
into USB and you can modify the example games or write your own.</p>

<h2 id="updating-warning">Updating Warning</h2>

<p>If you update this board from version 5.x or older to version 6.x or newer, you
have to replace the <code class="language-plaintext highlighter-rouge">main.py</code> file with a <a href="https://github.com/pewpew-game/game-m4-menu">newer version obtained from the
repository</a>, otherwise the game
selection menu will not work with the new version of CircuitPython.</p>

<h2 id="learn-more">Learn More</h2>
<p>More information is available at <a href="https://pewpew.rtfd.io">pewpew.rtfd.io</a>
and <a href="https://hackaday.io/project/165032-pewpew-m4">Hackaday.io</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://makerfabs.com/circuitpython-pewpew-m4.html">Makerfabs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pewpew_m4/</guid>
  </item><item>
    <title>PicoPlanet</title>
    <link>https://circuitpython.org/board/picoplanet/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/picoplanet.jpg 300w,
               /assets/images/boards/large/picoplanet.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/picoplanet.jpg" alt="Image of Board" loading="lazy">
<p>By bleeptrack</p> <p>PicoPlanet is a procedurally generated series of PCBs. The three planets act as capacitive touch buttons. The board also has a RGB LED on top, a USB-C connector and 4 more pin pads on the bottom. The board’s brain is a powerful SAMD21. The design also has stars that are not covered by  copper or soldermask and are perfect spots to place more LEDs.</p>

<p>The board design is generated procedurally and each version of the board is only produced 10 times.</p>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.tindie.com/products/21123/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/picoplanet/</guid>
  </item><item>
    <title>PillBug</title>
    <link>https://circuitpython.org/board/pillbug/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pillbug.jpg 300w,
               /assets/images/boards/large/pillbug.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pillbug.jpg" alt="Image of Board" loading="lazy">
<p>By MechWild</p> <p>The PillBug is a BLE enabled development board powered by the nRF52840 that is designed to be a drop in replacement for the stm32f401/stm32f411 blackpill development board. This board was designed for compatibility with blackpill driven keyboards and will work as a simple replacement in most cases. The PillBug features 3.7V Li-Ion battery charger, a software controlled hardware cutoff for powering peripherals, a controllable status LED, and compatibility with blackpill’s pinouts for I2C/SPI/UART.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>BLE (Bluetooth Low Energy) capable</li>
  <li>nRF52840 powered with 1MB Flash memory and 256KB RAM</li>
  <li>Preloaded Adafruit nRF52 Bootloader utlizing UF2 and DFU flashing options</li>
  <li>Software controlled blue status LED that can be configured by application</li>
  <li>Hardware controlled charging red status LED</li>
  <li>3.3V GPIO logic and power provided through VCC pins</li>
  <li>Software controlled MOSFET to disable providing power through the power pins to external peripherals</li>
  <li>30 Total GPIO pins in an easy to use and breadboard friendly layout</li>
  <li>RTC (real-time clock) capabilities provided through use of 32.768kHz oscillator (necessary for BlE)</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://mechwild.com/product/pillbug/">MechWild</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://mechwild.com/product/pillbug/">MechWild</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 09 Nov 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pillbug/</guid>
  </item><item>
    <title>Badger 2040</title>
    <link>https://circuitpython.org/board/pimoroni_badger2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_badger2040.jpg 300w,
               /assets/images/boards/large/pimoroni_badger2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_badger2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A hackable, programmable badge(r) with monochrome E Ink® display, powered by Raspberry Pi RP2040. It has a quintet of buttons (one for each claw), a slot so you can clip it onto a lanyard and a battery connector to keep things portable. You can even connect it up to Qwiic and STEMMA QT breakouts!</p>

<h2 id="features">Features</h2>

<ul>
  <li>2.9” black and white E Ink® display (296 x 128 pixels)</li>
  <li>Powered by RP2040 (Dual Arm Cortex M0+ running at up to 133Mhz with 264kB of SRAM)</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>Five front user buttons</li>
  <li>Reset and boot buttons (the boot button can also be used as a user button)</li>
  <li>White LED</li>
  <li>USB-C connector for power and programming</li>
  <li>JST-PH connector for attaching a battery (input range 2.7V - 6V)</li>
  <li>High-precision voltage reference for battery level monitoring</li>
  <li>Qw/ST (Qwiic/STEMMA QT) connector for breakouts</li>
</ul>

<h2 id="about-rp2040">About RP2040</h2>

<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://github.com/pimoroni/pico-circuitpython-examples/tree/main/badger2040">Example code</a></li>
  <li><a href="https://cdn.shopify.com/s/files/1/0174/1800/files/badger_2040_schematic.pdf?v=1645702148">Schematics</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.pimoroni.com/products/badger-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 24 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_badger2040/</guid>
  </item><item>
    <title>Interstate 75</title>
    <link>https://circuitpython.org/board/pimoroni_interstate75/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_interstate75.jpg 300w,
               /assets/images/boards/large/pimoroni_interstate75.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_interstate75.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>Enter the (LED) matrix with Interstate 75 - a RP2040-powered driver board for HUB75-style RGB matrices, designed to plug neatly into the back of a LED panel. It provides a quick and easy way to whip up some scrolling signage or an eye-catching LED display for sensor outputs.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Dual Arm Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>Compatible with 32x32, 32x64 and 64x64 LED matrices.</li>
  <li>Sturdy screw terminals for powering the LED panels.</li>
  <li>USB-C connector for power and programming (3A max)</li>
  <li>Qw/ST (Qwiic/STEMMA QT) connector</li>
  <li>Reset, BOOT and a user button (the BOOT button can also be used as a user button)</li>
  <li>RGB LED</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/interstate-75">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 01 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_interstate75/</guid>
  </item><item>
    <title>Keybow 2040</title>
    <link>https://circuitpython.org/board/pimoroni_keybow2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_keybow2040.jpg 300w,
               /assets/images/boards/large/pimoroni_keybow2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_keybow2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A luxe 16 key USB-C keyboard with tactile mechanical switches and fully customisable RGB lighting, ideal for custom macro pads, midi controllers and stream decks. RP2040 gives Keybow 2040 low latency input, zero boot time and a new, compact footprint.</p>

<h2 id="features">Features</h2>
<ul>
  <li>16 (4x4 matrix) of low profile keys connected directly to GPIOs</li>
  <li>Per key RGB LEDs driven by an IS31FL3731 PWM LED matrix driver</li>
  <li>Kailh hot-swap switch sockets (for Cherry MX-compatible switches)</li>
  <li>Powered and programmable via USB-C</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of the RP2040 microcontroller are the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/keybow-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 24 Feb 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_keybow2040/</guid>
  </item><item>
    <title>Motor 2040</title>
    <link>https://circuitpython.org/board/pimoroni_motor2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_motor2040.jpg 300w,
               /assets/images/boards/large/pimoroni_motor2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_motor2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A compact 4 channel motor+encoder controller, powered by RP2040. It has RGB and per-motor indicator LEDs plus built in voltage and current sensing. There’s also a Qwiic/STEMMA QT connector for adding breakouts!</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040 (Dual Arm Cortex M0+ running at up to 133Mhz with 264kB of SRAM)</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>2 Dual H-Bridge motor drivers (DRV8833)</li>
  <li>4 JST-SH connectors (6 pin) for attaching motors</li>
  <li>Wide voltage range for motors and logic (2.7V to 10V)</li>
  <li>On-board 3V3 regulator with input up to 13.2V (max regulator current output 150mA)</li>
  <li>Onboard voltage, current and fault sensing</li>
  <li>Per motor current limiting (0.5A) *</li>
  <li>Per motor direction indicator LEDs **</li>
  <li>Addressable RGB LED/Neopixel</li>
  <li>Reset and BOOT button (the BOOT button can also be used as a user button)</li>
  <li>USB-C connector for programming and power (3A max)</li>
  <li>Qw/ST (Qwiic/STEMMA QT) connector for breakouts</li>
</ul>

<h2 id="powering-motor-2040">Powering Motor 2040</h2>
<p>Motor 2040 can be powered either by plugging the board into a USB-C power source (like a PC or power adapter) or by connecting a battery pack to the EXT PWR or VSYS connections. On an unmodified board, <strong>you should only have one power source connected at a time</strong>, to avoid back-powering your computer or battery.</p>

<p>If you want to have two power sources connected at the same time, Motor 2040 has two traces on its underside that you can cut to do this safely.</p>

<ul>
  <li><strong>Cut EXT PWR to VSYS</strong> if you want to provide your motors with a separate power supply (up to 10V) from that used to power the rest of the board. Board power (up to 13.2V) will need to be provided either by USB 5V or VSYS.</li>
  <li><strong>Cut USB 5V to VSYS</strong> if you want to run the board entirely off a separate power supply, without worry of back-powering your computer. Note that this also means the board will not turn on when only connected by USB.</li>
</ul>

<h2 id="notes">Notes</h2>
<ul>
  <li>* The current limit of each motor can be disabled by soldering the “high current” pads on the rear (doing this will also disable the current monitoring). The maximum supported output current is 1.2 A continuous (2 A peak) per motor.</li>
  <li>** The direction indicators for each motor can be disabled by cutting the “motor LED” traces on the rear.</li>
  <li>The pinout of the JST-SH motor connectors is M+, M-, 3v3, A, B, GND.</li>
</ul>

<h2 id="about-rp2040">About RP2040</h2>
<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/motor-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 15 Jun 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_motor2040/</guid>
  </item><item>
    <title>PGA2040</title>
    <link>https://circuitpython.org/board/pimoroni_pga2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_pga2040.jpg 300w,
               /assets/images/boards/large/pimoroni_pga2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_pga2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A minimal RP2040 breakout board wrangled into a Pin Grid Array, with a maximal dash of retraux style. PGA2040 has no USB port, LED or buttons but it does have an embed-friendly 21mm square footprint, 8MB of flash and lots of exposed RP2040 pins to play with.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Dual ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>8MB of QSPI flash supporting XiP</li>
  <li>Crystal oscillator</li>
  <li>On-board 3V3 regulator (max regulator current output 300mA)</li>
  <li>48 pins, arranged with 2.54mm (0.1”) spacing in a Pin Grid Array</li>
  <li>30 multi-function General Purpose IO (4 can be used for ADC)</li>
  <li>8 GND pins</li>
  <li>Input voltage range 3V - 5.5V (on VB pin)</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of the RP2040 microcontroller are the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/pga2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 10 Jun 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_pga2040/</guid>
  </item><item>
    <title>Pimoroni Pico LiPo (16MB)</title>
    <link>https://circuitpython.org/board/pimoroni_picolipo_16mb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_picolipo.jpg 300w,
               /assets/images/boards/large/pimoroni_picolipo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_picolipo.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A top of the line Pirate-brand RP2040-powered microcontroller with all the extras - lots of flash memory, USB-C, STEMMA QT/Qwiic and debug connectors… and onboard LiPo charging! Pimoroni Pico boards add extra functionality whilst keeping to the Pico footprint, ensuring compatibility with existing Pico addons.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Dual ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>16MB of QSPI flash supporting XiP</li>
  <li>MCP73831 charger with 215mA charging current</li>
  <li>XB6096I2S battery protector</li>
  <li>USB-C connector for power, programming, and data transfer</li>
  <li>4 pin Qw-ST (Qwiic / STEMMA QT) connector</li>
  <li>3 pin debug connector (JST-SH)</li>
  <li>2-pole JST PH battery connector, with polarity marked on the board</li>
  <li>Switch for basic input (doubles up as DFU select on boot)</li>
  <li>Power button</li>
  <li>Power, charging and user LED indicators</li>
  <li>On-board 3V3 regulator (max regulator current output 600mA)</li>
  <li>Input voltage range 3V - 5.5V</li>
  <li>Compatible with Raspberry Pi Pico packs and bases</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/picolipo">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_picolipo_16mb/</guid>
  </item><item>
    <title>Pimoroni Pico LiPo (4MB)</title>
    <link>https://circuitpython.org/board/pimoroni_picolipo_4mb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_picolipo.jpg 300w,
               /assets/images/boards/large/pimoroni_picolipo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_picolipo.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A top of the line Pirate-brand RP2040-powered microcontroller with all the extras - lots of flash memory, USB-C, STEMMA QT/Qwiic and debug connectors… and onboard LiPo charging! Pimoroni Pico boards add extra functionality whilst keeping to the Pico footprint, ensuring compatibility with existing Pico addons.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>Dual ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>4MB of QSPI flash supporting XiP</li>
  <li>MCP73831 charger with 215mA charging current</li>
  <li>XB6096I2S battery protector</li>
  <li>USB-C connector for power, programming, and data transfer</li>
  <li>4 pin Qw-ST (Qwiic / STEMMA QT) connector</li>
  <li>3 pin debug connector (JST-SH)</li>
  <li>2-pole JST PH battery connector, with polarity marked on the board</li>
  <li>Switch for basic input (doubles up as DFU select on boot)</li>
  <li>Power button</li>
  <li>Power, charging and user LED indicators</li>
  <li>On-board 3V3 regulator (max regulator current output 600mA)</li>
  <li>Input voltage range 3V - 5.5V</li>
  <li>Compatible with Raspberry Pi Pico packs and bases</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/picolipo">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_picolipo_4mb/</guid>
  </item><item>
    <title>PicoSystem</title>
    <link>https://circuitpython.org/board/pimoroni_picosystem/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_picosystem.jpg 300w,
               /assets/images/boards/large/pimoroni_picosystem.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_picosystem.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>An all-in-one pocket sized games console with RP2040 at its heart, ready for filling up with all the most fun pixels! PicoSystem has a nice tactile joypad and buttons, a vibrant 240x240 screen and a lipo battery, neatly wrapped up in some shiny abstract PCB art.</p>

<p>To get into bootloader mode so you can flash a new .uf2, turn your PicoSystem on whilst holding down the X button - it should then show up as a drive called RPI-RP2 on your computer.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040!</li>
  <li>ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>IPS LCD screen</li>
  <li>Joypad</li>
  <li>Buttons</li>
  <li>Lipo battery</li>
  <li>USB-C power</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of the RP2040 microcontroller are the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/picosystem">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 24 Feb 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_picosystem/</guid>
  </item><item>
    <title>Plasma 2040</title>
    <link>https://circuitpython.org/board/pimoroni_plasma2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_plasma2040.jpg 300w,
               /assets/images/boards/large/pimoroni_plasma2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_plasma2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>Swathe everything in rainbows with this all-in-one, USB-C powered controller for WS2812/Neopixel and APA102/Dotstar addressable LED strips, with RP2040 in the driving seat - just perfect for whipping up some custom mood lighting.</p>

<h2 id="features">Features</h2>

<ul>
  <li>Powered by RP2040 (Dual Arm Cortex M0+ running at up to 133Mhz with 264kB of SRAM)</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>Compatible with WS2812/Neopixel/SK6812 and APA102/Dotstar/SK9822 LEDs</li>
  <li>Sturdy screw terminals for attaching your LED strip</li>
  <li>USB-C connector for power and programming</li>
  <li>Qw/ST (Qwiic/STEMMA QT) connector</li>
  <li>Low side current sensing (accessible via ADC3)</li>
  <li>Reset, BOOT and two user buttons (the BOOT button can also be used as a user button)</li>
  <li>RGB LED</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>

<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://github.com/pimoroni/pico-circuitpython-examples/tree/main/plasma2040">Example code</a></li>
  <li><a href="https://cdn.shopify.com/s/files/1/0174/1800/files/plasma2040_schematic.pdf?v=1629994431">Schematics</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.pimoroni.com/products/plasma-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Aug 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_plasma2040/</guid>
  </item><item>
    <title>Servo 2040</title>
    <link>https://circuitpython.org/board/pimoroni_servo2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_servo2040.jpg 300w,
               /assets/images/boards/large/pimoroni_servo2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_servo2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A standalone, RP2040 powered servo controller - great for building hexapods, robot arms or other things with lots of moving parts. It has RGB LEDs/Neopixels for status updates, built in current monitoring and headers to add up to 6 analog sensors. There’s also a Qwiic/STEMMA QT connector for adding breakouts!</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040 (Dual Arm Cortex M0+ running at up to 133Mhz with 264kB of SRAM)</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>18 sets of header pins for connecting 3 pin hobby servos</li>
  <li>6 addressable RGB LEDs/Neopixels</li>
  <li>6 sets of header pins for connecting analog sensors</li>
  <li>Onboard voltage and current sensing</li>
  <li>Reset and BOOT button (the BOOT button can also be used as a user button)</li>
  <li>USB-C connector for programming and power (3A max)</li>
  <li>Screw terminals for supplying additional power (with reverse polarity protection) (10A max continuous current)</li>
  <li>Qw/ST (Qwiic/STEMMA QT) connector</li>
</ul>

<h2 id="about-rp2040">About RP2040</h2>
<p>Raspberry Pi’s RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of RP2040 is the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/servo-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_servo2040/</guid>
  </item><item>
    <title>Tiny 2040 (8MB)</title>
    <link>https://circuitpython.org/board/pimoroni_tiny2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_tiny2040.jpg 300w,
               /assets/images/boards/large/pimoroni_tiny2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_tiny2040.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A postage stamp sized RP2040 development board with a USB-C connection, perfect for portable projects, wearables, and embedding into devices. Tiny 2040 comes with 8MB of QSPI (XiP) flash on board so it can handle projects small and large with ease.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>USB-C connector for power, programming, and data transfer</li>
  <li>8MB of QSPI flash supporting XiP</li>
  <li>User controllable RGB LED</li>
  <li>Twelve IO pins (including four 12-bit ADC channels)</li>
  <li>Switch for basic input (doubles up as DFU select on boot)</li>
  <li>On-board 3V3 regulator (max regulator current output 300mA)</li>
  <li>Input voltage range 3V - 5.5V</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of the RP2040 microcontroller are the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/tiny-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 24 Feb 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_tiny2040/</guid>
  </item><item>
    <title>Tiny 2040 (2MB)</title>
    <link>https://circuitpython.org/board/pimoroni_tiny2040_2mb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pimoroni_tiny2040_2mb.jpg 300w,
               /assets/images/boards/large/pimoroni_tiny2040_2mb.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pimoroni_tiny2040_2mb.jpg" alt="Image of Board" loading="lazy">
<p>By Pimoroni</p> <p>A postage stamp sized RP2040 development board with a USB-C connection, perfect for portable projects, wearables, and embedding into devices. Tiny 2040 comes with 2MB of QSPI (XiP) flash on board so it can handle projects small and large with ease.</p>

<h2 id="features">Features</h2>
<ul>
  <li>Powered by RP2040</li>
  <li>ARM Cortex M0+ running at up to 133Mhz</li>
  <li>264kB of SRAM</li>
  <li>USB-C connector for power, programming, and data transfer</li>
  <li>2MB of QSPI flash supporting XiP</li>
  <li>User controllable RGB LED</li>
  <li>Twelve IO pins (including four 12-bit ADC channels)</li>
  <li>Switch for basic input (doubles up as DFU select on boot)</li>
  <li>On-board 3V3 regulator (max regulator current output 300mA)</li>
  <li>Input voltage range 3V - 5.5V</li>
</ul>

<h2 id="about-the-rp2040">About the RP2040</h2>
<p>The RP2040 microcontroller is a dual core ARM Cortex M0+ running at up to 133Mhz. It bundles in 264kB of SRAM, 30 multifunction GPIO pins (including a four channel 12-bit ADC), a heap of standard peripherals (I2C, SPI, UART, PWM, clocks, etc), and USB support.</p>

<p>One very exciting feature of the RP2040 microcontroller are the programmable IOs which allow you to execute custom programs that can manipulate GPIO pins and transfer data between peripherals - they can offload tasks that require high data transfer rates or precise timing that traditionally would have required a lot of heavy lifting from the CPU.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.pimoroni.com/products/tiny-2040">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 01 Dec 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pimoroni_tiny2040_2mb/</guid>
  </item><item>
    <title>pIRkey</title>
    <link>https://circuitpython.org/board/pirkey_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pirkey_m0.jpg 300w,
               /assets/images/boards/large/pirkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pirkey_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The pIRkey adds an IR remote receiver to any computer, laptop, tablet…any computer or device with a USB port that can use a keyboard. This little board slides into any USB A port, and shows up as an every-day USB keyboard. The onboard ATSAMD21 microcontroller listens for IR remote signals and converts them to keypresses, mouse movements, or even USB serial output.</p>

<p>Infrared is a favorite wireless protocol - no antennas, certifications, pairings, passwords, or special tools required. Works everywhere in the world and very intuitive - everyone’s got an IR remote in their home.</p>

<p>The <strong>pIRkey</strong> is an improvement on Adafruit’s original IRkey product, by adding a <strong>p</strong> for <strong>python</strong>. Now with CircuitPython being available for the tiny ATSAMD21E processor, it’s swapped in for the ATtiny85, giving a huge boost in power and a working Python interpreter on board as well. This means it is easy to reprogram, customize or adapt it to whatever Infrared-reading needs you may have.</p>

<p>When you plug it in, the pIRkey shows up as a triple device: USB disk drive to store code, USB serial for debugging and Python interactive command line, and USB keyboard/mouse that can transmit keypresses or mouse movements.</p>

<p>By default it ships with simple example code to read NEC remotes but <strong>you can use <em>any</em> remote that has about 38KHz output frequency which is the vast majority of remote controls</strong>. CircuitPython makes this all very easy to customize and adapt to your own needs.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pirkey-python-programmable-infrared-usb-adapter/">pIRkey Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3364">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 11 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pirkey_m0/</guid>
  </item><item>
    <title>Pitaya Go</title>
    <link>https://circuitpython.org/board/pitaya_go/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pitaya_go.jpg 300w,
               /assets/images/boards/large/pitaya_go.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pitaya_go.jpg" alt="Image of Board" loading="lazy">
<p>By MakerDiary</p> <p>BLE and Wifi board in a small for factor.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/products/pitaya-go">MakerDiary</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 10 May 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pitaya_go/</guid>
  </item><item>
    <title>PYB Nano v2</title>
    <link>https://circuitpython.org/board/pyb_nano_v2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyb_nano_v2.jpg 300w,
               /assets/images/boards/large/pyb_nano_v2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyb_nano_v2.jpg" alt="Image of Board" loading="lazy">
<p>By Elecrow</p> <p>DETAILS</p>

<p>Although the PYB Nano board is small, it contains all the features of MicroPython. It is an ideal development board for beginners to learn more about MicroPython. It can be a well cost choice for you, for the price is low, but it supports most features and functions of MicroPython. The PYB Nano has accelerometer, the data of sport can be read directly.
It is convenient to extend features via I2C, SPI, UART and other interfaces. By connecting various sensors, LCD displays, OLED, GPS module and so on, you can DIY some interesting projects.</p>

<p><strong>Features:</strong></p>
<ul>
  <li>Supports microUSB.</li>
  <li>Compatible with Pyboard development board.</li>
  <li>Supports 2 UART, 3 I2C, 3 SPI, 10 ADC and RTC.</li>
  <li>It allows two power input type, power by battery or USB.</li>
  <li>The 4 LED on the board support luminance regulation function.</li>
  <li>8M flash</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.elecrow.com/micropython-development-board-pyb-nano-compatible-with-python.html">Elecrow</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 09 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyb_nano_v2/</guid>
  </item><item>
    <title>PyBadge</title>
    <link>https://circuitpython.org/board/pybadge/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pybadge.jpg 300w,
               /assets/images/boards/large/pybadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pybadge.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Adafruit PyBadge an all-in-one compact dev board programmable in CircuitPython. Full of features squeezed onto a 3 3⁄8 × 2 1⁄8 inch rounded credit card sized rectangle. It’s a perfect wearable badge, but can be used for many projects.</p>

<p>The PyBadge is powered by our favorite microcontroller, the ATSAMD51, with 512KB of flash and 192KB of RAM. There is an additional 2 MB of QSPI flash for file storage, handy for images, fonts, sounds, or game assets.</p>

<p>On the front, there is a 1.8” 160x128 color TFT display with dimmable backlight. There is fast DMA support for drawing, so updates are incredibly fast. There are also 8 silicone-top buttons: they are clicky but have a soft button top so they’re nice and grippy. The buttons are arranged to mimic a gaming handheld, with a d-pad, 2 menu-select buttons and 2 fire-action buttons. There are also 5 NeoPixel LEDs to dazzle or track activity.</p>

<p>On the back, there is a full Feather-compatible header socket set, so you can plug in any FeatherWing to expand the capabilities of the PyBadge. There are also 3 STEMMA connectors - two 3-pin with ADC/PWM capability and one 4-pin that connects to I2C - you can use this for Grove sensors as well.</p>

<p>For built-in sensors, there is a light sensor that points out the front, and a 3-axis accelerometer that can detect taps and free-fall. To make bleeps and bloops, there’s a built in buzzer-speaker. For projects where you need more volume, you can plug in an 8 ohm speaker.</p>

<p>You can power the PyBadge from any of Adafruit’s LiPoly batteries, but <a href="https://www.adafruit.com/category/574">this 400mAh one</a> is suggested. An on-off switch will save battery power when not in use. Or power the board from the Micro USB port - it will also charge the battery if one is attached.</p>

<p><a href="https://youtu.be/n2rzrYRAPYI?t=762" title="PyBadge"><img src="http://img.youtube.com/vi/n2rzrYRAPYI/0.jpg" alt="PyBadge" /></a></p>

<p>There is a variant on the Adafruit PyBadge, the Adafruit PyBadge LC, which has a subset of the PyBadge features.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pybadge">PyBadge Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4200/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4200">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pybadge/</guid>
  </item><item>
    <title>PyBadge AirLift</title>
    <link>https://circuitpython.org/board/pybadge_airlift/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pybadge_airlift.jpg 300w,
               /assets/images/boards/large/pybadge_airlift.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pybadge_airlift.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The PyBadge AirLift is coming soon from Adafruit, check out the weekly “Top Secret” segment on ASK AN ENGINEER or the upcoming new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pybadge_airlift/</guid>
  </item><item>
    <title>Pyboard</title>
    <link>https://circuitpython.org/board/pyboard_v11/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyboard_v11.jpg 300w,
               /assets/images/boards/large/pyboard_v11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyboard_v11.jpg" alt="Image of Board" loading="lazy">
<p>By Damien George</p> <p>The pyboard is a compact and powerful electronics development board that runs MicroPython. It connects to your PC over USB, giving you a USB flash drive to save your Python scripts, and a serial Python prompt (a REPL) for instant programming. Requires a micro USB cable, and will work with Windows, Mac and Linux.</p>

<p>There are 3 main ways to control the pyboard:</p>

<ul>
  <li><strong>REPL:</strong> Connecting to your PC via USB, the board appears as a USB virtual comms port (CDC VCP) and you can use any serial program to connect and get a Python REPL prompt. This allows you to instantly type and execute Python commands, just like you would when running Python on your PC. You can also redirect the REPL to any of the UARTs on the pyboard.</li>
  <li><strong>Remote script:</strong> You can change from REPL to raw REPL mode by sending ctrl-A, and then in raw REPL mode you can send an arbitrary Python script to the board for it to execute immediately. A Python script is available which makes using this mode very simple: you just run python pyboard.py script_to_run.py and this will execute script_to_run.py on the pyboard, returning any output.</li>
  <li><strong>From file:</strong> The pyboard has a small, built-in filesystem which lives in part of the flash memory of the microcontroller. It also has an SD card slot if you want to extend the available storage. When you connect the pyboard to your PC, it appears as a USB flash storage device and you can access (mount) the internal filesystem and the SD card this way. If you copy a Python script to the filesystem and call it main.py then the board will execute this script when it starts up. This way you can run scripts without being connected to a PC.</li>
</ul>

<p><strong>Main features of the hardware:</strong></p>
<ul>
  <li>STM32F405RG microcontroller</li>
  <li>168 MHz Cortex M4 CPU with hardware floating point</li>
  <li>1024KiB flash ROM and 192KiB RAM</li>
  <li>Micro USB connector for power and serial communication</li>
  <li>Micro SD card slot, supporting standard and high capacity SD cards</li>
  <li>3-axis accelerometer (MMA7660)</li>
  <li>Real time clock with optional battery backup</li>
  <li>24 GPIO on left and right edges and 5 GPIO on bottom row, plus LED and switch GPIO available on bottom row</li>
  <li>3x 12-bit analog to digital converters, available on 16 pins, 4 with analog ground shielding</li>
  <li>2x 12-bit digital to analog (DAC) converters, available on pins X5 and X6</li>
  <li>4 LEDs (red, green, yellow and blue)</li>
  <li>1 reset and 1 user switch</li>
  <li>On-board 3.3V LDO voltage regulator, capable of supplying up to 300mA, input voltage range 3.6V to 10V</li>
  <li>DFU bootloader in ROM for easy upgrading of firmware</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2390">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyboard_v11/</guid>
  </item><item>
    <title>PyCubedv04</title>
    <link>https://circuitpython.org/board/pycubed/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pycubed.jpg 300w,
               /assets/images/boards/large/pycubed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pycubed.jpg" alt="Image of Board" loading="lazy">
<p>By PyCubed.org</p> <h3 id="-double-check-the-your-pycubed-board-version-before-updating-firmware">⭐ Double-check the your PyCubed board version before updating firmware.</h3>

<p>PyCubed is an open-source, radiation-tested small satellite framework programmable entirely in CircuitPython. Capable of all standard operating functions a small satellite might need, the PyCubed mainboard provides University and hobbyist teams an entirely open-source and sate-of-the-art hardware and software avionics solution for their satellite missions without having to spend tens of thousands of dollars for antiquated commercial products.</p>

<p>Yet PyCubed’s greatest value is its ease of programming &amp; immense documentation. With nearly 100 detailed write-ups and tutorials, PyCubed’s online resources are available to everyone and even include a step-by-step guide that walks you from unboxing and LED blinking all the way through full-featured mission software examples.</p>

<h2 id="tutorials-and-resources">Tutorials and Resources</h2>
<ul>
  <li><a href="https://pycubed.org">About</a></li>
  <li><a href="https://pycubed.org/quickstart">Quick Start</a></li>
  <li><a href="https://pycubed.org/resources">All PyCubed Resources</a></li>
  <li><a href="https://pycubed.org/forums">Forums</a></li>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pycubed/</guid>
  </item><item>
    <title>PyCubedv04 w/MRAM</title>
    <link>https://circuitpython.org/board/pycubed_mram/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pycubed.jpg 300w,
               /assets/images/boards/large/pycubed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pycubed.jpg" alt="Image of Board" loading="lazy">
<p>By PyCubed.org</p> <h3 id="-double-check-the-your-pycubed-board-version-before-updating-firmware">⭐ Double-check the your PyCubed board version before updating firmware.</h3>

<p>PyCubed is an open-source, radiation-tested small satellite framework programmable entirely in CircuitPython. Capable of all standard operating functions a small satellite might need, the PyCubed mainboard provides University and hobbyist teams an entirely open-source and sate-of-the-art hardware and software avionics solution for their satellite missions without having to spend tens of thousands of dollars for antiquated commercial products.</p>

<p>Yet PyCubed’s greatest value is its ease of programming &amp; immense documentation. With nearly 100 detailed write-ups and tutorials, PyCubed’s online resources are available to everyone and even include a step-by-step guide that walks you from unboxing and LED blinking all the way through full-featured mission software examples.</p>

<h2 id="tutorials-and-resources">Tutorials and Resources</h2>
<ul>
  <li><a href="https://pycubed.org">About</a></li>
  <li><a href="https://pycubed.org/quickstart">Quick Start</a></li>
  <li><a href="https://pycubed.org/resources">All PyCubed Resources</a></li>
  <li><a href="https://pycubed.org/forums">Forums</a></li>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 07 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pycubed_mram/</guid>
  </item><item>
    <title>PyCubedv05 w/MRAM</title>
    <link>https://circuitpython.org/board/pycubed_mram_v05/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pycubed_v05.jpg 300w,
               /assets/images/boards/large/pycubed_v05.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pycubed_v05.jpg" alt="Image of Board" loading="lazy">
<p>By PyCubed.org</p> <h3 id="-double-check-the-your-pycubed-board-version-before-updating-firmware">⭐ Double-check the your PyCubed board version before updating firmware.</h3>

<p>PyCubed is an open-source, radiation-tested small satellite framework programmable entirely in CircuitPython. Capable of all standard operating functions a small satellite might need, the PyCubed mainboard provides University and hobbyist teams an entirely open-source and sate-of-the-art hardware and software avionics solution for their satellite missions without having to spend tens of thousands of dollars for antiquated commercial products.</p>

<p>Yet PyCubed’s greatest value is its ease of programming &amp; immense documentation. With nearly 100 detailed write-ups and tutorials, PyCubed’s online resources are available to everyone and even include a step-by-step guide that walks you from unboxing and LED blinking all the way through full-featured mission software examples.</p>

<h2 id="tutorials-and-resources">Tutorials and Resources</h2>
<ul>
  <li><a href="https://pycubed.org">About</a></li>
  <li><a href="https://pycubed.org/quickstart">Quick Start</a></li>
  <li><a href="https://pycubed.org/resources">All PyCubed Resources</a></li>
  <li><a href="https://pycubed.org/forums">Forums</a></li>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 12 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pycubed_mram_v05/</guid>
  </item><item>
    <title>PyCubedv05</title>
    <link>https://circuitpython.org/board/pycubed_v05/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pycubed_v05.jpg 300w,
               /assets/images/boards/large/pycubed_v05.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pycubed_v05.jpg" alt="Image of Board" loading="lazy">
<p>By PyCubed.org</p> <h3 id="-double-check-the-your-pycubed-board-version-before-updating-firmware">⭐ Double-check the your PyCubed board version before updating firmware.</h3>

<p>PyCubed is an open-source, radiation-tested small satellite framework programmable entirely in CircuitPython. Capable of all standard operating functions a small satellite might need, the PyCubed mainboard provides University and hobbyist teams an entirely open-source and sate-of-the-art hardware and software avionics solution for their satellite missions without having to spend tens of thousands of dollars for antiquated commercial products.</p>

<p>Yet PyCubed’s greatest value is its ease of programming &amp; immense documentation. With nearly 100 detailed write-ups and tutorials, PyCubed’s online resources are available to everyone and even include a step-by-step guide that walks you from unboxing and LED blinking all the way through full-featured mission software examples.</p>

<h2 id="tutorials-and-resources">Tutorials and Resources</h2>
<ul>
  <li><a href="https://pycubed.org">About</a></li>
  <li><a href="https://pycubed.org/quickstart">Quick Start</a></li>
  <li><a href="https://pycubed.org/resources">All PyCubed Resources</a></li>
  <li><a href="https://pycubed.org/forums">Forums</a></li>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 12 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pycubed_v05/</guid>
  </item><item>
    <title>PyGamer</title>
    <link>https://circuitpython.org/board/pygamer/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pygamer.jpg 300w,
               /assets/images/boards/large/pygamer.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pygamer.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Adafruit PyGamer is an entry-level gaming handheld for DIY gaming and maybe a little retro-emulation, all in one compact dev board.</p>

<p>The PyGamer is powered by the ATSAMD51 microcontroller with 512KB of flash and 192KB of RAM. There is an additional 8 MB of QSPI flash for file storage, handy for images, fonts, sounds, or game assets.</p>

<p>On the front, you get a 1.8” 160x128 color TFT display with a dimmable backlight. There is fast DMA support for drawing - screen updates are incredibly fast. A dual-potentiometer analog stick gives great control, with easy diagonal movement, or really any direction you like.
There are also 4 square-top buttons which fit <a href="https://www.adafruit.com/product/4228">square top button caps</a> (available separately). The buttons are arranged to mimic a gaming handheld, with 2 menu-select buttons and 2 fire-action buttons. There are also 5 NeoPixel LEDs below the LCD screen to dazzle or track activity.</p>

<p>On the back, there is a full Feather-compatible header socket set to allow plugging in any FeatherWing, providinge expansion of the PyGamer’s capabilities. There are 3 integrated STEMMA connectors: two 3-pin with ADC/PWM capability and one 4-pin that connects to I2C -  this can be used for Grove sensors as well.</p>

<p>For built in sensors, there’s a light sensor that points out the front, and a 3-axis accelerometer that can detect taps and free-fall. To make bleeps and bloops, plug in any set of stereo headphones. For projects where you need more volume, you can plug in an 8 ohm speaker. The PyGamer will auto-switch to speakers when they’re plugged in.</p>

<p>You can power the PyGamer from any Adafruit LiPoly battery, but <a href="https://www.adafruit.com/product/2750">this 350mAh one</a> is suggested as it will fit into the <a href="https://www.adafruit.com/product/4238">Adafruit PyGamer acrylic case</a> (sold separately). An on-off switch will save battery power when not in use. Or power the PyGamer from the Micro USB port - it will also charge up the battery if one is attached.</p>

<p><a href="https://youtu.be/yX2SuS0rK2A?t=1167" title="PyGamer"><img src="http://img.youtube.com/vi/yX2SuS0rK2A/0.jpg" alt="PyGamer" /></a></p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pygamer">PyGamer Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4242/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4242">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pygamer/</guid>
  </item><item>
    <title>PyGamer Advance</title>
    <link>https://circuitpython.org/board/pygamer_advance/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pygamer_advance.jpg 300w,
               /assets/images/boards/large/pygamer_advance.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pygamer_advance.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The PyGamer Advance is coming soon from Adafruit, check out the weekly “Top Secret” segment on ASK AN ENGINEER or the upcoming new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pygamer_advance/</guid>
  </item><item>
    <title>PyPortal</title>
    <link>https://circuitpython.org/board/pyportal/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyportal.jpg 300w,
               /assets/images/boards/large/pyportal.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyportal.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p><strong>PyPortal</strong>, is Adafruit’s easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p><a href="http://www.youtube.com/watch?v=9meeVehRS6A" title="PyPortal"><img src="http://img.youtube.com/vi/9meeVehRS6A/0.jpg" alt="PyPortal" /></a></p>

<p>The PyPortal uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a <strong>3.2″ 320 x 240 color TFT</strong> with resistive touch screen. PyPortal includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins, 3D files for custom enclosures / lanyard fastening. Open-source hardware, and Open-Source software, and CircuitPython. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal">PyPortal Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4116/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4116">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyportal/</guid>
  </item><item>
    <title>PyPortal Pynt</title>
    <link>https://circuitpython.org/board/pyportal_pynt/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyportal_pynt.jpg 300w,
               /assets/images/boards/large/pyportal_pynt.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyportal_pynt.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>PyPortal Pynt</strong> is the little sister to our <a href="https://www.adafruit.com/product/4116">popular PyPortal</a> - zapped with a shink ray to take the design from a 3.2” diagonal down to 2.4” diagonal screen - but otherwise the same! The PyPortal is our easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p>The PyPortal uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a <strong>2.4″ diagonal 320 x 240 color TFT</strong> with resistive touch screen. PyPortal includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins, 3D files for custom enclosures / lanyard fastening. Open-source hardware, and Open-Source software, CircuitPython and Arduino. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p><strong>Compared to the original PyPortal, the Pynt does not include a ADT7410 temperature sensor. Other than the ADT7410, the Pynt’s display, processor, STEMMA conectors and WiFi have the exact same wiring as the original 3.2” PyPortal so all Arduino/CircuitPython code will run exactly the same - just smaller!</strong></p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal">PyPortal Pynt Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4465">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyportal_pynt/</guid>
  </item><item>
    <title>PyPortal Titano</title>
    <link>https://circuitpython.org/board/pyportal_titano/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyportal_titano.jpg 300w,
               /assets/images/boards/large/pyportal_titano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyportal_titano.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>PyPortal Titano</strong> is the big sister to our <a href="https://www.adafruit.com/product/4116">popular PyPortal</a> now with <em>twice as many pixels!</em> The PyPortal is our easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p>The Titano uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a bigger <strong>3.5″ diagonal 320 x 480 color TFT</strong> with resistive touch screen. Compare that to the original PyPortal’s 3.2” 240x320, we have twice as many pixels! Also, we’ve updated the connector to be a reverse-friendly <strong>USB C</strong> connector.</p>

<p><strong>Compared to the original PyPortal, the Titano does not include a ADT7410 temperature sensor. It also has a higher-resolution screen with a different controller chip. The Processor, STEMMA conectors and WiFi have the exact same wiring as the original 3.2” PyPortal so if you are running Arduino/CircuitPython code, you’ll just have to adjust your graphics and fonts for the larger resolution screen!</strong></p>

<p>The PyPortal Titano includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins. Open-source hardware, and Open-Source software, CircuitPython and Arduino. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal-titano">PyPortal Titano Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4444">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyportal_titano/</guid>
  </item><item>
    <title>PyRuler</title>
    <link>https://circuitpython.org/board/pyruler/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyruler.jpg 300w,
               /assets/images/boards/large/pyruler.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyruler.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>CircuitPython rules! The PyRuler is the first ruler to be able to run CircuitPython. It features an embedded Adafruit Trinket M0, which is a tiny microcontroller board, built around the Atmel ATSAMD21E18 powerhouse.</p>

<p>The first time you soldered up a surface mount component you may have been surprised “these are really small parts!” and there’s dozens of different names too! QFN, TDFN, SOIC, SOP, J-Lead, what do they mean and how can you tell how big they are? On the reverse side of the PyRuler, just like with our PCB ruler, you have a reference board right at your fingertips.</p>

<p>While you can use the PyRuler with the Arduino IDE, it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Trinket M0 and your code will go with you. CircuitPython is easier to code but not as low-level and complete as Arduino.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyruler">PyRuler Overview</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 15 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyruler/</guid>
  </item><item>
    <title>QT Py</title>
    <link>https://circuitpython.org/board/qtpy_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/qtpy_m0.jpg 300w,
               /assets/images/boards/large/qtpy_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/qtpy_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <blockquote>
  <p><strong>Note:</strong> If you soldered the <a href="https://www.adafruit.com/product/4763">optional SOIC-8 SPI Flash chip</a> on to your QT Py, see the <a href="../qtpy_m0_haxpress/">“QT Py Haxpress”</a> page to make use of the extra space!</p>
</blockquote>

<p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with our favorite lil chip, the SAMD21 (as made famous in our GEMMA M0 and Trinket M0 boards).</p>

<p>This time it comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>.</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible STEMMA QT connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it flat to a PCB. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>and a reset button</strong> (great for restarting your program, or entering the bootloader)</p>

<p>Runs Arduino like a dream, and can be used for basic CircuitPython projects. For more advanced usage like datalogging or file storage, solder an SOIC SPI flash chip onto the bottom pads,</p>

<ul>
  <li>Same size (20 mm x 17.5 mm), form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32-bit processor with 256 KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in RGB NeoPixel LED</li>
  <li><strong>11 GPIO pins</strong>:
    <ul>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>9 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>1 x Optional AREF on <code class="language-plaintext highlighter-rouge">A1</code></li>
      <li>9 x PWM outputs (<code class="language-plaintext highlighter-rouge">A0</code> is analog out, <code class="language-plaintext highlighter-rouge">A1</code> is not PWM capable)</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART, Hardware SPI, Hardware I2S</li>
      <li>6 x Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3 V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf">600 mA peak output</a></li>
  <li><a href="https://www.adafruit.com/product/4763">Optional SOIC-8 SPI Flash chip on bottom</a></li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
  <li>USB-C connector</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4600">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/qtpy_m0/</guid>
  </item><item>
    <title>QT Py Haxpress</title>
    <link>https://circuitpython.org/board/qtpy_m0_haxpress/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/qtpy_m0_haxpress.jpg 300w,
               /assets/images/boards/large/qtpy_m0_haxpress.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/qtpy_m0_haxpress.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>This is the <a href="https://www.adafruit.com/product/4600">QT Py board</a> with <a href="https://www.adafruit.com/product/4763">the SOIC-8 2MB Flash chip</a> soldered on. Both are in the <a href="https://adafruit.com">Adafruit shop</a>.</p>

<p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with our favorite lil chip, the SAMD21 (as made famous in our GEMMA M0 and Trinket M0 boards).</p>

<p>This time it comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>.</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible STEMMA QT connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it flat to a PCB. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>and a reset button</strong> (great for restarting your program, or entering the bootloader).</p>

<p>Runs Arduino like a dream, and can be used for basic CircuitPython projects. For more advanced usage like datalogging or file storage, solder an SOIC SPI flash chip onto the bottom pads,</p>

<ul>
  <li>Same size (20 mm x 17.5 mm), form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with 256 KB Flash and 32 KB RAM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in RGB NeoPixel LED</li>
  <li><strong>11 GPIO pins</strong>:
    <ul>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>9 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>1 x Optional AREF on <code class="language-plaintext highlighter-rouge">A1</code></li>
      <li>9 x PWM outputs (<code class="language-plaintext highlighter-rouge">A0</code> is analog out, <code class="language-plaintext highlighter-rouge">A1</code> is not PWM capable)</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART, Hardware SPI, Hardware I2S</li>
      <li>6 x Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3 V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf">600 mA peak output</a></li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
  <li>USB-C connector</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4600">Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4763">Flash Chip</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/qtpy_m0_haxpress/</guid>
  </item><item>
    <title>Pico</title>
    <link>https://circuitpython.org/board/raspberry_pi_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_pico.jpg 300w,
               /assets/images/boards/large/raspberry_pi_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_pico.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi foundation changed single-board computing when they released the Raspberry Pi computer, now they’re ready to do the same for microcontrollers with the release of the brand new <strong>Raspberry Pi Pico</strong>. This low-cost microcontroller board features a powerful new chip, the <strong>RP2040</strong>, and all the fixin’s to get started with embedded electronics projects at a stress-free price.</p>

<p>The Pico is 0.825” x 2” and can have headers soldered in for use in a breadboard or perfboard, or can be soldered directly onto a PCB with the castellated pads. There’s 20 pads on each side, with groups of general purpose input-and-output (GPIO) pins interleaved with plenty of ground pins. All of the GPIO pins are 3.3V logic, and are not 5V-safe so stick to 3V! You get a total of 26 GPIO pins, 3 of those can be analog inputs (the chip has 4 ADC but one is not broken out). There are no true analog output (DAC) pins.</p>

<p>On the slim green board is minimal circuitry to get you going: A 5V to 3.3V power supply converter, single green LED on GP25, boot select button, RP2040 chip with dual-core Cortex M0, 2 MegaBytes of QSPI flash storage, and crystal.</p>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader.</strong> What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use a PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>There is <a href="https://github.com/raspberrypi/pico-sdk">great C/C++ support</a>, unofficial (but really good) <a href="https://learn.adafruit.com/rp2040-arduino-with-the-earlephilhower-core">Arduino support</a> an official <a href="https://micropython.org/download/?mcu=rp2040">MicroPython port</a>, and a CircuitPython port!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think its the easiest way to get started</a> and it has support with most our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built in FLASH memory. Instead that is provided by the external QSPI flash chip. On this board there is 2MB, which is shared between the program its running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals</li>
  <li>2 UARTs</li>
  <li>2 SPI controllers</li>
  <li>2 I2C controllers</li>
  <li>16 PWM channels</li>
  <li>USB 1.1 controller and PHY, with host and device support</li>
  <li>8 PIO state machines</li>
</ul>

<p><a href="https://raspberrypi.org/documentation/pico/getting-started/">Click here for the Raspberry Pi documentation.</a>
<a href="https://learn.adafruit.com/getting-started-with-raspberry-pi-pico-circuitpython">Click here for Getting Started with Raspberry Pi Pico and CircuitPython.</a></p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4883">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 Jan 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberry_pi_pico/</guid>
  </item><item>
    <title>Pico W</title>
    <link>https://circuitpython.org/board/raspberry_pi_pico_w/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_pico_w.jpg 300w,
               /assets/images/boards/large/raspberry_pi_pico_w.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_pico_w.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi foundation changed single-board computing <a href="https://www.raspberrypi.org/archives/723">when they released the Raspberry Pi computer</a>, now they’re ready to do the same for microcontrollers with the release of the brand new <strong>Raspberry Pi Pico W</strong>. This low-cost microcontroller board features their powerful new chip, the <strong>RP2040</strong>, and all the fixin’s to get started with IoT embedded electronics projects at a stress-free price.</p>

<p>Raspberry Pi Pico W brings WiFi + BLE (coming soon) wireless networking to the Pico platform while retaining complete pin compatibility with its older sibling.</p>

<p><strong>Raspberry Pi Pico W</strong> is <a href="https://www.adafruit.com/product/4864">just like the classic Pico</a> but adds on-board single-band 2.4GHz wireless interfaces (802.11n) using the Infineon CYW43439 while retaining the Pico form factor. The on-board 2.4GHz wireless interface has the following features:</p>

<ul>
  <li>Wireless (802.11n), Single-band (2.4 GHz) WiFi with WPA3 and Soft Access Point supporting up to 4 clients</li>
  <li>Bluetooth Low Energy - note this isn’t supported in software yet, its just a hardware capability.</li>
  <li>The wireless interface is connected via SPI to the <a href="https://www.raspberrypi.com/documentation/microcontrollers/rp2040.html#welcome-to-rp2040">RP2040</a> microcontroller and has a micropython driver for wireless capability</li>
</ul>

<p>Due to pin limitations (the Pico brings out all the GPIO) some of the wireless interface pins are shared with the exposed pads:</p>

<ul>
  <li>The <strong>SPI CLK</strong> is shared with <strong>VSYS</strong> monitor, so only when there isn’t an SPI transaction in progress can VSYS be read via the ADC.</li>
  <li>The Infineon CYW43439 <strong>SPI DIN/DOUT</strong> and <strong>IRQ</strong> all share one pin on the RP2040. Only when an SPI transaction isn’t in progress is it suitable to check for IRQs.</li>
  <li>The interface typically runs at 33MHz.</li>
</ul>

<p>For best wireless performance, the antenna should be in free space. For instance, putting metal under or close by the antenna can reduce its performance both in terms of gain and bandwidth. Adding grounded metal to the sides of the antenna can improve the antenna’s bandwidth.</p>

<p>The Pico W is 51mm × 21mm × 1mm and can have headers soldered in for use in a breadboard or perfboard, or can be soldered directly onto a PCB with the castellated pads. There’s 20 pads on each side, with groups of general purpose input-and-output (GPIO) pins interleaved with plenty of ground pins. All of the GPIO pins are 3.3V logic, and are not 5V-safe so stick to 3V! You get a total of <strong>25 GPIO</strong> pins, <strong>3 of those can be analog inputs</strong> (the chip has 4 ADC but one is not broken out). There are no true analog output (DAC) pins.</p>

<p>On the slim green board is minimal circuitry to get you going: A 5V to 3.3V power supply converter, single green LED connected through on the wireless module, boot select button, RP2040 chip with dual-core Cortex M0, Wireless chipset with antenna, 2 MegaBytes of QSPI flash storage, and crystal.</p>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader</strong>. What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create <em>custom hardware logic and data processing blocks</em> that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use a PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. <a href="https://github.com/raspberrypi/pico-examples/tree/master/pio">Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA</a>! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="https://circuitpython.org/downloads">CircuitPython port</a>!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p><a href="https://github.com/earlephilhower/arduino-pico">For Arduino usage we recommend the Philhower Arduino core, which does not use mbed, has lots of peripherals supported, and many makers/companies have submitted board definitions.</a></p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board, there is 2MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>

<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<p><a href="https://raspberrypi.org/documentation/pico/getting-started/">Click here for the Raspberry Pi documentation.</a>
<a href="https://learn.adafruit.com/getting-started-with-raspberry-pi-pico-circuitpython">Click here for Getting Started with Raspberry Pi Pico and CircuitPython.</a></p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/5526">Adafruit</a></li>
  <li><a href="https://grobotronics.com/raspberry-pi-pico-w-wireless.html">Grobotronics</a></li>
  <li><a href="https://nettop.gr/index.php/raspberry-pi/pico/raspberry-pi-pico-kits/raspberry-pi-pico-w.html">Nettop</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 02 Oct 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/raspberry_pi_pico_w/</guid>
  </item><item>
    <title>Compute Module 4</title>
    <link>https://circuitpython.org/board/raspberrypi_cm4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm4.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm4.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p>The <strong>Raspberry Pi Compute Module 4</strong> is based on the <a href="http://www.adafruit.com/product/4297">Raspberry Pi 4 Model B</a>, but in a smaller form factor - perfect for embedding into products or projects without the bulk of a classic Raspberry Pi. You get all the computational power of Raspberry Pi 4 in a compact form factor for deeply embedded applications. The CM4 incorporates the same quad-core ARM Cortex-A72 processor, dual video output, gigabit Ethernet, UART, I2C, SPI, I2S, and a few PWM for good measure.</p>

<p>This module is available in <strong>multiple variants</strong>, with a range of RAM and eMMC Flash options, and with or without wireless connectivity. The modules are available with 1GB, 2GB, 4GB or 8GB LPDDR4-3200 SDRAM with optional storage of 8GB, 16GB or 32GB eMMC Flash. The wireless option includes 2.4GHz and 5GHz 802.11b/g/n/ac wireless LAN and Bluetooth 5.0 for BT classic and BTLE support.</p>

<h5 id="this-product-version-of-the-cm4-modules-comes-with-4gb-ram-32gb-mmc-and-wifi"><strong>This product version of the CM4 modules comes with 4GB RAM 32GB MMC, and WiFi!</strong></h5>

<p><strong>Note: We don’t include the <a href="http://www.adafruit.com/product/4787">Compute Module IO board</a>, but it’s strongly recommended!</strong></p>

<p>Compute ALL the THINGs!</p>

<p><a href="https://www.adafruit.com/product/4092">Compared to the earlier Compute Module 3+</a>, the CM4 features faster CPU cores, better multimedia, more interfacing capabilities, a range of RAM densities, and a wireless connectivity option. Instead of a DIMM socket, there are two board-to-board connectors that carry high-speed signals with ease - like multiple MIPI displays and camera ports. In addition to all the pins that supply Ethernet and SDIO and SPI and such, there’s also 28 GPIO pins, with up to 6 × UART, 6 × I2C and 5 × SPI.</p>

<p>On the video side, there are dual HDMI output, VideoCore VI graphics with OpenGL ES 3.x support, 4Kp60 hardware decode of H.265 (HEVC) video, and 1080p30 hardware encode of H.264 (AVC) video.</p>

<p>It’s great for industrial control or robotic use, digital/video signage, IoT, and AI/machine learning projects</p>

<p>Compute Module 4 introduces a brand new form factor and a compatibility break with earlier Compute Modules. Where previous modules adopted the JEDEC DDR2 SODIMM mechanical standard, with I/O signals on an edge connector, we now bring I/O signals to two high-density perpendicular connectors (one for power and low-speed interfaces, and one for high-speed interfaces).</p>

<p>This significantly reduces the overall footprint of the module on its carrier board, letting you achieve smaller form factors for your products. This version is intended for experienced developers who will be using the board for industrial and commercial applications.</p>

<p><strong>Specifications</strong></p>

<ul>
  <li>1.5GHz quad-core 64-bit ARM Cortex-A72 CPU</li>
  <li>VideoCore VI graphics, supporting OpenGL ES 3.x</li>
  <li>4Kp60 hardware decode of H.265 (HEVC) video</li>
  <li>1080p60 hardware decode, and 1080p30 hardware encode of H.264 (AVC) video</li>
  <li>Dual HDMI interfaces, at resolutions up to 4K</li>
  <li>Single-lane PCI Express 2.0 interface</li>
  <li>Dual MIPI DSI display, and dual MIPI CSI-2 camera interfaces</li>
  <li>1GB, 2GB, 4GB or 8GB LPDDR4-3200 SDRAM</li>
  <li>Optional 8GB, 16GB or 32GB eMMC Flash storage</li>
  <li>Optional 2.4GHz and 5GHz IEEE 802.11b/g/n/ac wireless LAN and Bluetooth 5.0</li>
  <li>Gigabit Ethernet PHY with IEEE 1588 support</li>
  <li>28 GPIO pins, with up to 6 × UART, 6 × I2C, and 5 × SPI</li>
</ul>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow will be available on the micro-B connector on the IO board. EMMC compute modules are not supported yet.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4982">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_cm4/</guid>
  </item><item>
    <title>Compute Module 4 IO Board</title>
    <link>https://circuitpython.org/board/raspberrypi_cm4io/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberrypi_cm4io.jpg 300w,
               /assets/images/boards/large/raspberrypi_cm4io.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberrypi_cm4io.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p>Exposing every interface from Raspberry Pi Compute Module 4, the Compute Module 4 IO Board provides a development platform and reference base-board design for the most powerful Compute Module yet.</p>

<p>The Compute Module 4 IO Board is a development board for those who wish to make use of the Raspberry Pi in a more flexible form factor, intended for industrial applications.</p>

<p>While the Compute Module contains the guts of a Raspberry Pi 4 (1.2GHz, quad-core Broadcom BCM2837 processor), it does not have any easy-to-use ports for development. That’s where this IO Board comes in!</p>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow will be available on the micro-B connector on the IO board. EMMC compute modules are not supported yet.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4787">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 28 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_cm4io/</guid>
  </item><item>
    <title>Pi 4 Model B</title>
    <link>https://circuitpython.org/board/raspberrypi_pi4b/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_4b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_4b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_4b.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p>The Raspberry Pi 4 Model B is the newest Raspberry Pi computer made, and the Pi Foundation knows you can always make a good thing better! And what could make the Pi 4 better than the 3? How about a faster processor, USB 3.0 ports, and updated Gigabit Ethernet chip with PoE capability? Good guess - that’s exactly what they did!</p>

<p>The Raspberry Pi 4 is the latest product in the Raspberry Pi range, boasting an updated 64-bit quad core processor running at 1.4GHz with built-in metal heatsink, USB 3 ports, dual-band 2.4GHz and 5GHz wireless LAN, faster (300 mbps) Ethernet, and PoE capability via a separate PoE HAT.</p>

<ul>
  <li>Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li>
  <li>1GB, 2GB or 4GB LPDDR4-2400 SDRAM (depending on model)</li>
  <li>2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE</li>
  <li>Gigabit Ethernet</li>
  <li>2 USB 3.0 ports; 2 USB 2.0 ports.</li>
  <li>Raspberry Pi standard 40 pin GPIO header (fully backwards compatible with previous boards)</li>
  <li>2 × micro-HDMI ports (up to 4kp60 supported)</li>
  <li>2-lane MIPI DSI display port</li>
  <li>2-lane MIPI CSI camera port</li>
  <li>4-pole stereo audio and composite video port</li>
  <li>H.265 (4kp60 decode), H264 (1080p60 decode, 1080p30 encode)</li>
  <li>OpenGL ES 3.0 graphics</li>
  <li>Micro-SD card slot for loading operating system and data storage</li>
  <li>5V DC via USB-C connector (minimum 3A)</li>
  <li>5V DC via GPIO header (minimum 3A)</li>
  <li>Power over Ethernet (PoE) enabled (requires separate PoE HAT)</li>
  <li>Operating temperature: 0 – 50 degrees C ambient</li>
  <li>A good quality 2.5A power supply can be used if downstream USB peripherals consume less than 500mA in total.</li>
</ul>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow is available over the USB-C connector used for power-only usually. A powered USB hub is needed to power the Pi while allowing USB data to also connect.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4295">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 28 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_pi4b/</guid>
  </item><item>
    <title>Zero</title>
    <link>https://circuitpython.org/board/raspberrypi_zero/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zero.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p>At first glance, the Pi Zero isn’t much.  It just looks like a slimmed down version of the Raspberry Pi we know and love.  But when we started to think of the possibilities - and what a well-chosen set of accessories could add - we realized the appeal.  And then we saw the price…could it be true? Yes!</p>

<p>This is the slimmest, most pared down Raspberry Pi to date.  It’s kind of like the little cousin to the Pi 2 - with just a micro SD card slot, a mini HDMI port, two micro USB ports (one for power, one for USB), and 512MB of RAM. It has a single-core 1 GHz processor chip, similar to the Pi A+ and B+.</p>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow is available over the micro-B USB connector labeled “USB”.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2885">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 14 Feb 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_zero/</guid>
  </item><item>
    <title>Zero 2 W</title>
    <link>https://circuitpython.org/board/raspberrypi_zero2w/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zero_2_w.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero_2_w.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zero_2_w.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p><strong>Raspberry Pi Zero 2 W</strong> is the latest product in Raspberry Pi’s most affordable range of single-board computers. The successor to the breakthrough Raspberry Pi Zero W, <strong>Raspberry Pi Zero 2 W</strong> is a form factor–compatible drop-in replacement for the original board.</p>

<p>The board incorporates a quad-core 64-bit Arm Cortex-A53 CPU, clocked at 1GHz. At its heart is a Raspberry Pi RP3A0 system-in-package (SiP), integrating a Broadcom BCM2710A1 die with 512MB of LPDDR2 SDRAM. The upgraded processor provides Raspberry Pi Zero 2 W with 40% more single-threaded performance, and five times more multi-threaded performance, than the original single-core Raspberry Pi Zero. Raspberry Pi Zero 2 W offers 2.4GHz 802.11 b/g/n wireless LAN and Bluetooth 4.2, along with support for Bluetooth Low Energy (BLE), and modular compliance certification.</p>

<p>The board has a microSD card slot, a CSI-2 camera connector, a USB On-The-Go (OTG) port, and an unpopulated footprint for a HAT-compatible 40-pin GPIO header. It is powered via a micro USB socket. Video output is via a mini HDMI port; composite video output can easily be made available via test points, if needed. Sharing the same form factor as the original Raspberry Pi Zero, Raspberry Pi Zero 2 W fits inside most existing Raspberry Pi Zero cases.</p>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow is available over the micro-B USB connector labeled “USB”.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/5291">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 28 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_zero2w/</guid>
  </item><item>
    <title>Zero W</title>
    <link>https://circuitpython.org/board/raspberrypi_zero_w/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zero_w.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero_w.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zero_w.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>NOTE</strong>: This build is alpha quality and is for experimental use. It is <a href="https://github.com/adafruit/circuitpython/labels/broadcom">missing features and has known issues</a>.</p>

<p><strong>Raspberry Pi Zero W</strong> Is the first small size (Wifi enabled) Raspberry Pi’s single-board computers. This is the predecessor of <strong>Raspberry Pi Zero 2 W</strong> with the same form factor.</p>

<p>The board incorporates a Broadcom single-core ARMv6 CPU (BCM2835) clocked at 1GHz and has 512MB of RAM.</p>

<p>The board has a microSD card slot, a CSI-2 camera connector, a USB On-The-Go (OTG) port, and an unpopulated footprint for a HAT-compatible 40-pin GPIO header. It is powered via a micro USB socket. Video output is via a mini HDMI port; composite video output can easily be made available via test points, if needed.</p>

<h2 id="circuitpython">CircuitPython</h2>

<p>These downloads are for CircuitPython standalone on the Raspberry Pi (not Blinka). There is no underlying operating system. It is in early development.</p>

<p>This image could work on non Wifi Pi Zero but was primarly develop for the Wifi version.</p>

<p>After installing the disk image on an SD card, the normal CircuitPython USB workflow is available over the micro-B USB connector labeled “USB”.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3400">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 06 Jan 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberrypi_zero_w/</guid>
  </item><item>
    <title>MDBT50Q-DB-40</title>
    <link>https://circuitpython.org/board/raytac_mdbt50q-db-40/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raytac_mdbt50q-db-40.jpg 300w,
               /assets/images/boards/large/raytac_mdbt50q-db-40.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raytac_mdbt50q-db-40.jpg" alt="Image of Board" loading="lazy">
<p>By Raytac Corporation</p> <p>MDBT50Q-DB demo board is designed for quick testing and debugging without building your own board. The board is only available with MDBT50Q-1MV2 (Chip Antenna) module.</p>

<p>Raytac nRF52840 module spectrum covers MDBT50Q-1MV2, MDBT50Q-P1MV2 and MDBT50Q-U1MV2 series with Chip Antenna, PCB Antenna and u.FL connector for External Antenna option for selection.</p>

<ul>
  <li>Module Demo Board built by MDBT50Q-1MV2</li>
  <li>Nordic nRF52840 SoC Solution Version: 2</li>
  <li>A recommended 3rd-party module by Nordic Semiconductor.</li>
  <li>BT5.1 &amp; BT5 Bluetooth Specification Certified</li>
  <li>Supports BT5 Long Range Feature</li>
  <li>Certifications: FCC, IC, CE, Telec (MIC), KC, SRRC, NCC, RCM, WPC</li>
  <li>32-bit ARM® Cortex™ M4F CPU</li>
  <li>1MB Flash Memory / 256kB RAM</li>
  <li>RoHS &amp; Reach Compliant.</li>
  <li>48 GPIO</li>
  <li>Chip Antenna</li>
  <li>Interfaces: SPI, UART, I2C, I2S, PWM, ADC, NFC, and USB</li>
  <li>Highly flexible multiprotocol SoC ideally suited for Bluetooth® Low Energy, ANT+, Zigbee, Thread (802.15.4) ultra low-power wireless applications.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raytac.com/product/ins.php?index_id=81">Raytac Corporation</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/raytac_mdbt50q-db-40/</guid>
  </item><item>
    <title>MDBT50Q-RX</title>
    <link>https://circuitpython.org/board/raytac_mdbt50q-rx/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raytac_mdbt50q-rx.jpg 300w,
               /assets/images/boards/large/raytac_mdbt50q-rx.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raytac_mdbt50q-rx.jpg" alt="Image of Board" loading="lazy">
<p>By Raytac Corporation</p> <p>This USB dongle/key type thing is a little unusual - it <em>isn’t</em> a BLE adapter that you plug into a computer to add wireless capability. (If you do want something like that, our <a href="https://www.adafruit.com/products/1327">Bluetooth 4.0 USB Module</a> will do the job nicely.) Instead, this is basically a minimal nRF52840 wireless microcontroller dev board on a stick. You can program it in Arduino or CircuitPython and it’s completely standalone. This could be useful for some situations where you want to have a standalone BLE device that communicates with a USB host <em>but without dealing with the operating system’s BLE stack</em>.</p>

<p>Each MDBT50Q-RX dongle comes pre-programmed with the TinyUF2 bootloader, which makes loading code onto it very easy (note that only the ones from Adafruit do this, its a special-order item). To enter the bootloader, hold down the dongle’s button while inserting into USB. The button can be used in Arduino/CircuitPython as an input. There’s also a single blue LED indicator. It’s all very simple but we could see situations where perhaps this acts as a beacon, a OS-less BLE interface or bridge, or a compact development board for experimenting with the nRF52840.</p>

<p>The blue LED is connected to P1.13, set that pin to be an output and pull low to turn on the LED</p>

<p>The button is connected to P0.15, set that pin to be an input with an internal pullup - when pressed the pin will go low.</p>

<p>Of course the best way to program these chips is with the Nordic SDK. This chip also has <a href="https://github.com/adafruit/Adafruit_nRF52_Arduino">some basic Arduino support</a>, <a href="https://github.com/adafruit/circuitpython/tree/main/ports/nrf">CircuitPython support</a>, and is <a href="https://mynewt.apache.org/latest/tutorials/blinky/nRF52.html">supported by MyNewt</a>.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/5199">Adafruit</a></li>
  <li><a href="https://www.raytac.com/product/ins.php?index_id=89">Raytac Corporation</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 12 Aug 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/raytac_mdbt50q-rx/</guid>
  </item><item>
    <title>Robo HAT MM1 M4</title>
    <link>https://circuitpython.org/board/robohatmm1_m4/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/robohatmm1.jpg 300w,
               /assets/images/boards/large/robohatmm1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/robohatmm1.jpg" alt="Image of Board" loading="lazy">
<p>By Robotics Masters</p> <p>The Robotics Masters Robo HAT MM1 is an open source robotics controller board for Raspberry Pi. It is education focused but works in many applications. The Robo HAT provides all the hardware you need in one simple, easy-to-use form factor. It removes the initial barriers to starting any robotics project.</p>

<p>With support for Adafruit CircuitPython and other libraries the Robo HAT is able to act as a single solution for all projects great and small.</p>

<p>The Robo HAT MM1 removes the need for buying lots of individual components by including them on the board. It can act as a PWM driver, provide on-board power through voltage regulators, and measure movement with the on-board IMU - all at the same time.</p>

<p>The wide compatibility with many open source software platforms such as CircuitPython means you can use all existing software for sensors while creating your project in the way that works best for you. The hardware schematics and software are fully open source.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/robotics-masters/robo-hat-mm1">Robo HAT MM1 - Crowd Supply</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 27 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/robohatmm1_m4/</guid>
  </item><item>
    <title>SAM32</title>
    <link>https://circuitpython.org/board/sam32/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sam32.jpg 300w,
               /assets/images/boards/large/sam32.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sam32.jpg" alt="Image of Board" loading="lazy">
<p>By Max Holliday</p> <p>An open source “swiss army knife” for hardware and IoT applications. This board is designed for quickly prototyping a wide range of makerspace, university, and science-related projects.</p>

<p>The SAM32 features a 120 MHz SAMD51 main processer, an ESP32 WROOM co-processor, native USB handling via CircuitPython, micro SD card socket, LiPo battery charging, 42 available I/O pins, a NeoPixel, and pin compatibility with Adafruit Feather Wings.</p>

<h2 id="resources">Resources</h2>
<p>SAM32 - <a href="https://github.com/maholli/SAM32">GitHub</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 05 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sam32/</guid>
  </item><item>
    <title>SAM E54 Xplained Pro</title>
    <link>https://circuitpython.org/board/same54_xplained/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/same54_xplained.jpg 300w,
               /assets/images/boards/large/same54_xplained.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/same54_xplained.jpg" alt="Image of Board" loading="lazy">
<p>By Microchip</p> <p>The SAM E54 Xplained Pro evaluation kit is a hardware platform for evaluating the ATSAME54P20A microcontroller (MCU). Supported by the Studio integrated development platform, the kit provides easy access to the features of the ATSAME54P20A and explains how to integrate the device into a custom design.</p>

<p>In addition to ATSAME54P20A, the SAM E54 Xplained Pro Evaluation kit can also be used for evaluating the ATSAMD51P20A microcontroller as both MCUs are identical in pin count and peripherals except that ATSAMD51P20A does not have Ethernet and CAN FD.</p>

<p>The Xplained Pro MCU series evaluation kits include an on-board Embedded Debugger, eliminating the need for external tools to program or debug the ATSAME54P20A. The kits offers additional peripherals to extend the features of the board and ease the development of custom designs.</p>

<p>Note: Not all peripherals are supported by CircuitPython.  The Ethernet, CAN, and Q-Touch button are not supported by CircuitPython at this time.  Only 16MB (128MiB) of the QSPI flash is accessible via the CIRCUITPY drive.</p>

<p>CircuitPython requires that the board be flashed with the UF2 bootloader.  This can be done using the second USB connector, which provides a debug interface.  After this has been done once, CircuitPython can be installed and updated in the usual way using the UF2 bootloader, or by using the debug USB connector.</p>

<ul>
  <li>ATSAME54P20A microcontroller</li>
  <li>Embedded Debugger</li>
  <li>Digital I/O - Two mechanical buttons (user and reset button). One Atmel QTouch button. One yellow user LED. Three Xplained Pro extension headers.</li>
  <li>256Mb QSPI Flash</li>
  <li>ATECC508 CryptoAuthentication™ device</li>
  <li>AT24MAC402 serial EEPROM with EUI-48™ MAC address</li>
  <li>Ethernet - RJ45 connector with built-in magnetics, KSZ8091RNA PHY, 10Base-T/100Base-TX IEEE 802.3 compliant Ethernet tranceiver</li>
  <li>SD/SDIO card connector</li>
  <li>Parallell Capture Controller header (ArduCAM compatible)</li>
  <li>ATA6561 CAN transceiver</li>
  <li>Backup SuperCapacitor</li>
  <li>32.768kHz &amp; 12MHz crystal</li>
  <li>Debug connectors - 10-pin Cortex Debug Connector with SWD, 20-pin Cortex Debug + ETM Connector with four bit trace.</li>
  <li>Supported with application examples in Atmel START</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.microchipdirect.com/product/search/all/ATSAME54-XPRO">Microchip</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 28 Jun 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/same54_xplained/</guid>
  </item><item>
    <title>Seeed Studio XIAO ESP32C3</title>
    <link>https://circuitpython.org/board/seeed_xiao_esp32c3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/seeed_xiao_esp32c3.jpg 300w,
               /assets/images/boards/large/seeed_xiao_esp32c3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/seeed_xiao_esp32c3.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <p>Seeed Studio XIAO ESP32C3 featuring <strong>ESP32C3</strong> carries a complete Wi-Fi system along with Bluetooth Low Energy function. With its exquisite design and <strong>WiFi+BT</strong> ability, it’s perfect for various <strong>IoT controlling scenarios</strong> and <strong>complex carriable applications</strong>.</p>

<h3 id="features">Features</h3>

<ul>
  <li>
    <p><strong>Outstanding RF performance:</strong> Powerful ESP32-C3 SoC and U.FL antenna provided that supports WiFi/Bluetooth connection over 100m.</p>
  </li>
  <li>
    <p><strong>Thumb-size Design:</strong> 21 x 17.5mm overall dimension, portable and lightweight.</p>
  </li>
  <li>
    <p><strong>Low power consumption:</strong> Lowest as 44 μA (deep sleep mode), with 4 working modes available.</p>
  </li>
  <li>
    <p><strong><em>*Onboard battery charge IC:*</em></strong> Supports battery charging, great for various wearable scenarios and wireless IoT applications.</p>
  </li>
  <li>
    <p><strong>Ready for productization:</strong> Single-sided components design, easily integrated into other boards and Seeed provides <a href="https://www.seeedstudio.com/fusion.html">Fusion Service</a> for rapid production.</p>
  </li>
</ul>

<h3 id="description">Description</h3>

<p><strong>Seeed Studio XIAO ESP32C3</strong> has equipped a highly-integrated <strong>ESP32-C3 chip</strong>, built around a 32-bit RISC-V chip processor with a four-stage pipeline that operates at up to 160 MHz.</p>

<p>The board equips highly-integrated ESP32-C3 SoC. The chip has been installed with a <strong>complete 2.4GHz Wi-Fi subsystem</strong> which means it supports Station mode, SoftAP mode, SoftAP &amp; Station mode, and promiscuous mode for multiple Wi-Fi applications. It works under an <strong>ultra-low power state</strong>, also supporting features of <strong>Bluetooth 5</strong> and <strong>Bluetooth mesh</strong>. There are 400 KB SRAM &amp; 4 MB Flash on the chip, allowing for more programming space, and bringing more possibilities to the IoT control scenarios.</p>

<p>Being a number to the Seeed Studio XIAO family, the board deservedly maintains the classic <strong>thumb-sized form-factor design</strong> and elegant <strong>productization of single-sided components mounting</strong>. Meanwhile, it has equipped with a <strong>battery charge chip</strong> and integrated circuit for enhancing its ability to carry. This board comes included with an external antenna to increase the signal strength for wireless applications. There are 11 digital I/O that can be used as PWM pins and 4 analog i/o that can be used as ADC pins. It supports UART, IIC, and SPI serial communication ports, also including IIS (Internet Information Services). Utilizing its small and exquisite hardware design and the powerful onboard chip, programming by Arduino, it will offer more ability to wearable and portable devices or other applications.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/Seeed-XIAO-ESP32C3-p-5431.html">Seeed Studio</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/seeed_xiao_esp32c3/</guid>
  </item><item>
    <title>Seeeduino Wio Terminal</title>
    <link>https://circuitpython.org/board/seeeduino_wio_terminal/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/seeeduino_wio_terminal.jpg 300w,
               /assets/images/boards/large/seeeduino_wio_terminal.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/seeeduino_wio_terminal.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <p>Instead of being a single embedded functional module, <strong>Wio Terminal</strong> is more of a complete system equipped with Screen + Development Board + Input/Output Interface + Enclosure. Because it uses the SAMD51, it is compatible with Arduino and CircuitPython - using the same Arduino &amp; CircuitPython core we have developed here at Adafruit!</p>

<p><strong>Wio Terminal</strong> is an <strong>ATSAMD51-based</strong> microcontroller with wireless connectivity supported by <strong>Realtek RTL8720DN</strong>. Its CPU speed runs at <strong>120MHz (boost up to 200MHz)</strong>. Realtek RTL8720DN chip supports both Bluetooth and Wi-Fi providing the backbone for IoT projects. The Wio Terminal itself is equipped with a <strong>2.4” LCD Screen, onboard accelerometer (LIS3DHTR), microphone, buzzer, microSD card slot, light sensor, and infrared emitter (IR 940nm)</strong>. On top of that, it also has two x JST PH 4-pin STEMMA / Grove ports for Grove Ecosystem and 40-pin compatible GPIO for more Raspberry Pi add-ons.</p>

<p><strong>Highly Integrated Design</strong></p>
<ul>
  <li>MCU, LCD, WIFI, BT, IMU, Microphone, Buzzer, microSD Card, Configurable Buttons, Light Sensor, 5-Way Switch, Infrared Emitter (IR 940nm), Crypto-authentication Ready</li>
  <li>Well-designed enclosure with built-in magnets and two mounting holes, allowing you to set up your IoT project without hassle</li>
</ul>

<p><strong>Powerful MCU - Microchip ATSAMD51P19</strong></p>
<ul>
  <li>ARM Cortex-M4F core running at <strong>120MHz</strong> using Adafruit core support for Arduino and CircuitPython</li>
  <li><strong>4 MB</strong> External Flash, <strong>192 KB</strong> RAM</li>
  <li>Comprehensive Protocol Support</li>
  <li>SPI, I2C, I2S, ADC, DAC, PWM, UART(Serial)</li>
  <li>Built-in real-time clock RTC</li>
</ul>

<p><strong>Reliable Wireless Connectivity</strong></p>
<ul>
  <li>Powered by <strong>Realtek RTL8720DN</strong></li>
  <li>Dual Band 2.4Ghz / 5Ghz Wi-Fi (802.11 a/b/g/n)</li>
  <li>BLE / BLE 5.0</li>
</ul>

<p><strong>USB OTG Support</strong></p>
<ul>
  <li>Accessible Devices (as USB-Host): read data or signals from a mouse, keyboard, MIDI devices, Xbox/PS gaming controllers, 3D printers</li>
  <li>Simulated Devices (as USB-Client): emulate a mouse, keyboard or MIDI devices to Host PC</li>
  <li>When using USB Host/Client function, you can use the 40-pin on the back of Wio Terminal for power supply. Check <a href="https://www.seeedstudio.com/blog/2020/05/19/community-project-collection-how-to-input-data-from-a-keyboard-to-wio-terminal-using-the-usb-host-function-and-tips-about-how-to-use-the-40-pin-header-for-power-supply-and-usb-serial/">here</a> for detailed instructions.</li>
</ul>

<p><strong>External Sensor Ports</strong></p>
<ul>
  <li>Two onboard multi-functional Grove ports can be used for Digital, Analog, I2C, and PWM</li>
  <li>To connect STEMMA QT sensors with Wio Terminal, please use a <a href="https://www.adafruit.com/?q=jst%20ph%204-pin">JST PH 4-pin STEMMA / Grove cable</a>.</li>
</ul>

<p><strong>Raspberry Pi 40-pin Compatible</strong></p>
<ul>
  <li>Can be mounted to a Raspberry Pi as a slave device</li>
  <li>Raspberry Pi’s HAT can be used with an adapter cable</li>
</ul>

<p><strong>Software Support</strong></p>
<ul>
  <li>Arduino based on Adafruit SAMD51 core</li>
  <li>Adafruit CircuitPython (How to <a href="https://wiki.seeedstudio.com/Wio-Terminal-CircuitPython/">run CircuitPython on Wio Terminal</a>?)</li>
  <li><a href="http://wiki.seeedstudio.com/Wio-Terminal-ArduPy/">ArduPy</a></li>
  <li>AT Firmware</li>
  <li>Visual Studio Code</li>
</ul>

<p><strong>NOTE:</strong> The RTL8720DN isn’t supported from CircuitPython. Therefore, Wifi and Bluetooth will not work.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4707">Adafruit</a></li>
  <li><a href="https://www.seeedstudio.com/Wio-Terminal-p-4509.html">Seeed Studio</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 Jul 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_wio_terminal/</guid>
  </item><item>
    <title>Seeed Studio XIAO SAMD21</title>
    <link>https://circuitpython.org/board/seeeduino_xiao/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/seeeduino_xiao.jpg 300w,
               /assets/images/boards/large/seeeduino_xiao.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/seeeduino_xiao.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <p>Seeed Studio XIAO SAMD21 is a minimal, low-cost board that uses the Atmel ATSAMD21G18, a powerful 32-bit ARM Cortex®-M0+ processor running at 48MHz with 256 KB Flash and 32 KB SRAM. The board is 20 mm x 17.5 mm in size which is perfect for wearable devices and small projects. It has multiple interfaces including DAC output, SWD Bonding pad interface, I2C, UART and SPI interfaces. It’s compatible with both Arduino IDE and CircuitPython and uses a USB-C connector.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>CPU: ARM Cortex-M0+ CPU (SAMD21G18) running at up to 48 MHz</li>
  <li>Flash Memory: 256 KB</li>
  <li>SRAM: 32 KB</li>
  <li>Digital I/O pins: 11</li>
  <li>Analog I/O pins: 11</li>
  <li>I2C interfaces: 1</li>
  <li>SPI interfaces: 1</li>
  <li>UART interfaces: 1</li>
  <li>USB-C connector for transferring code and power</li>
  <li>Power requirements: 3.3 V/5 V DC</li>
  <li>Dimensions: 20 mm x 17.5 mm x 3.5 mm</li>
</ul>

<p>Note: This microcontroller runs at 3.3 V logic. Using a 5 V device may damage the chip or device.</p>

<p>For power supply pins: The built-in DC-DC converter circuit is able to change 5 V voltage into 3.3 V, which allows you to power the device with a 5 V supply via the VIN pin or 5V pin.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://wiki.seeedstudio.com/Seeeduino-XIAO-CircuitPython/">Installation of CircuitPython</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html">Seeed Studio</a></li>
  <li><a href="https://www.digikey.com/en/product-highlight/s/seeed/seeeduino-xiao-arduino-microcontroller-samd21-cortex-m0">Digi-Key</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/Seeed-Studio/102010328?qs=GBLSl2AkirtQWO8CTzEK9g%3D%3D">Mouser</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 17 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_xiao/</guid>
  </item><item>
    <title>Seeeduino XIAO - Keyboard Optimized</title>
    <link>https://circuitpython.org/board/seeeduino_xiao_kb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/seeeduino_xiao.jpg 300w,
               /assets/images/boards/large/seeeduino_xiao.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/seeeduino_xiao.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <h1 id="keyboard-optimized">Keyboard Optimized</h1>

<p>Due to the limited memory and flash of the ATSAMD21G18, an optimized build of CircuitPython is needed for keyboard/keypad/macropad projects.  The following modules are made available:</p>

<ul>
  <li><strong>keypad</strong> for handing buttons and key matrices</li>
  <li><strong>rotaryio</strong> for handling rotary encoders</li>
  <li><strong>usb_hid</strong> for sending HID messages to the computer</li>
  <li><strong>adafruit_hid</strong> (frozen module) for configuring your Xiao as a keyboard</li>
</ul>

<p>Note that a number of modules are removed to make space for those listed above. It is assumed that a keyboard or macropad doesn’t have sensors. As such, these modules are <strong>not</strong> included:</p>

<ul>
  <li><strong>busio</strong> needed for I2C, SPI and UART</li>
  <li><strong>pulseio</strong> needed some sensors</li>
  <li><strong>onewireio</strong> needed for 1-wire devices</li>
</ul>

<p>If you need one of the modules removed or if you want to absolutely be sure that you don’t run out of memory, consider using a better processor (RP2040 for example).</p>

<p>This build was tested with a 30 keys macropad which is the largest matrix the XIAO allows for (5x6 matrix = 11 GPIOs).</p>

<h1 id="seeduino-xiao">Seeduino XIAO</h1>

<p>SEEED Studio’s Seeeduino XIAO is a minimal, low-cost board that uses the Atmel c, a powerful 32-bit ARM Cortex®-M0+ processor running at 48 MHz with 256 KB Flash and 32 KB SRAM. The board is 20 mm x 17.5 mm in size which is perfect for wearable devices and small projects. It has multiple interfaces including DAC output, SWD Bonding pad interface, I2C, UART and SPI interfaces. It’s compatible with both Arduino IDE and CircuitPython and uses a USB-C connector.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>CPU: ARM Cortex-M0+ CPU (SAMD21G18) running at up to 48 MHz</li>
  <li>Flash Memory: 256 KB</li>
  <li>SRAM: 32 KB</li>
  <li>Digital I/O pins: 11</li>
  <li>Analog I/O pins: 11</li>
  <li>I2C interfaces: 1</li>
  <li>SPI interfaces: 1</li>
  <li>UART interfaces: 1</li>
  <li>USB-C connector for transferring code and power</li>
  <li>Power requirements: 3.3 V/5 V DC</li>
  <li>Dimensions: 20 mm x 17.5 mm x 3.5 mm</li>
</ul>

<p>Note: This microcontroller runs at 3.3 V logic. Using a 5 V device may damage the chip or device.</p>

<p>For power supply pins: The built-in DC-DC converter circuit is able to change 5 V voltage into 3.3 V, which allows you to power the device with a 5 V supply via the VIN pin or 5V pin.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html">Seeed Studio</a></li>
  <li><a href="https://www.digikey.com/en/product-highlight/s/seeed/seeeduino-xiao-arduino-microcontroller-samd21-cortex-m0">Digi-Key</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/Seeed-Studio/102010328?qs=GBLSl2AkirtQWO8CTzEK9g%3D%3D">Mouser</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 07 Oct 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_xiao_kb/</guid>
  </item><item>
    <title>Seeed Studio XIAO RP2040</title>
    <link>https://circuitpython.org/board/seeeduino_xiao_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/seeeduino_xiao_rp2040.jpg 300w,
               /assets/images/boards/large/seeeduino_xiao_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/seeeduino_xiao_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Seeed Studio</p> <p>Seeed Studio XIAO RP2040 is a microcontroller using the Raspberry RP2040 chip. It runs at up to 133 MHz, is built with rich interfaces in a tiny thumb size, and fully supports Arduino, MicroPython, and CircuitPython.</p>

<p>The XIAO RP2040 is a development board of the Seeed Studio XIAO series. Like the Seeed Studio XIAO SAMD21, it is a compact board with a wide range of interfaces. The XIAO RP2040 is equipped with the Raspberry RP2040 chip (Dual-core ARM® Cortex® M0+) and has 2 MB of Flash on board.</p>

<p>Interfaces:</p>

<ul>
  <li>11 digital pins</li>
  <li>4 analog pins</li>
  <li>11 PWM Pins</li>
  <li>1 I2C interface</li>
  <li>1 UART interface</li>
  <li>1 SPI interface</li>
  <li>1 SWD Bonding pad interface</li>
</ul>

<p>Some PINs have various functions, Moreover, XIAO RP2040 supports the USB-C interface which can supply power and download code. 1 Reset button, 1 BOOT button, 1 user-programmable RGB LED, 1 power LED, 2 status indicators, and 1 user LED are on board, allowing developers to debug their code very easily.</p>

<p>The XIAO RP2040 is very compact because all electronic components are soldered on the same board surface, which means you can easily solder the XIAO RP2040 to your own PCB. XIAO RP2040 is pin-compatible with Seeed Studio XIAO SAMD21, so XIAO RP2040 can be learned and developed using the Expansion board of Seeeduino XIAO.</p>

<h2 id="tutorial">Tutorial</h2>
<ul>
  <li><a href="https://wiki.seeedstudio.com/XIAO-RP2040-with-CircuitPython/">Installation of CircuitPython</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/XIAO-RP2040-v1-0-p-5026.html">Seeed Studio</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_xiao_rp2040/</guid>
  </item><item>
    <title>senseBox MCU</title>
    <link>https://circuitpython.org/board/sensebox_mcu/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sensebox_mcu.jpg 300w,
               /assets/images/boards/large/sensebox_mcu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sensebox_mcu.jpg" alt="Image of Board" loading="lazy">
<p>By senseBox</p> <p>The senseBox-microcontroller (MCU) is specially designed and developed for the <a href="https://sensebox.de/en/">senseBox project</a>. The three main advantages and characteristics of the microcontroller are: expandability, speed, and efficiency.</p>

<h4 id="processor">Processor</h4>

<p>The processor is based on the ARM Cortex-M0+ processor from Microchip’s SAM D21 family.</p>

<h4 id="interfaces">Interfaces</h4>

<p>Sensors and actuators are addressed via proven interfaces such as I2C, UART and digital I/Os with a robust JST connector system (5V tolerant).</p>

<h4 id="data-transmission">Data transmission</h4>

<p>UART or SPI modules are offered via the two XBee compatible sockets. Optionally, the data transmission can be performed via WLAN, LAN, or LoRa in real time. Alternatively, the data can be stored on a micro SD card.</p>

<p><strong>Open-source documentation</strong>: <a href="https://github.com/watterott/senseBox-MCU">https://github.com/watterott/senseBox-MCU</a></p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://sensebox.shop/product/sensebox-mcu-2">senseBox.shop</a></li>
  <li><a href="https://shop.watterott.com/senseBox-MCU_1">Watterott electronic</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 12 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sensebox_mcu/</guid>
  </item><item>
    <title>Serpente</title>
    <link>https://circuitpython.org/board/serpente/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/serpente.jpg 300w,
               /assets/images/boards/large/serpente.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/serpente.jpg" alt="Image of Board" loading="lazy">
<p>By arturo182</p> <p>There are two Serpente boards, they are both virtually the same, except for the USB connector. The standard Serpente board contains a USB-C connector, and the Serpente Plug uses the board itself as a Type-A USB plug.</p>

<p>If you are familiar with the Digispark boards, you may notice some similarities. This fact is of course not incidental, the Serpente boards are inspired by the Digispark, both in form-factor as well as use-cases. The Serpente boards are meant to be used as quick and dirty, yet flexible, prototyping tools.</p>

<h2 id="technical-details">Technical details</h2>

<p>Here are some of the technical details regarding the boards:</p>

<ul>
  <li>ATSAMD21E18A 32-bit Cortex-M0+ running at 48 MHz</li>
  <li>256 KB flash and 32 KB RAM</li>
  <li>4 MB Flash for storing files and CircuitPython code</li>
  <li>6 highly customizable GPIOs</li>
  <li>250 mA LDO</li>
  <li>3.3 V logic and power</li>
  <li>Powered either from USB or external source</li>
  <li>User-controlled RGB LED</li>
  <li>Mounting holes on the Serpente board with the USB-C connector</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/arturo182/serpente-a-tiny-circuitpython-prototyping-board/">Tindie</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://serpente.solder.party/">Documentation</a></li>
  <li><a href="https://hackaday.io/project/167192-serpente">Hackaday.io Project</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 17 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/serpente/</guid>
  </item><item>
    <title>shIRtty Board</title>
    <link>https://circuitpython.org/board/shirtty/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/shirtty.jpg 300w,
               /assets/images/boards/large/shirtty.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/shirtty.jpg" alt="Image of Board" loading="lazy">
<p>By Sarfata</p> <p>A CircuitPython compatible, SAMD21 shitty addon with IR transmit/receive and RGB LED.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/sarfata/shirtty-addon">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/shirtty/</guid>
  </item><item>
    <title>M4-Shim</title>
    <link>https://circuitpython.org/board/silicognition-m4-shim/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/silicognition-m4-shim.jpg 300w,
               /assets/images/boards/large/silicognition-m4-shim.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/silicognition-m4-shim.jpg" alt="Image of Board" loading="lazy">
<p>By Silicognition LLC</p> <p>This board is a electrically a clone of the <a href="https://www.adafruit.com/product/3857">Adafruit Feather M4 Express</a>, but physically optimized to fit on top of the <a href="https://www.crowdsupply.com/silicognition/poe-featherwing">PoE-FeatherWing</a>, filling the empty space around the RJ45 and flyback transformer and allowing the creation of extremely compact Power over Ethernet systems.</p>

<p>Just like the original Feather M4 Express, it is powered by the ATSAMD51J19 - with its 120MHz Cortex M4 with floating point support and 512KB Flash and 192KB RAM.  It also has 2MB of SPI flash on board.  The only thing missing compared to the original is the battery charger, which was deemed expendable for Power over Ethernet systems.  The board comes with a UF2 bootloader for easy Arduino and CircuitPython compatibility, and has CircuitPython with Wiznet W5500 drivers pre-installed, plus a <code class="language-plaintext highlighter-rouge">poe_featherwing.py</code> module that sets the Ethernet connection up for you!</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/xorbit/M4-Shim">Hardware Github repo</a></li>
  <li><a href="https://hackaday.io/project/168356-poe-featherwing/log/187588-m4-shim">Hackaday.io project log</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.amazon.com/M4-Shim-Feather-PoE-FeatherWing-Ultra-Compact-Vertical/dp/B0971PKDV7/">Amazon</a></li>
  <li><a href="https://www.tindie.com/products/silicognition/m4-shim/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Feb 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/silicognition-m4-shim/</guid>
  </item><item>
    <title>RP2040-Shim</title>
    <link>https://circuitpython.org/board/silicognition_rp2040_shim/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/silicognition-rp2040-shim.jpg 300w,
               /assets/images/boards/large/silicognition-rp2040-shim.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/silicognition-rp2040-shim.jpg" alt="Image of Board" loading="lazy">
<p>By Silicognition LLC</p> <p>This board is an alternative to the <a href="https://www.amazon.com/M4-Shim-Feather-PoE-FeatherWing-Ultra-Compact-Vertical/dp/B0971PKDV7/">Silicognition M4-Shim</a>, and just like that board it is specifically made to fit on top of the <a href="https://www.amazon.com/Silicognition-PoE-FeatherWing-Ethernet-802-3at-Feather/dp/B08KTVD7BR/">PoE-FeatherWing</a>, filling the empty space around the RJ45 and flyback transformer and allowing the creation of extremely compact Power over Ethernet systems.</p>

<p>Since the ATSAMD51J19 used on the M4-Shim is pretty much unobtainium right now, I needed to provide an alternative, and with good availability and popularity of the <a href="https://www.raspberrypi.com/products/rp2040/">RP2040</a> this chip seemed like a natural choice.  You get dual ARM Cortex-M0+ @ 133 MHz, 264 kB on-chip SRAM, PIO and 4 MB of QSPI flash!</p>

<p>The RP2040 comes with built-in UF2 bootloader, and the board has CircuitPython with Wiznet W5500 drivers pre-installed, plus a <code class="language-plaintext highlighter-rouge">poe_featherwing.py</code> module that sets the Ethernet connection up for you.</p>

<p>A special feature of this board is a custom chip to enable the familiar single-press to reset, double-press for bootloader button!  So from a user experience point of view, it behaves the same as the M4-Shim.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/xorbit/RP2040-Shim">Hardware Github repo</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 01 Jul 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/silicognition_rp2040_shim/</guid>
  </item><item>
    <title>Simmel Board</title>
    <link>https://circuitpython.org/board/simmel/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/simmel.jpg 300w,
               /assets/images/boards/large/simmel.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/simmel.jpg" alt="Image of Board" loading="lazy">
<p>By Simmel Project</p> <p>Simmel is a platform that enables COVID-19 contact tracing while preserving user privacy. It is a wearable hardware beacon and scanner which can broadcast and record randomized user IDs. Contacts are stored within the wearable device, so you retain full control of your trace history until you choose to share it.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/simmel-project/frontpage">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 28 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/simmel/</guid>
  </item><item>
    <title>Bee Motion S3</title>
    <link>https://circuitpython.org/board/smartbeedesigns_bee_motion_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/smartbeedesigns_bee_motion_s3.jpg 300w,
               /assets/images/boards/large/smartbeedesigns_bee_motion_s3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/smartbeedesigns_bee_motion_s3.jpg" alt="Image of Board" loading="lazy">
<p>By Smart Bee Designs</p> <p>This is a ESP32-S3 with a built in PIR motion sensor, RGB LED, lipo charging circuit and voltage dividers.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="http://github.com/strid3r21/BeeMotionS3/">GitHub</a></li>
  <li><a href="https://www.smartbeedesigns.com">Website</a></li>
  <li><a href="https://www.instagram.com/smartbeedesigns/">Instagram</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 21 Aug 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/smartbeedesigns_bee_motion_s3/</guid>
  </item><item>
    <title>Bee S3</title>
    <link>https://circuitpython.org/board/smartbeedesigns_bee_s3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/smartbeedesigns_bee_s3.jpg 300w,
               /assets/images/boards/large/smartbeedesigns_bee_s3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/smartbeedesigns_bee_s3.jpg" alt="Image of Board" loading="lazy">
<p>By Smart Bee Designs</p> <p>The Bee S3 is a ultra low powered deepsleep ESP32-S3 development board</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="http://github.com/strid3r21/BeeS3/">GitHub</a></li>
  <li><a href="https://www.smartbeedesigns.com">Website</a></li>
  <li><a href="https://www.instagram.com/smartbeedesigns/">Instagram</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/smartbee/bee-s3-esp32-s3/">Tindie</a></li>
  <li><a href="https://www.lectronz.com/products/bee-s3-esp32-s3">Lectronz</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/smartbeedesigns_bee_s3/</guid>
  </item><item>
    <title>Snekboard</title>
    <link>https://circuitpython.org/board/snekboard/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/snekboard.jpg 300w,
               /assets/images/boards/large/snekboard.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/snekboard.jpg" alt="Image of Board" loading="lazy">
<p>By keithp.com</p> <p>Snekboard is designed to hook up to Lego Power Functions motors and
switches, allowing you to build robots out of Lego and control them
with CircuitPython or the simpler
<a href="https://keithp.com/snek">snek programming language</a>.</p>

<p>Snekboard is 48mm × 48mm, which is the same size as 6 x 6 Lego studs
allowing you to build a box out of Lego to hold it attached to your
Lego design. It uses a single cell lithium polymer battery that fits
under the board and charges over USB while snekboard is being
programmed from the host.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://keithp.com/snek/snekboard">keithp.com</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 30 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/snekboard/</guid>
  </item><item>
    <title>BB Q20 Keyboard with trackpad</title>
    <link>https://circuitpython.org/board/solderparty_bbq20kbd/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/solderparty_bbq20kbd.jpg 300w,
               /assets/images/boards/large/solderparty_bbq20kbd.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/solderparty_bbq20kbd.jpg" alt="Image of Board" loading="lazy">
<p>By Solder Party</p> <p>A BB Q20 Keyboard in USB/PMOD/Qwiic format with a injection molded clear plastic case.</p>

<p>This is the evolution of our previous BBQ10 PMOD board. We took all the feedback from that board and improved on the design in every way.</p>

<p>We added a Qwiic/Stemma QT connector, we added USB HID support, we changed to a Q20 keyboard, which gave us four extra buttons, and the optical trackpad that works as a USB HID Mouse. And we decided to put the whole thing into a custom-designed injection molded clear plastic case for better usability and durability, as well as that retro 90s look.</p>

<p>The board uses the Raspberry Pi RP2040 MCU to poll the keyboard and trackpad and put the key press information into a FIFO.</p>

<p>You can use the I2C interface to read the FIFO, reconfigure the chip, and change the keyboar backlight.</p>

<p>In addition to that, the board also has a USB Type-C socket, and when connected to a desktop computer (Windows/Linux/MacOS), a smartphone (iOS/Android), or a SBC (Raspberry Pi, etc), it enumerates as a USB HID Keyboard and Mouse combo!</p>

<p>The firmware can be configured over USB using the Vendor Class interface.</p>

<p>The I2C interface is compatible with the old BBQ10 module, you can use the same libraries to interface this board.</p>

<p>Note: This board is not 5V-tolerant!</p>

<h2 id="links">Links</h2>

<ul>
  <li><a href="https://bbq20kbd.solder.party/">Documentation</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/arturo182/bb-q20-keyboard-with-trackpad-usbi2cpmod/">Tindie</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Aug 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/solderparty_bbq20kbd/</guid>
  </item><item>
    <title>RP2040 Stamp</title>
    <link>https://circuitpython.org/board/solderparty_rp2040_stamp/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/solderparty_rp2040_stamp.jpg 300w,
               /assets/images/boards/large/solderparty_rp2040_stamp.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/solderparty_rp2040_stamp.jpg" alt="Image of Board" loading="lazy">
<p>By Solder Party</p> <p>The Stamp was created to allow you to use the <strong>Raspberry Pi RP2040</strong> in your designs without having to solder small-pitch QFN chips or worry about lots of external circuitry.</p>

<p>All you need to get you started is a 5V supply or a LiPo battery. The Stamp will take care of the charging and switching the power sources.</p>

<p>The castellated edges with <strong>2mm pitch</strong> can be hand-soldered directly to a carrier board or by using pin headers. You can find footprints for many PCB programs <a href="https://github.com/solderparty/rp2040_stamp_footprints">here</a>.</p>

<p>At only <strong>1 by 1 inch</strong>, the Stamp packs a lot of features:</p>
<ul>
  <li><strong>8MB of FLASH</strong></li>
  <li><strong>500mA 3.3V LDO</strong></li>
  <li><strong>All 30 GPIOs broken out</strong></li>
  <li><strong>A Neopixel</strong></li>
  <li>LiPo supply and charging circuit (with charging LED)</li>
  <li>USB broken out</li>
  <li>SWD broken out</li>
  <li>Reset Button</li>
  <li>12MHz crystal</li>
</ul>

<p>and of course, everything that comes with the Raspberry Pi RP2040 itself:</p>
<ul>
  <li>Dual core ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB SRAM</li>
  <li>2 UARTs</li>
  <li>2 SPIs</li>
  <li>2 I2Cs</li>
  <li>16 PWM channels</li>
  <li>USB with Host and Device support</li>
</ul>

<p>The RP2040 comes with a pre-programmed ROM UF2 Bootloader, by pulling the BOOTSEL pin low and resetting, or by double-pressing the RESET button (if the FW supports it), you can upload new firmware using the USB disk drive.</p>

<p>In addition to the Stamp, we also offer a reference design - the RP2040 Stamp Carrier.</p>

<p>The CircuitPython firmware for the Stamp comes with a built-in board file for the Carrier, you can access it using <code class="language-plaintext highlighter-rouge">import stamp_carrier_board as board</code>. After that, you can access all the Carrier pins and interfaces like you would with any other CPY board.</p>

<h2 id="links">Links</h2>

<ul>
  <li><a href="https://rp2040-stamp.solder.party/">Documentation</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Nov 2021 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/solderparty_rp2040_stamp/</guid>
  </item><item>
    <title>LumiDrive</title>
    <link>https://circuitpython.org/board/sparkfun_lumidrive/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_lumidrive_01.jpg 300w,
               /assets/images/boards/large/sparkfun_lumidrive_01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_lumidrive_01.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The LumiDrive LED Driver is SparkFun’s foray into all things Python on micro-controllers. With the SparkFun LumiDrive you will be able to control and personalize a whole strand of APA102s directly from the board itself. We’ve broken out a number of analog and digital pins from the on board SAMD21G-AU microcontroller to incorporate your own external buttons, switches, and other interfaces to interact with your addressable LED strip.</p>

<p>It feels like Arduino, but without the need to upload and compile code. Because the LumiDrive opens up like a USB drive on your computer when you plug it in and the code you write lives directly inside the drive it feels very much like an Arduino-device. The fact that you don’t need to upload and compile code makes it a great transitionary LED driver from your traditional Arduino!</p>

<p>The SparkFun LumiDrive has been equipped with a USB-C connector which is capable enough to supply up to 1.5 Amps from a 3.1 USB port, a LiPo connector and charge circuit for portable power, as well as two poke-home connectors to allow you to plug in wires without the need for solder.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14779">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_lumidrive/</guid>
  </item><item>
    <title>MicroMod RP2040 Processor</title>
    <link>https://circuitpython.org/board/sparkfun_micromod_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_micromod_rp2040.jpg 300w,
               /assets/images/boards/large/sparkfun_micromod_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_micromod_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun MicroMod Pi RP2040 Processor Board is a low-cost, high-performance board with flexible digital interfaces featuring the Raspberry Pi Foundation’s RP2040 microcontroller. With the MicroMod M.2 connector, connecting your MicroMod Pi RP2040 Processor Board is a breeze. Simply match up the key on your processor’s beveled edge connector to the key on the M.2 connector and secure it with a screw (included with all Carrier Boards).</p>

<p>The RP2040 utilizes dual ARM Cortex-M0+ processors (up to 133MHz):</p>

<ul>
  <li>264kB of embedded SRAM in six banks</li>
  <li>6 dedicated IO for SPI Flash (supporting XIP)</li>
  <li>30 multifunction GPIO:
    <ul>
      <li>Dedicated hardware for commonly used peripherals</li>
      <li>Programmable IO for extended peripheral support</li>
      <li>Four 12-bit ADC channels with internal temperature sensor (up to 0.5 MSa/s)</li>
    </ul>
  </li>
  <li>USB 1.1 Host/Device functionality</li>
</ul>

<p>The RP2040 is supported with both C/C++ and MicroPython cross-platform development environments, including easy access to runtime debugging. It has UF2 boot and floating-point routines baked into the chip. The built-in USB can act as both device and host. It has two symmetric cores and high internal bandwidth, making it useful for signal processing and video. While the chip has a large amount of internal RAM, the board includes an additional external flash chip.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/17720">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 May 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_micromod_rp2040/</guid>
  </item><item>
    <title>MicroMod nRF52840 Processor</title>
    <link>https://circuitpython.org/board/sparkfun_nrf52840_micromod/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_nrf52840_micromod.jpg 300w,
               /assets/images/boards/large/sparkfun_nrf52840_micromod.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_nrf52840_micromod.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>Featuring the nRF52840 SoC from Nordic Semiconductor, the SparkFun MicroMod nRF52840 Processor offers a powerful combination of ARM Cortex-M4 CPU and 2.4 GHz Bluetooth transceiver in the MicroMod form-factor with the M.2 MicroMod connector to allow you to plug in a compatible MicroMod Carrier Board with any number of peripherals.</p>

<p>The MicroMod nRF52840 Processor features the same Raytac MDBT50Q-P1M found on our <a href="https://www.sparkfun.com/products/15025?_ga=2.250420870.1636744795.1610382737-881909304.1580318117">Pro nRF52840 Mini</a>. This module includes an integrated trace antenna, fits the IC to an FCC-approved footprint along with including decoupling and timing mechanisms that would need to be designed into a circuit using the bare nRF52840 IC. The Bluetooth transceiver included on the nRF52840 boasts a BT 5.1 stack and supports Bluetooth 5, Bluetooth mesh, IEEE 802.15.4 (Zigbee &amp; Thread) and 2.4Ghz RF wireless protocols (including Nordic’s proprietary RF protocol) allowing you to pick which option works best for your application.</p>

<p>We’ve also routed two I2C buses, 2 SPI buses, eleven GPIO, dedicated digital, analog, PWM &amp; PDM pins along with multiple serial UARTS to cover nearly all of your peripheral needs.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/16984">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_nrf52840_micromod/</guid>
  </item><item>
    <title>Pro nRF52840 Mini</title>
    <link>https://circuitpython.org/board/sparkfun_nrf52840_mini/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_nrf52840_mini-01.jpg 300w,
               /assets/images/boards/large/sparkfun_nrf52840_mini-01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_nrf52840_mini-01.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun Pro nRF52840 Mini is a breakout and development board for Nordic Semiconductor’s nRF52840 – a powerful combination of ARM Cortex-M4 CPU and 2.4GHz Bluetooth radio. With the nRF52840 at the heart of your project, you’ll be presented with a seemingly endless list of project-possibilities in an incredibly small package.</p>

<p>SparkFun’s mini development board for the nRF52840 breaks out most of the critical I/O pins including GPIO and those needed for power while maintaining a small footprint that nearly matches that of the Arduino Pro Mini (except those covered by the Qwiic Connector). It features a USB interface (using the nRF52840’s native USB support), which can be used to program, power, and communicate with the chip making it able to be used for any purpose (UART, I2C, SPI) that those of the Arduino Pro Mini could. The Pro nRF52840 Mini features a Raytac MDBT50Q-P1M module. This module connects the nRF52840 to a trace antenna, fits the IC into an FCC-approved footprint, and also includes a lot of the decoupling and timing mechanisms that would otherwise be required for a bare nRF52840 design. Also included onboard is a LiPo battery charger, a Qwiic connector, an on/off switch, a reset switch, and a user LED/button.</p>

<p>The board comes pre-programmed with a USB bootloader. You can develop programs for the nRF52840’s Cortex-M4 using either Arduino, CircuitPython, or C (using Nordic’s nRF5 SDK), and load that compiled code using a USB serial or mass-storage interface.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15025">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_nrf52840_mini/</guid>
  </item><item>
    <title>Pro Micro - RP2040</title>
    <link>https://circuitpython.org/board/sparkfun_pro_micro_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_pro_micro_rp2040.jpg 300w,
               /assets/images/boards/large/sparkfun_pro_micro_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_pro_micro_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun Pro Micro RP2040 is a low-cost, high performance board with flexible digital interfaces featuring the Raspberry Pi Foundation’s RP2040 microcontroller. Besides the good ‘ol Pro Micro footprint, the board also includes a WS2812B addressable LED, boot button, reset button, Qwiic connector, USB-C, resettable PTC fuse, and castellated pads.</p>

<p>The RP2040 utilizes dual ARM Cortex-M0+ processors (up to 133MHz) and features:</p>
<ul>
  <li>264kB of embedded SRAM in six banks</li>
  <li>6 dedicated IO for SPI Flash (supporting XIP)</li>
  <li>30 multifunction GPIO
    <ul>
      <li>Dedicated hardware for commonly used peripherals</li>
      <li>Programmable IO for extended peripheral support</li>
      <li>Four channel ADC with internal temperature sensor, 0.5 MSa/s, 12-bit conversion</li>
    </ul>
  </li>
  <li>USB 1.1 Host/Device</li>
</ul>

<p>The RP2040 is supported with both C/C++ and MicroPython cross-platform development environments, including easy access to runtime debugging. It has UF2 boot and floating-point routines baked into the chip. The built-in USB can act as both device and host. It has two symmetric cores and high internal bandwidth, making it useful for signal processing and video. While the chip has a large amount of internal RAM, the board includes an additional 16MB external QSPI flash chip to store program code.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/17717">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_pro_micro_rp2040/</guid>
  </item><item>
    <title>Qwiic Micro without Flash</title>
    <link>https://circuitpython.org/board/sparkfun_qwiic_micro_no_flash/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_qwiic_micro.jpg 300w,
               /assets/images/boards/large/sparkfun_qwiic_micro.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_qwiic_micro.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The <strong>SparkFun Qwiic Micro</strong> is an <em>1 x 1 inch</em> microcontroller made for the <a href="https://sparkfun.com/qwiic">Qwiic Eco-system</a>. 
It’s SparkFun’s smallest microcontroller to date that’s made for integrating into small projects.
Onboard is the Atmel ATSAMD21E18 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<ul>
  <li><strong>13 GPIO Pins</strong> - The SparkFun Qwiic Micro <em>still</em> has 13 GPIO pins, 5 of which are analog.</li>
  <li><strong>UF2 Bootloader</strong> - The SparkFun Qwiic Micro comes with the <a href="https://learn.sparkfun.com/tutorials/sparkfun-qwiic-micro-samd21e-hookup-guide/all#uf2-bootloader-and-drivers">UF2 Bootloader</a> 
which does not require the board to have drivers installed on modern operating systems. It also allows for easy drag and drop programming.</li>
  <li><strong>SWD Programming Header</strong> - On board is a four pin header for reprogramming the microcontroller for advanced users who want to modify 
the chip to their liking.</li>
  <li><strong>Optional Circuitry</strong> - There are pads for an extra flash memory chip in an SOIC 8-Pin Package. Check out SparkFun’s site for the specific chip
used for the circuity python build that includes this chip!</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15423">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_qwiic_micro_no_flash/</guid>
  </item><item>
    <title>Qwiic Micro with Flash</title>
    <link>https://circuitpython.org/board/sparkfun_qwiic_micro_with_flash/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_qwiic_micro.jpg 300w,
               /assets/images/boards/large/sparkfun_qwiic_micro.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_qwiic_micro.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The <strong>SparkFun Qwiic Micro</strong> is an <em>1 x 1 inch</em> microcontroller made for the <a href="https://sparkfun.com/qwiic">Qwiic Eco-system</a>. 
It’s SparkFun’s smallest microcontroller to date that’s made for integrating into small projects.
Onboard is the Atmel ATSAMD21E18 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<ul>
  <li><strong>13 GPIO Pins</strong> - The SparkFun Qwiic Micro <em>still</em> has 13 GPIO pins, 5 of which are analog.</li>
  <li><strong>UF2 Bootloader</strong> - The SparkFun Qwiic Micro comes with the <a href="https://learn.sparkfun.com/tutorials/sparkfun-qwiic-micro-samd21e-hookup-guide/all#uf2-bootloader-and-drivers">UF2 Bootloader</a> 
which does not require the board to have drivers installed on modern operating systems. It also allows for easy drag and drop programming.</li>
  <li><strong>SWD Programming Header</strong> - On board is a four pin header for reprogramming the microcontroller for advanced users who want to modify 
the chip to their liking.</li>
  <li><strong>Optional Circuitry</strong> - There are pads for an extra flash memory chip in an SOIC 8-Pin Package. Check out SparkFun’s site for the specific chip
used for the circuity python build that includes this chip!</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15423">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_qwiic_micro_with_flash/</guid>
  </item><item>
    <title>RedBoard Turbo</title>
    <link>https://circuitpython.org/board/sparkfun_redboard_turbo/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_redboard_turbo.jpg 300w,
               /assets/images/boards/large/sparkfun_redboard_turbo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_redboard_turbo.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The RedBoard Turbo uses the ATSAMD21G18, which is an ARM Cortex M0+, 32-bit microcontroller that can run at up to 48MHz. With 4MB of external flash memory and a UF2 (USB Flashing Format) bootloader, the RedBoard Turbo provides an economical and easy to use development platform.</p>

<p>The RedBoard Turbo can be flashed over the Mass Storage Class (MSC) just like a removable flash drive, thanks the the UF2 bootloader. With this bootloader, the RedBoard Turbo shows up on your computer as a USB storage device without having to install drivers and can be used with CircuitPython.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14812">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_redboard_turbo/</guid>
  </item><item>
    <title>SAMD21 Dev</title>
    <link>https://circuitpython.org/board/sparkfun_samd21_dev/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_samd21_dev.jpg 300w,
               /assets/images/boards/large/sparkfun_samd21_dev.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_samd21_dev.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun SAMD21 Dev Breakout is an Arduino-sized breakout for the Atmel ATSAMD21G18, a 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/13672">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd21_dev/</guid>
  </item><item>
    <title>SAMD21 Mini</title>
    <link>https://circuitpython.org/board/sparkfun_samd21_mini/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_samd21_mini.jpg 300w,
               /assets/images/boards/large/sparkfun_samd21_mini.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_samd21_mini.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SAMD21 Mini Breakout is a Pro Mini-sized breakout for the Atmel ATSAMD21G18, a 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/13664">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd21_mini/</guid>
  </item><item>
    <title>MicroMod SAMD51 Processor</title>
    <link>https://circuitpython.org/board/sparkfun_samd51_micromod/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_samd51_micromod.jpg 300w,
               /assets/images/boards/large/sparkfun_samd51_micromod.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_samd51_micromod.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>With a 32-bit ARM Cortex-M4F MCU, the SparkFun MicroMod SAMD51 Processor Board is one powerful microcontroller packaged on a small board! The board provides you with an economical and easy to use development platform if you’re needing more power with minimal working space. With the M.2 MicroMod connector, connecting your SAMD51 Processor is a breeze. Simply match up the key on your processor’s beveled edge connector to the key on the M.2 connector and secure it with a screw (included with all Carrier Boards). The SAMD51 is one of the most powerful and economical microcontrollers available so to be able to add it to your MicroMod Carrier Board is a huge advantage for your project!</p>

<p>The ATSAMD51J20 utilizes a 32-bit ARM Cortex-M4 processor with Floating Point Unit (FPU), running up to 120MHz, up to 1MB of flash memory, up to 256KB of SRAM with ECC, up to 6 SERCOM interfaces, and other features. This MicroMod SAMD51 even comes flashed with the same convenient UF2 bootloader like the SAMD51 Thing Plus and the RedBoard Turbo.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/16791">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 04 Jun 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd51_micromod/</guid>
  </item><item>
    <title>SAMD51 Thing Plus</title>
    <link>https://circuitpython.org/board/sparkfun_samd51_thing_plus/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_samd51_thing_plus.jpg 300w,
               /assets/images/boards/large/sparkfun_samd51_thing_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_samd51_thing_plus.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>Is it power you seek? With a 32-bit ARM Cortex-M4F MCU, the SparkFun SAMD51 Thing Plus is one of our most powerful microcontroller boards yet! The SAMD51 Thing Plus provides you with an economical and easy to use development platform if you’re needing more power with minimal working space. This Thing even comes flashed with the same convenient UF2 bootloader as the RedBoard Turbo. To make the Thing Plus even easier to use, we’ve moved a few pins around to make the board Feather compatible and it utilizes our handy Qwiic Connect System which means no soldering or shields are required to connect it to the rest of your system!</p>

<p>The ATSAMD51J20 utilizes a 32-bit ARM Cortex-M4 processor with Floating Point Unit (FPU), running up to 120MHz, up to 1MB of flash memory, up to 256KB of SRAM with ECC, up to 6 SERCOM interfaces, and other features. In addition to the USB interface and Qwiic connection, a The SAMD51 Thing Plus provides a 600mA 3.3V regulator and LiPo charger.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14713">SparkFun</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd51_thing_plus/</guid>
  </item><item>
    <title>STM32 Thing Plus</title>
    <link>https://circuitpython.org/board/sparkfun_stm32_thing_plus/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_stm32_thing_plus.jpg 300w,
               /assets/images/boards/large/sparkfun_stm32_thing_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_stm32_thing_plus.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>With a 32-bit ARM® Cortex®-M4 RISC core, the SparkFun STM32 Thing Plus brings power and precision to your projects. The STM32 Thing Plus provides you with an economical and easy to use development platform if you’re needing more power with a minimal working space. This Thing comes flashed with the DFU bootloader, and to make the Thing Plus even easier to use, we’ve moved a few pins around to make the board Feather compatible. In addition, it utilizes our handy Qwiic Connect System which means no soldering or shields are required to connect it to the rest of your system!</p>

<p>As we previously stated; the STM32F405 Processor is based on the high-performance ARM® Cortex®-M4 32-bit RISC core and can operate at a frequency of up to 168 MHz. The Cortex-M4 core features a floating point unit (FPU) single precision which supports all ARM single precision data-processing instructions and data types. It also implements a full set of DSP instructions and a memory protection unit (MPU) which enhances application security. This Processor Board utilizes the DFU bootloader for uploading code, and incorporates an extensive range of enhanced I/Os and peripherals. In addition to the USB interface and Qwiic connection, the STM32 Thing Plus provides a 3.3V regulator and LiPo charger as well as 16MB of Flash and microSD slot for expandable memory.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/17712">SparkFun</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_stm32_thing_plus/</guid>
  </item><item>
    <title>MicroMod STM32 Processor</title>
    <link>https://circuitpython.org/board/sparkfun_stm32f405_micromod/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_stm32f405_micromod.jpg 300w,
               /assets/images/boards/large/sparkfun_stm32f405_micromod.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_stm32f405_micromod.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun MicroMod STM32 Processor Board is ready to rock your MicroMod world with its ARM® Cortex®-M4 32-bit RISC core! This little Processor Board provides you with an economical and easy to use development platform if you’re needing more power with minimal working space. With the M.2 MicroMod connector, connecting your STM32 Processor is a breeze. Simply match up the key on your processor’s beveled edge connector to the key on the M.2 connector and secure it with a screw (included with all Carrier Boards). The STM32 is one of the most powerful and economical microcontrollers available so to be able to add it to your MicroMod Carrier Board is a huge advantage for your project!</p>

<p>As we previously stated; the STM32F405 Processor is based on the high-performance ARM® Cortex®-M4 32-bit RISC core and can operate at a frequency of up to 168 MHz. This core features a floating point unit (FPU) single precision which supports all ARM single precision data-processing instructions and data types. It also implements a full set of DSP instructions and a memory protection unit (MPU) which enhances application security. This Processor Board utilizes the DFU bootloader for uploading code, and incorporates an extensive range of enhanced I/Os and peripherals. To complement the STM32F405 processor, we’ve also added an additional 128Mb (16MB) serial flash memory chip to the underside of the board.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/17713">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 13 Aug 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_stm32f405_micromod/</guid>
  </item><item>
    <title>MicroMod Teensy Processor</title>
    <link>https://circuitpython.org/board/sparkfun_teensy_micromod/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_teensy_micromod.jpg 300w,
               /assets/images/boards/large/sparkfun_teensy_micromod.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_teensy_micromod.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun MicroMod Teensy Processor leverages the awesome computing power of the NXP iMXRT1062 chip and pairs it with the M.2 MicroMod connector to allow you to plug it into your choice of compatible MicroMod Carrier Board. With the M.2 MicroMod connector, connecting your Teensy Processor is a breeze. Simply match up the key on your processor’s beveled edge connector to the key on the M.2 connector and secure it with a screw (included with all Carrier Boards). Adding a Teensy to your desired project has never been easier!</p>

<p>The Teensy Processor Board boasts some impressive computing power with an ARM Cortex-M7 processor operating at clock speeds up to 600MHz, 16MB Flash Memory and 1024K RAM Memory. On top of all that processing power, the board features <em>seven</em> serial UART ports, four I2C buses, two SPI ports, CAN-Bus, 12 GPIO, dedicated digital, analog, and PWM pins, USB Host and Device capability up to 480Mbit/s, digital audio and since many of the pins on the iMXRT1062 support multiple signal types you can customize it even further depending on your project’s needs.</p>

<p>Teensy is a registered trademark of <a href="https://www.pjrc.com/">PJRC</a>. The MicroMod Teensy is a collaboration between <a href="https://www.pjrc.com/">PJRC</a> and SparkFun.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/16402">SparkFun</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 03 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_teensy_micromod/</guid>
  </item><item>
    <title>Thing Plus - RP2040</title>
    <link>https://circuitpython.org/board/sparkfun_thing_plus_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sparkfun_thing_plus_rp2040.jpg 300w,
               /assets/images/boards/large/sparkfun_thing_plus_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sparkfun_thing_plus_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By SparkFun</p> <p>The SparkFun Thing Plus - RP2040 is a low-cost, high performance board with flexible digital interfaces featuring the Raspberry Pi Foundation’s RP2040 microcontroller. Besides the Thing Plus or <em>Feather</em> footprint (with 18 GPIO pins), the board also includes an SD card slot, 16MB (128Mbit) flash memory, a JST single cell battery connector (with a charging circuit and fuel gauge sensor), an addressable WS2812 RGB LED, JTAG PTH pins, four (4-40 screw) mounting holes, and our signature Qwiic connector.</p>

<p>The RP2040 contains two ARM Cortex-M0+ processors (up to 133MHz) and features:</p>

<ul>
  <li>264kB of embedded SRAM in six banks</li>
  <li>6 dedicated IO for SPI Flash (supporting XIP)</li>
  <li>30 multifunction GPIO:
    <ul>
      <li>Dedicated hardware for commonly used peripherals</li>
      <li>Programmable IO for extended peripheral support</li>
      <li>Four 12-bit ADC channels with internal temperature sensor (up to 0.5 MSa/s)</li>
    </ul>
  </li>
  <li>USB 1.1 Host/Device functionality</li>
</ul>

<p>The RP2040 is supported with both C/C++ and MicroPython cross-platform development environments, including easy access to runtime debugging. It has UF2 boot and floating-point routines baked into the chip. While the chip has a large amount of internal RAM, the board includes an additional 16MB of external QSPI flash memory to store program code.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/17745">SparkFun</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_thing_plus_rp2040/</guid>
  </item><item>
    <title>Spresense</title>
    <link>https://circuitpython.org/board/spresense/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/spresense.jpg 300w,
               /assets/images/boards/large/spresense.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/spresense.jpg" alt="Image of Board" loading="lazy">
<p>By Sony</p> <p>The Spresense project consists of a Arduino compatible board with Sony’s high performance CXD5602 micro-controller. The CXD5602 has built-in GPS and high-resolution audio capabilities.</p>

<p>The main board uses a processor developed by Sony for IoT and sensing applications. The main board can be operated alone or with the extension board.</p>

<p>The Spresense uses Sony’s new chipset on the main board:</p>

<ul>
  <li>The CXD5602 System on Chip (SoC) multi core processor with GNSS</li>
  <li>The CXD5247 power management and audio analog interface chip</li>
</ul>

<p>The Spresense extension board is a board which extends the interfaces compared to the Spresense main board. The Spresense main board and the Spresense extension board are connected by a Board-to-Board (B-2-B) connector. The Spresense extension board has Arduino Uno pin compatible shape and pin socket locations. However, there are some differences compared to the Arduino Uno.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>CXD5602 Processor (Arm Cortex-M4F 156 MHz)</li>
  <li>8 MB Flash memory, SRAM 1.5 MB</li>
  <li>PCB with small footprint</li>
  <li>Dedicated camera connector</li>
  <li>GNSS (GPS) antenna</li>
  <li>Pins and LEDs
    <ul>
      <li>Multiple GPIO (UART, SPI, I2C, I2S)</li>
      <li>6 ADC channels</li>
      <li>4 Application LED (Green)</li>
      <li>Power LED (Blue)</li>
    </ul>
  </li>
  <li>Micro USB serial port</li>
</ul>

<p>The Spresense extension board has a 3.5 mm headphone jack, a micro SD card slot, an extra Micro USB port and multiple microphone pins.</p>

<h2 id="misc">Misc</h2>

<ul>
  <li><a href="https://developer.sony.com/develop/spresense/docs/introduction_en.html#_main_board">Pinout Main board</a></li>
  <li><a href="https://developer.sony.com/develop/spresense/docs/introduction_en.html#_extension_board">Pinout Extension board</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://developer.sony.com/develop/spresense/">Sony</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 22 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/spresense/</guid>
  </item><item>
    <title>SSCI ISP1807 Dev Board</title>
    <link>https://circuitpython.org/board/ssci_isp1807_dev_board/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ssci_isp1807_dev_board.jpg 300w,
               /assets/images/boards/large/ssci_isp1807_dev_board.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ssci_isp1807_dev_board.jpg" alt="Image of Board" loading="lazy">
<p>By Switch Science, Inc</p> <p>This is a development board includes a Bluetooth Low Energy-enabled ISP1807 from Insight SiP (based on the nRF52840). This board has a 3.3 V regulator, a reset switch (SW1), a general purpose switch (SW2), a LED (user-controllable) and a USB-C connector.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://ssci.to/6454">Switch Science, Inc.</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Mar 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ssci_isp1807_dev_board/</guid>
  </item><item>
    <title>SSCI ISP1807 Micro Board</title>
    <link>https://circuitpython.org/board/ssci_isp1807_micro_board/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ssci_isp1807_micro_board.jpg 300w,
               /assets/images/boards/large/ssci_isp1807_micro_board.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ssci_isp1807_micro_board.jpg" alt="Image of Board" loading="lazy">
<p>By Switch Science, Inc</p> <p>This development board includes a Bluetooth Low Energy-enabled ISP1807 from Insight SiP (based on the nRF52840). This board has a 3.3 V regulator, a reset switch, a general purpose LED, and USB-C connector.</p>

<p>This board is pin compatible with the Arduino Pro Micro.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://ssci.to/6939">Switch Science, Inc.</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Mar 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ssci_isp1807_micro_board/</guid>
  </item><item>
    <title>StackRduino M0+ PRO</title>
    <link>https://circuitpython.org/board/stackrduino_m0_pro/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stackrduino_m0_pro.jpg 300w,
               /assets/images/boards/large/stackrduino_m0_pro.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stackrduino_m0_pro.jpg" alt="Image of Board" loading="lazy">
<p>By StackRduino</p> <p>StackRduino M0+ PRO is an open source Development board based on the ATSAMD21G18 for Arduino &amp; Circuit-Python packed with features &amp; comes with many stackable shields</p>

<p>With support for Adafruit CircuitPython, Arduino IDE, and other libraries the StackRduino M0+ PRO is able to act as a single solution for all projects great and small.</p>

<ul>
  <li><a href="https://www.microchip.com/wwwproducts/en/ATsamd21g18">SAMD21G18</a> Processor. This is the same chip used in many Adafruit Feather designs.</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>USB C power and data</li>
  <li>Built-in battery charger &amp; LiPo Fuel Gauge</li>
  <li>8MB Flash Storage for CircuitPython</li>
  <li>32.768 KHz crystal for clock generation &amp; RTC</li>
  <li>DUAL 3.3V regulator with 700mA peak current output each</li>
  <li>APDS9960 RGB, proximity and gesture sensor</li>
  <li>BME680 Environmental Sensor</li>
  <li>BNO055 9-DOF Absolute Orientation IMU</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>PWM outputs on all pins</li>
  <li>6X 12-Bit Analog Inputs</li>
  <li>1X 10-bit analog ouput (DAC)</li>
  <li>Qwiic/STEMMA-QT connector for fast I2C connectivity</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/StackRduino/StackRduino_M0">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stackrduino_m0_pro/</guid>
  </item><item>
    <title>STM32F411CE Black Pill</title>
    <link>https://circuitpython.org/board/stm32f411ce_blackpill/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f411ce_blackpill.jpg 300w,
               /assets/images/boards/large/stm32f411ce_blackpill.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f411ce_blackpill.jpg" alt="Image of Board" loading="lazy">
<p>By WeAct Studio</p> <p>In the F401 series, the chip is the cheapest, even cheaper than some F1, and crushed F1 on the main frequency, and has a floating-point arithmetic module, the IO port contains all the basic functions. Therefore, it is possible to provide a learning platform with a very high cost performance for beginners. In practical applications, it is not because the computing power is insufficient, and the IO port is incomplete and hinders development.</p>

<h2 id="product-details">Product details</h2>

<ul>
  <li>STM32F411CEU6 100Mhz, 128KB RAM, 512KB ROM</li>
  <li>25MHZ high speed crystal oscillator &amp; 32.768khz 6PF low speed crystal oscillator</li>
  <li>Gold sinking process is adopted, lead-free process is used, and the needle arrangement is gold-plated, which is more environmentally friendly</li>
  <li>Flash pads are reserved to provide USBDisk&amp;&amp;FATFFS routines</li>
  <li>Support for MicroPython programming with available MicroPython firmware</li>
  <li>Support for Arduino programming development</li>
  <li>Support C language programming development</li>
  <li>Version V3.0, there are 3 buttons, reset key, BOOT0 key, user key</li>
  <li>CMSIS-DAP firmware is available</li>
  <li>The use of the latest original ST chip, high quality crystal vibration</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/WeActTC/MiniF4-STM32F4x1">Github Docs</a></li>
  <li><a href="https://www.aliexpress.com/item/1005001456186625.html">Aliexpress</a></li>
  <li><a href="https://github.com/stm32duino/Arduino_Core_STM32">stm32duino - Offical Arduino Support</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/stm32f411ce_blackpill/</guid>
  </item><item>
    <title>STM32F411CE Black Pill with Flash</title>
    <link>https://circuitpython.org/board/stm32f411ce_blackpill_with_flash/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f411ce_blackpill.jpg 300w,
               /assets/images/boards/large/stm32f411ce_blackpill.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f411ce_blackpill.jpg" alt="Image of Board" loading="lazy">
<p>By WeAct Studio</p> <p>In the F401 series, the chip is the cheapest, even cheaper than some F1, and crushed F1 on the main frequency, and has a floating-point arithmetic module, the IO port contains all the basic functions. Therefore, it is possible to provide a learning platform with a very high cost performance for beginners. In practical applications, it is not because the computing power is insufficient, and the IO port is incomplete and hinders development.</p>

<h2 id="product-details">Product details</h2>

<ul>
  <li>STM32F411CEU6 100 MHz, 128 KB RAM, 512 KB ROM</li>
  <li>25 MHz high speed crystal oscillator &amp; 32.768 KHz 6PF low speed crystal oscillator</li>
  <li>Gold sinking process is adopted, lead-free process is used, and the needle arrangement is gold-plated, which is more environmentally friendly</li>
  <li>Flash pads are reserved to provide USBDisk&amp;&amp;FATFFS routines</li>
  <li>Support for MicroPython programming with available MicroPython firmware</li>
  <li>Support for Arduino and C programming development</li>
  <li>Version V3.0, there are 3 buttons, reset key, BOOT0 key, user key</li>
  <li>CMSIS-DAP firmware is available</li>
  <li>The use of the latest original ST chip, high quality crystal vibration</li>
</ul>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/WeActTC/MiniF4-STM32F4x1">Github Docs</a></li>
  <li><a href="https://github.com/stm32duino/Arduino_Core_STM32">stm32duino - Offical Arduino Support</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.aliexpress.com/item/1005001456186625.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f411ce_blackpill_with_flash/</guid>
  </item><item>
    <title>Discovery kit for STM32F411</title>
    <link>https://circuitpython.org/board/stm32f411ve_discovery/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f411.jpg 300w,
               /assets/images/boards/large/stm32f411.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f411.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The Discovery kit for STM32F411 line helps you to discover the entry level microcontrollers of the STM32 F4 series and to develop your applications easily. It offers everything required for beginners and experienced users to get started quickly.</p>

<p>Based on the STM32F411VET6, it includes an ST-LINK/V2 embedded debug tool, a gyroscope, an e-compass and digital microphone ST MEMs, an audio DAC with an integrated class D speaker driver, an OTG micro-AB connector, LEDs and push-buttons.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/32f411ediscovery.html">ST</a></li>
  <li><a href="http://www.anglia-live.com/productinfo.aspx?kw=stm32f411edisco&amp;catref=1202869001_discovery-kit-f-stm32-f4-mcus">Anglia Live</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f411e-disco/dev-board-stm32-discovery/dp/2456732?ost=STM32F411E-DISCO&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F411E-DISCO?qs=%2Fha2pyFadujxcn39gZUbxdSs8n9LApYvKgpZqT2TnktXGF15xh8T5A%3D%3D">Mouser</a></li>
  <li><a href="https://www.newark.com/webapp/wcs/stores/servlet/Search?storeId=10194&amp;catalogId=15003&amp;langId=-1&amp;mf=100050&amp;st=STM32F411E-DISCO&amp;showResults=true&amp;CMP=AFC-STMICRO">Newark</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/8463503/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343131452D444953434F267374613D53544D333246343131452D444953434F26&amp;searchHistory=%7B%22enabled%22%3Afalse%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F411E-DISCO">Electronshik(site is in Russian)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f411ve_discovery/</guid>
  </item><item>
    <title>STM32F412 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f412zg_discovery/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f412.jpg 300w,
               /assets/images/boards/large/stm32f412.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f412.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32F412 Discovery kit (32F412GDISCOVERY) allows users to easily develop applications with the STM32F412 high performance MCUs with ARM® Cortex®-M4 core.</p>

<p>The Discovery kit combines STM32F412 features with 1.54 inch 240x240 pixel TFT color LCD with touchscreen, LEDs, Wakeup button, I2S Audio Codec, MEMS microphones, USB OTG FS, Quad-SPI NOR Flash memory, MicroSD™ card connector.</p>

<p>An embedded ST-LINK/V2-1 debugger/programmer is included; specialized add-on boards can be connected thanks to the Arduino™ Uno or to the expansion connectors.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/32f412gdiscovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/products/en?WT.z_cid=sp_497_0928_buynow&amp;Enterprise=44&amp;lang=en&amp;Vendor=497&amp;mpart=STM32F412G-DISCO">Digi-Key</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f412g-disco/dev-board-arm-cortex-m4-mcu/dp/2664593?ost=STM32F412G-DISCO&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F412G-DISCO?qs=%2Fha2pyFadujxcn39gZUbxVHiujvGbqjGwP%2F30QlZCd4Sdl12itu%2FNA%3D%3D">Mouser</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/1231065/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343132472D444953434F267374613D53544D333246343132472D444953434F26&amp;searchHistory=%7B%22enabled%22%3Atrue%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F412G-DISCO">Electronshik(site is in Russian)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f412zg_discovery/</guid>
  </item><item>
    <title>STM32F407 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f4_discovery/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f407.jpg 300w,
               /assets/images/boards/large/stm32f407.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f407.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32F4DISCOVERY kit leverages the capabilities of the STM32F407 high performance microcontrollers, to allow users to easily develop applications featuring audio.</p>

<p>It includes an ST-LINK embedded debug tool, one ST-MEMS digital accelerometer, a digital microphone, one audio DAC with integrated class D speaker driver, LEDs, push-buttons and an USB OTG micro-AB connector.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/products/en?WT.z_cid=sp_497_0928_buynow&amp;Enterprise=44&amp;lang=en&amp;Vendor=497&amp;mpart=STM32F407G-DISC1">Digi-Key</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f407g-disc1/dev-board-foundation-line-mcu/dp/2506840?ost=STM32F407G-DISC1&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.futureelectronics.com/search/?selectedTab=products&amp;q=STM32F407G-DISC1%3AmanufacturerName%3ASTMicroelectronics">Future Electronics</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F407G-DISC1?qs=sGAEpiMZZMu3sxpa5v1qrvO%2FQjIESWxJTP5oj%252Bcqf3k%3D">Mouser</a></li>
  <li><a href="https://www.newark.com/stmicroelectronics/stm32f407g-disc1/dev-board-foundation-line-mcu/dp/72Y1168?st=STM32F407G-DISC1">Newark</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/9107951/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343037472D4449534331267374613D53544D333246343037472D444953433126&amp;searchHistory=%7B%22enabled%22%3Afalse%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F407G-DISC1">Electronshik(website is in Russian)</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f4_discovery/</guid>
  </item><item>
    <title>STM32F746 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f746g_discovery/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32f746g_discovery.jpg 300w,
               /assets/images/boards/large/stm32f746g_discovery.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32f746g_discovery.jpg" alt="Image of Board" loading="lazy">
<p>By ST</p> <p>The STM32F746 Discovery kit from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-discovery-kits/32f746gdiscovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicroelectronics/STM32F746G-DISCO/497-15680-5-ND/5267791">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f746g_discovery/</guid>
  </item><item>
    <title>StringCar M0 Express</title>
    <link>https://circuitpython.org/board/stringcar_m0_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stringcar_m0_express.jpg 300w,
               /assets/images/boards/large/stringcar_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stringcar_m0_express.jpg" alt="Image of Board" loading="lazy">
<p>By Cedar Grove Studios</p> <p>The Cedar Grove StringCar M0 Express is an ATSAMD21-based CircuitPython compatible board used to control a simple string car racer robot. The board is architecturally similar to the Adafruit Trinket M0 and ItsyBitsy M0 Express microcontroller boards with the addition of battery management and a DC motor controller. This board features JST connectors for the racer’s battery, motor output, and sensor input. LiPo battery management charge rate is 500mA. For sensor experimentation, a 3.3-volt Stemma-QT connection is available on-board. The micro-USB connector used for REPL operation, operational status data output, and battery charging. On-board flash memory size is 2MB.</p>

<p>The StringCar M0 Express board will not be sold. The GitHub repository will contain all design files and links for the BOM and the shared OSH Park project.</p>

<p>The string car racer is a simple one-motor robot that is suspended from a string using a pulley attached to the motor shaft. Its challenge is to race back and forth from one end of a taut string to the other. The fastest car wins. The controller board uses sensor switches to detect the ends of the string, calculate the string length, then control motor speed and braking to avoid string-end collisions.</p>

<p>The objective is to create a string car racer that can autonomously learn about its environment and adjust tradeoffs for speed and battery longevity. CircuitPython is used to easily add and interactively adjust performance features such as motor and battery efficiency, end-of-string collision avoidance, string length calculation, and predictive braking. Also, being able to watch its own battery status means that it’ll always return to the home end of the string when battery capacity begins to wane. Circuit Python also supports libraries that abstract string car functions, simplifying the primary code module to make it easier for novice programmers to get involved in customizing  string car racer operation.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 13 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stringcar_m0_express/</guid>
  </item><item>
    <title>Swan R5</title>
    <link>https://circuitpython.org/board/swan_r5/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/swan_r5.jpg 300w,
               /assets/images/boards/large/swan_r5.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/swan_r5.jpg" alt="Image of Board" loading="lazy">
<p>By Blues Wireless</p> <p>Swan is a low-cost embeddable STM32L4-based microcontroller designed to accelerate the development and deployment of battery-powered solutions. It is especially useful for applications requiring large memory or a high degree of I/O expandability at an affordable cost, such as edge inferencing and remote monitoring.</p>

<p>Uniquely for Feather-compatible boards, Swan is designed to satisfy developers’ needs that span from early prototyping through high-volume deployment. Developers may begin to use Swan in conjunction with Adafruit’s myriad sensors and FeatherWing-compatible carriers. Due to its novel design, for high-volume deployment the low-cost Swan can also be soldered directly to a parent PCB integrating those sensors, utilizing the full range of Swan’s I/O capabilities.</p>

<p>The board has three independent power options – USB, Battery, or Line power – and provides a software-switchable 2 Amp regulator for powering external sensors. When operating in its low-power operating mode, the entire Swan board commonly draws only about 8uA while retaining all of its memory, making it quite suitable for battery-powered devices.</p>

<h3 id="swan-features">Swan Features</h3>
<ul>
  <li>Ultra low-power Arm Cortex-M4 core clocked at 120Mhz</li>
  <li>STM32L4R5-based microcontroller</li>
  <li>2MB of flash and 640KB of RAM</li>
  <li>Castellated-edge access to 55 GPIO ports including:
    <ul>
      <li>8 analog</li>
      <li>16 digital</li>
      <li>4x I2C, 3x SPI</li>
      <li>USB OTG full speed</li>
      <li>1x 14-channel DMA</li>
      <li>tRNG</li>
      <li>12-bit ADC, 2 x 12-bit DAC</li>
      <li>low-power RTC, and CRC calculation peripherals</li>
    </ul>
  </li>
</ul>

<h2 id="tutorial">Tutorial</h2>
<ul>
  <li><a href="https://dev.blues.io/quickstart/swan-quickstart/#using-circuitpython">Swan Quickstart on dev.blues.io</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.blues.io/products/swan">Blues Shop</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 29 Sep 2021 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/swan_r5/</guid>
  </item><item>
    <title>OTAKE Takayoshi Octave</title>
    <link>https://circuitpython.org/board/takayoshiotake_octave_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/takayoshiotake_octave_rp2040.jpg 300w,
               /assets/images/boards/large/takayoshiotake_octave_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/takayoshiotake_octave_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By OTAKE Takayoshi</p> <p>The Octave is a 12-key macropad. It is primarily designed to be a compact keyboard with support for 12 function keys (F1 - F12).</p>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>USB-C (USB2.0, HID)</li>
  <li>Hot-swap sockets for MX compatible switches</li>
  <li>Incremental encoder with push momentary switch</li>
  <li>Stick controller with push momentary switch</li>
  <li>Programmable firmware (CircuitPython)</li>
  <li>No LEDs</li>
  <li>No keycaps</li>
  <li>No switches</li>
</ul>

<h3 id="layout">Layout</h3>

<ul>
  <li>12 function keys (F1 - F12)</li>
  <li>1 momentary layer key (MO)</li>
  <li>1 incremental encoder (Knob)</li>
  <li>1 stick controller (Stick)</li>
</ul>

<p>It is important that there are four rows. Just like the function keys on many keyboards are divided into four rows each. It is also important that it is easy to operate with one hand.</p>

<p>It is designed to be used with the left hand. In particular, the incremental encoder and stick controller are placed in easy-to-operate positions.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/takayoshiotake/octave-12-key-macropad">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/takayoshiotake_octave_rp2040/</guid>
  </item><item>
    <title>Targett ESP32-S2 Module Clip (WROOM)</title>
    <link>https://circuitpython.org/board/targett_module_clip_wroom/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/targett_module_clip_wroom.jpg 300w,
               /assets/images/boards/large/targett_module_clip_wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/targett_module_clip_wroom.jpg" alt="Image of Board" loading="lazy">
<p>By Targett</p> <p>This board will allow you to clip in an ESP32-S2 WROOM or WROVER module for programming, prototyping and testing. Slot the module into the pins where it will be held securely while you upload your code.</p>

<p>The Board has two USB micro sockets: The first is connected to a CP2104 USB to UART to upload of your firmware and receive serial messages. The second is directly connected to GPIO19 &amp; 20 that are the onboard USB - &amp; + pins.</p>

<p>The board can be powered from either of the USB sockets, the UART USB has a power switch and the S2 USB will directly power the board. These sockets are separated by diodes so neither can reverse power the other. The S2 USB has bridgeable solder pads so that it can be used to supply USB power if acting as OTG Host.</p>

<p>The CP2104 handles the USB to UART conversion as well as putting the module into “programming mode”.</p>

<p>Where Espressif have enabled programming via the S2 USB and the module can be put in “programming mode” using the IO_0 and Reset buttons.</p>

<p>All GPIO pins are broken out to 2.54mm header pins. Caution should be taken as some pins are used by the WROVER module for PSRAM.</p>

<p>##Purchace</p>

<p>You can purchace the S2-MCB from <a href="https://www.tindie.com/products/targett/esp32-s2-module-protoprogrammer/">Tindie</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 06 Dec 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/targett_module_clip_wroom/</guid>
  </item><item>
    <title>Targett ESP32-S2 Module Clip (WROVER)</title>
    <link>https://circuitpython.org/board/targett_module_clip_wrover/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/targett_module_clip_wrover.jpg 300w,
               /assets/images/boards/large/targett_module_clip_wrover.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/targett_module_clip_wrover.jpg" alt="Image of Board" loading="lazy">
<p>By Targett</p> <p>This board will allow you to clip in an ESP32-S2 WROOM or WROVER module for programming, prototyping and testing. Slot the module into the pins where it will be held securely while you upload your code.</p>

<p>The Board has two USB micro sockets: The first is connected to a CP2104 USB to UART to upload of your firmware and receive serial messages. The second is directly connected to GPIO19 &amp; 20 that are the onboard USB - &amp; + pins.</p>

<p>The board can be powered from either of the USB sockets, the UART USB has a power switch and the S2 USB will directly power the board. These sockets are separated by diodes so neither can reverse power the other. The S2 USB has bridgeable solder pads so that it can be used to supply USB power if acting as OTG Host.</p>

<p>The CP2104 handles the USB to UART conversion as well as putting the module into “programming mode”.</p>

<p>Where Espressif have enabled programming via the S2 USB and the module can be put in “programming mode” using the IO_0 and Reset buttons.</p>

<p>All GPIO pins are broken out to 2.54mm header pins. Caution should be taken as some pins are used by the WROVER module for PSRAM.</p>

<p>##Purchace</p>

<p>You can purchace the S2-MCB from <a href="https://www.tindie.com/products/targett/esp32-s2-module-protoprogrammer/">Tindie</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 06 Dec 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/targett_module_clip_wrover/</guid>
  </item><item>
    <title>Teensy 4.0</title>
    <link>https://circuitpython.org/board/teensy40/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/teensy40.jpg 300w,
               /assets/images/boards/large/teensy40.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/teensy40.jpg" alt="Image of Board" loading="lazy">
<p>By PJRC</p> <p>Who else could pack a 600 MHz microcontroller into such a Teensy little board? The Teensy 4.0 features an ARM Cortex-M7 processor at 600 MHz, with a NXP iMXRT1062 chip, the fastest microcontroller available today - <a href="https://github.com/PaulStoffregen/CoreMark">ten times faster than the Teensy 3.2</a>! The NXP iMXRT1062 is a ‘cross-over’ processor, which has the functionality of a microcontroller, at the speeds of a microcomputer. It’s perfect for when you need tons of flash, RAM and, to crunch lots of data, or when you need two full speed USB ports. It even has a graphics processor! All this for two sawbucks.</p>

<p>Teensy 4.0 can be programmed using the Arduino IDE with <a href="https://www.pjrc.com/teensy/td_download.html">Teensyduino add-on</a>.</p>

<p><strong>Power Consumption &amp; Management</strong>
When running at 600 MHz, Teensy 4.0 consumes approximately 100 mA current, considerably more than most microcontrollers. To help reduce power, Teensy 4.0 provides support for dynamic clock scaling. Unlike traditional microcontrollers, where changing the clock speed causes wrong baud rates and other issues, Teensy 4.0 hardware and Teensyduino’s software support for Arduino timing functions are designed to allow dynamically speed changes. Serial baud rates, audio streaming sample rates, and Arduino functions like delay() and millis(), and Teensyduino’s extensions like IntervalTimer and elapsedMillis, continue to work properly while the CPU changes speed.</p>

<p>Teensy 4.0 also provides a power shut off feature. By connecting a pushbutton to the On/Off pin, the 3.3V power supply can be completely disabled by holding the button for 5 seconds, and turned back on by a brief button press. If a coin cell is connected to VBAT, Teensy 4.0’s RTC also continues to keep track of date &amp; time while the power is off.</p>

<p>Teensy 4.0 also can also be overclocked, well beyond 600 MHz!</p>

<p><strong>Technical Specifications</strong></p>
<ul>
  <li>ARM Cortex-M7 at 600 MHz</li>
  <li>1024K RAM (512K is tightly coupled)</li>
  <li>2048K Flash (64K reserved for recovery &amp; EEPROM emulation)</li>
  <li>2 USB ports, both 480 MBit/sec</li>
  <li>3 CAN Bus (1 with CAN FD)</li>
  <li>2 I2S Digital Audio</li>
  <li>1 S/PDIF Digital Audio</li>
  <li>1 SDIO (4 bit) native SD</li>
  <li>3 SPI, all with 16 word FIFO</li>
  <li>3 I2C, all with 4 byte FIFO</li>
  <li>7 Serial, all with 4 byte FIFO</li>
  <li>32 general purpose DMA channels</li>
  <li>31 PWM pins</li>
  <li>40 digital pins, all interrrupt capable</li>
  <li>14 analog pins, 2 ADCs on chip</li>
  <li>Cryptographic Acceleration</li>
  <li>Random Number Generator</li>
  <li>RTC for date/time</li>
  <li>Programmable FlexIO</li>
  <li>Pixel Processing Pipeline</li>
  <li>Peripheral cross triggering</li>
  <li>Power On/Off management</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4323">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/teensy40/</guid>
  </item><item>
    <title>Teensy 4.1</title>
    <link>https://circuitpython.org/board/teensy41/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/teensy41.jpg 300w,
               /assets/images/boards/large/teensy41.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/teensy41.jpg" alt="Image of Board" loading="lazy">
<p>By PJRC</p> <p>The <a href="http://www.pjrc.com/teensy/index.html">Teensy</a> 4.1, like the <a href="http://www.adafruit.com/product/4323">4.0</a>, also features an ARM Cortex-M7 processor at 600 MHz, with an NXP iMXRT1062 chip, the fastest microcontroller available today - <a href="https://github.com/PaulStoffregen/CoreMark">ten times faster than the Teensy 3.2</a>! The NXP iMXRT1062 is a ‘cross-over’ processor, which has the functionality of a microcontroller, at the speeds of a microcomputer. It’s perfect for when you need tons of flash, RAM and, to crunch lots of data, or when you need two full-speed USB ports.</p>

<p>Teensy 4.1 comes with <strong>four times larger flash memory than the 4.0</strong>, and two new locations to optionally add more memory. The Teensy 4.1 has the same form factor as the <a href="http://www.adafruit.com/product/3266">Teensy 3.6</a> (2.4” by 0.7”), but provides a <strong>ton more I/O capability</strong>, including an 100MB Ethernet PHY, SD card socket (SDIO connected), and USB host port. Please check out the <a href="https://www.pjrc.com/store/teensy40.html">Teensy 4.0 page for common specifications and features</a>.</p>

<p><strong>Memory</strong></p>

<p>The bottom side of Teensy 4.1 has locations to solder 2 memory chips. The smaller location is meant for a PSRAM SOIC-8 chip. The larger location is intended for QSPI flash memory.</p>

<p><strong>USB Host</strong></p>

<p>Teensy 4.1’s USB Host port allows you to connect USB devices, like keyboards and MIDI musical instruments. A 5 pin header and a USB Host cable are needed to be able to plug in a USB device. <a href="https://www.adafruit.com/?q=usb%20breakout%20cable">You can also use one of these cables to connect to the USB pins</a>.</p>

<p><strong>Power Consumption &amp; Management</strong></p>

<p>When running at 600 MHz, the Teensy 4.1 consumes approximately 100mA current and provides support for dynamic clock scaling. Unlike traditional microcontrollers, where changing the clock speed causes wrong baud rates and other issues, Teensy 4.1 hardware and Teensyduino’s software support for Arduino timing functions are designed to allow dynamically speed changes. Serial baud rates, audio streaming sample rates, and Arduino functions like delay() and millis(), and Teensyduino’s extensions like IntervalTimer and elapsedMillis, continue to work properly while the CPU changes speed. Teensy 4.1 also provides a power shut off feature. By connecting a pushbutton to the On/Off pin, the 3.3V power supply can be completely disabled by holding the button for five seconds, and turned back on by a brief button press. If a coin cell is connected to VBAT, Teensy 4.1’s RTC also continues to keep track of date &amp; time while the power is off. Teensy 4.1 also can also be overclocked, well beyond 600MHz!</p>

<p>The ARM Cortex-M7 brings many powerful CPU features to a true real-time microcontroller platform. The Cortex-M7 is a dual-issue superscaler processor, meaning the M7 can execute two instructions per clock cycle, at 600MHz! Of course, executing two simultaneously depends upon the compiler ordering instructions and registers. Initial benchmarks have shown C++ code compiled by Arduino tends to achieve two instructions about 40% to 50% of the time while performing numerically intensive work using integers and pointers. The Cortex-M7 is the first ARM microcontroller to use branch prediction. On M4, loops and other code which much branch take three clock cycles. With M7, after a loop has executed a few times, the branch prediction removes that overhead, allowing the branch instruction to run in only a single clock cycle.</p>

<p>Tightly Coupled Memory is a special feature which allows Cortex-M7 fast single cycle access to memory using a pair of 64 bit wide buses. The ITCM bus provides a 64 bit path to fetch instructions. The DTCM bus is actually a pair of 32 bit paths, allowing M7 to perform up to two separate memory accesses in the same cycle. These extremely high speed buses are separate from M7’s main AXI bus, which accesses other memory and peripherals. 512 of memory can be accessed as tightly coupled memory. Teensyduino automatically allocates your Arduino sketch code into ITCM and all non-malloc memory use to the fast DTCM, unless you add extra keywords to override the optimized default. Memory not accessed on the tightly coupled buses is optimized for DMA access by peripherals. Because the bulk of M7’s memory access is done on the two tightly coupled buses, powerful DMA-based peripherals have excellent access to the non-TCM memory for highly efficient I/O.</p>

<p>Teensy 4.1’s Cortex-M7 processor includes a floating point unit (FPU) which supports both 64 bit “double” and 32 bit “float”. With M4’s FPU on Teensy 3.5 &amp; 3.6, and also Atmel SAMD51 chips, only 32 bit float is hardware accelerated. Any use of double, double functions like log(), sin(), cos() means slow software implemented math. Teensy 4.1 executes all of these with FPU hardware.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4622">Adafruit</a></li>
  <li><a href="https://www.pjrc.com/store/teensy41.html">PJRC</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 10 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/teensy41/</guid>
  </item><item>
    <title>Bluebird</title>
    <link>https://circuitpython.org/board/teknikio_bluebird/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/teknikio_bluebird.jpg 300w,
               /assets/images/boards/large/teknikio_bluebird.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/teknikio_bluebird.jpg" alt="Image of Board" loading="lazy">
<p>By Teknikio</p> <p>A plug-n-play circuit board that can be programmed to send and receive information over Bluetooth and the Internet.</p>

<p>Bluebirds can form a network to send and receive data to one another.</p>

<p>The Flock.io App provides a plug-n-play entry for users to get up and running with Bluebird with an intuitive and engaging block based visual coding interface.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.teknikio.com/pages/bluebird">Teknikio</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/teknikio_bluebird/</guid>
  </item><item>
    <title>Thunderpack v1.1</title>
    <link>https://circuitpython.org/board/thunderpack_v11/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/thunderpack_v11.jpg 300w,
               /assets/images/boards/large/thunderpack_v11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/thunderpack_v11.jpg" alt="Image of Board" loading="lazy">
<p>By Jeremy Gillick</p> <p>A kick-ass microcontroller board with everything you need in a compact package that fits in your pocket. Integrated battery, power management system, Arm microcontroller, USB bootloader, 4 high-power PWM outputs, and 12 GPIOs.</p>

<p>Why? After years of wiring together portable LED controllers that all consisted of a lithum batter, charge controller, power switch, and an arduino nano (or similar), I wanted something better. I always found those versions to be janky and fragile – not to mention concerned that damaging the pouch cell battery might make it explode! This board has everything I need with room to expand.</p>

<p>Features</p>
<ul>
  <li>Ultra-low-power 32-bit microcontroller (STM32L072xx)</li>
  <li>Integrated high-capacity 18650 lithium battery</li>
  <li>4 high-current PWM outputs (2.3A per channel!) with an LED on each for debugging.</li>
  <li>12 GPIOs, USART, I2C, SPI, USB</li>
  <li>6k EEPROM</li>
  <li>USB bootloader</li>
  <li>Tactile on/off switch</li>
  <li>Tactile user button with built-in debounce circuit</li>
  <li>Breadboard friendly</li>
  <li>Durable AF! (Put a tube of heat shrink around it for a super easy case, if you’d like.)</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jgillick/ThunderPack">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/thunderpack_v11/</guid>
  </item><item>
    <title>Thunderpack v1.2</title>
    <link>https://circuitpython.org/board/thunderpack_v12/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/thunderpack_v12.jpg 300w,
               /assets/images/boards/large/thunderpack_v12.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/thunderpack_v12.jpg" alt="Image of Board" loading="lazy">
<p>By Jeremy Gillick</p> <p>A kick-ass microcontroller board with everything you need in a compact package that fits in your pocket. Integrated battery, power management system, Arm microcontroller, USB bootloader, 4 high-power PWM outputs, and 12 GPIOs.</p>

<p>Why? After years of wiring together portable LED controllers that all consisted of a lithum batter, charge controller, power switch, and an arduino nano (or similar), I wanted something better. I always found those versions to be janky and fragile – not to mention concerned that damaging the pouch cell battery might make it explode! This board has everything I need with room to expand.</p>

<p>Features</p>
<ul>
  <li>Ultra-low-power 32-bit microcontroller (STM32L072xx)</li>
  <li>Integrated high-capacity 18650 lithium battery</li>
  <li>4 high-current PWM outputs (2.3A per channel!) with an LED on each for debugging.</li>
  <li>12 GPIOs, USART, I2C, SPI, USB</li>
  <li>6k EEPROM</li>
  <li>USB bootloader</li>
  <li>Tactile on/off switch</li>
  <li>Tactile user button with built-in debounce circuit</li>
  <li>Breadboard friendly</li>
  <li>Durable AF! (Put a tube of heat shrink around it for a super easy case, if you’d like.)</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jgillick/ThunderPack">Github</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/thunderpack_v12/</guid>
  </item><item>
    <title>ScoutMakes Azul</title>
    <link>https://circuitpython.org/board/tinkeringtech_scoutmakes_azul/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/scoutmakes_azul.jpg 300w,
               /assets/images/boards/large/scoutmakes_azul.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/scoutmakes_azul.jpg" alt="Image of Board" loading="lazy">
<p>By TinkeringTech</p> <p>The <strong>ScoutMakes Azul</strong> is an open source Bluetooth (BLE) development platform featuring the nRF52840 (32bit ARM Cortex-M4 processor) from Nordic semiconductors enabling excellent Bluetooth development capabilities for your project. It conforms to the Adafruit feather format, runs CircuitPython, Arduino. The platform also has native USB support.</p>

<p>To enable even more integration, a 128x32 OLED is also built in along with USB-C support and a power switch for ease of use.</p>

<p>The platform come pre-programmed with a UF2 bootloader and CircuitPython ready to go out of box. You can pair the Azul with Adafruit bluefruit application in iOS or Android to get going. The application includes a color picker, quaternion/accelerometer/gyro/magnetometer or location (GPS), and an 8-button control game pad. This data can be read over BLE and processed directly by the nRF52 microcontroller.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64 MHz</li>
  <li>1 MB flash and 256 KB SRAM</li>
  <li>Pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4 GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li>Up to +8 dBm output power</li>
  <li>Built-in 128-32 OLED display</li>
  <li>USB-C connector</li>
  <li>ON/OFF power switch</li>
  <li>1.7 V to 3.3 V operation with internal linear and DC/DC voltage regulators</li>
  <li>21 GPIO, 6 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #3 red LED for general purpose blinking, NeoPixel for colorful feedback</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>Open source design</li>
  <li>Works out of the box with Adafruit’s feather wings
    <h2 id="tutorial">Tutorial</h2>
  </li>
  <li><a href="https://tinkeringtech.com/blog/scoutmakes-azul/">ScoutMakes Azul Overview</a></li>
  <li><a href="https://www.youtube.com/channel/UCYcssarGk-M_4w-jmb3To0Q/featured/">ScoutMakes Youtube Channel</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://tinkeringtech.com/blog/scoutmakes-azul/">TinkeringTech</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/tinkeringtech_scoutmakes_azul/</guid>
  </item><item>
    <title>NeoTrellis M4</title>
    <link>https://circuitpython.org/board/trellis_m4_express/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/trellis_m4_express.jpg 300w,
               /assets/images/boards/large/trellis_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/trellis_m4_express.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The <strong>NeoTrellis M4</strong> is an all-in-one <strong>USB + NeoPixel + Elastomer + Audio</strong> board. It’s powered by the SAMD51, a Cortex M4 core running at 120 MHz. This chip has a speedy core with CircuitPython support, hardware DSP/floating point, dual DACs and all the goodies you expect from normal chips like I2C, ADC, DMA, etc. It has a roomy 512KB of flash and 192KB of SRAM so it’s great for CircuitPython, includes a full 8MB flash chip so tons of space for files and audio clips.</p>

<p>The native USB port can turn it into a MIDI USB device if you like - currently that’s only supported in Arduino. Tether it to a computer or tablet, if you like. Or use it in standalone mode, as long as its powered from a USB power plug, it’ll run whatever firmware is burned into it.</p>

<p>OK so you’ve got this big brain, but now you need inputs and outputs! There’s a 4x8 grid of elastomer button pads with a NeoPixel nestled in the center of each one. You can read any/all button presses simultaneously thanks to the fully diode’d matrix, and also set each button color to any of 24-bit colors. The elastomer buttons are translucent so they glow beautifully when lit.</p>

<p>Time to make some noise! Adafruit picked the SAMD51 mostly because it has dual DACs - that’s two 12-bit, 500KSPS ‘true analog’ outputs connected them to left and right on a standard headphone jack. Since the DAC pins are also ADC pins you could also use the left/right for audio line level <em>input</em> if you so choose. You’re not going to get audiophile-quality outputs from two 12-bit DACs but you can certainly play audio clips and make beeps and bloops.</p>

<p>To add more interactivity, a precision triple-axis accelerometer from Analog Devices, the ADXL343, is included as well, and provides sensor information on tilt, motion, or tapping. Great for adding another dimension of data input in addition to the button pads.</p>

<p>Finally, a 4 pin JST hacking port is available for extra add-ons. It’s STEMMA and Grove compatible, and provides GND, 3.3V power, and two pins that can be used for I2C, ADC, or a UART. So connect some other sensor, or read stereo audio in, or maybe hack together a MIDI port. Whatever you like!</p>

<p>Features:</p>

<ul>
  <li><strong>ATSAMD51 32-bit Cortex M4</strong> core running at <strong>120 MHz</strong> (32-bit, 3.3V logic and power)</li>
  <li>Hardware DSP and floating point support</li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>Native USB that can act as a true USB MIDI device if you like.</li>
  <li><strong>8 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>4x8 elastomer pads with fully diode’d matrix - no ghosting!</li>
  <li>4x8 NeoPixels for each pad, glows through the elastomer buttons</li>
  <li>TRRS Headphone jack with stereo DAC outputs on Left/Right, can also be stereo ADC inputs.</li>
  <li>Built in <a href="https://www.adafruit.com/product/1063">MAX4466 electret mic amplifier</a> for mobile phone headsets. ‘Raw’ DC level reading also available on a separate ADC</li>
  <li>4-JST hacking port with 3.3V power, ground, and two GPIO that can be I2C/ADC/UART</li>
  <li><a href="https://www.analog.com/en/products/adxl343.html">Analog Devices ADXL343 triple-axis accelerometer</a></li>
  <li>Really fun to press buttons and have sounds come out!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-neotrellis-m4">NeoTrellis M4 Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4020/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4020">Full Kit - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3938">Mainboard - Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/trellis_m4_express/</guid>
  </item><item>
    <title>Trinket M0</title>
    <link>https://circuitpython.org/board/trinket_m0/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/trinket_m0.jpg 300w,
               /assets/images/boards/large/trinket_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/trinket_m0.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>The Adafruit Trinket M0 may be small, but do not be fooled by its size! It’s a tiny microcontroller board, built around the Atmel ATSAMD21, a little chip with <em>a lot</em> of power. Adafruit designed a microcontroller board that was small enough to fit into any project, and low cost enough to use without hesitation. Perfect for when you don’t want to give up your expensive dev-board and you aren’t willing to take apart the project you worked so hard to design. It’s one of the lowest-cost CircuitPython programmable boards!</p>

<p>Adafruit used the same form factor for <a href="https://www.adafruit.com/product/1500">the original ATtiny85-based Trinket</a> and gave it an upgrade. The Trinket M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse. It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Trinket M0 is that while you can use it with the Arduino IDE, it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Trinket M0 and your code will go with you. <a href="https://learn.adafruit.com/adafruit-trinket-m0-circuitpython-arduino/circuitpython">Please check out the Trinket M0 CircuitPython guide for a list of capabilities and quick-start code examples</a> - CircuitPython is easier to code but not as low-level and complete as Arduino.</p>

<p>Here are some of the updates you can look forward to when using Trinket M0:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Trinket</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li>256KB Flash - 32x as much as 8 KB on ATtiny85</li>
  <li>32 KB RAM - 64x as much as 512 bytes on ATtiny85</li>
  <li>48 MHz 32 bit processor - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in green ON LED</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>All 5 GPIO pins are available and are not shared with USB - so you can use them for whatever you like!
    <ul>
      <li>Five GPIO pins with digital input/output with internally connected pullups or pulldowns</li>
      <li>Three of the I/O pins can be used for 12-bit analog input</li>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>We gave the M0 pads the exact same names as the original Trinket so all your existing Arduino code will work exactly the same as-is without changes</li>
      <li>Two high speed PWM outputs - for servos, LEDs, etc</li>
      <li>Three pins can also be used as hardware capacitive touch sensors with no additional components required</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware SPI, I2C and Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging). You can have either one SPI device or both I2C and Serial.</li>
    </ul>
  </li>
  <li>Same Reset switch for starting your project code over</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Mounting holes! Yeah!</li>
  <li>Really really small</li>
</ul>

<p>Each is fully assembled and tested Trinket M0 with CircuitPython &amp; example code programmed in.</p>

<p>So what are you waiting for? Pick up a Trinket M0 today and be amazed at how easy and fast it is to get started with Trinket and CircuitPython!</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-trinket-m0-circuitpython-arduino">Trinket M0 Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3500">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/trinket_m0/</guid>
  </item><item>
    <title>Trinket M0 Haxpress</title>
    <link>https://circuitpython.org/board/trinket_m0_haxpress/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/trinket_m0_haxpress.jpg 300w,
               /assets/images/boards/large/trinket_m0_haxpress.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/trinket_m0_haxpress.jpg" alt="Image of Board" loading="lazy">
<p>By Dave Astels</p> <p>This is a <a href="/board/trinket_m0/">Trinket M0</a> that has been had a SPI flash
chip bodged on by Dave Astels. It is not available for purchase.</p>

<p>It was documented as a DIY project <a href="http://daveastels.com/trinket-m0-express-hack.html">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/trinket_m0_haxpress/</guid>
  </item><item>
    <title>uChip M0</title>
    <link>https://circuitpython.org/board/uchip/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/uchip.jpg 300w,
               /assets/images/boards/large/uchip.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/uchip.jpg" alt="Image of Board" loading="lazy">
<p>By Itaca Innovation</p> <p><strong>Small. Yet powerful!</strong></p>

<p>Despite a size smaller than the ATMEGA328 which powers Arduino Uno, <strong>uChip</strong> mounts the same ATSAMD21 series of Arduino Zero! Everything that runs on Arduino Zero runs also on uChip, at the same speed! However, unlike Arduino Zero, it <strong>fits a 16-pin DIP socket</strong> and it leaves a lot of space on your breadboard. No more bulky shields or flying wires all around your breadboard!</p>

<p>And now uChip runs CircuitPython too!</p>

<p>Unlike many Arduino Zero compatible board, uChip also mounts a high efficiency buck converter, which converts the USB voltage down to 3.3V at up to 1A, which is provided on pin 16, for the external circuitry. A software-selected pass-through mode also allows to output 5V instead of 3.3V. 
uChip can operate also as an USB host. For this purpose, a built-in boost converter can provide up to 500mA to the external USB device, even when the input voltage is as low as 3.3V. The built-in automatic power-path management prevents external power from being fed into an USB port, when uChip is connected to a PC/Mac, and a voltage is provided also externally on pin 16.</p>

<p>You can program uChip using virtually any IDE, in many languages (CircuitPython too!) and you can choose of using either the USB port or an external SWD programmer.</p>

<p><strong>uChip Features:</strong></p>

<ul>
  <li>CPU: 32-bit Cortex M0+ ATSAMD21-series running at 48 MHz (Arduino Zero Compatible)</li>
  <li>FLASH: 256 kB (248 kB due to integrated bootloader).</li>
  <li>RAM: 32 kB, zero wait states.</li>
  <li>Powered via USB or externally (3.3V to 5V).</li>
  <li>Integrated 500-mA boost and 1-A buck converters and automatic power switching circuitry.</li>
  <li>Each converter can also be individually turned off, e.g. if you want to force power draw exclusively from external pins (self-powered device), or if you want to turn off an external USB device connected with a micro A cable.</li>
  <li>When powered through the USB port, the output voltage on the power pins can be selected via software to be either 3.3V or the USB voltage (typically 5V +/- 10%).</li>
  <li>Pin 15 can be configured (via SMD jumper) as an additional 3.3V auxiliary output @100mA when pin 16 is 5V (either as input or output). By default pin 15 is a regular I/O. If this feature is not used, 5/3.3V (at up to 1A) are still available on pin 16.</li>
  <li>14 I/O pins (2 of them can be used to connect an external SWD programmer/debugger) and 2 power pins (VCC and GND).</li>
  <li>Status LED (it can be turned on/off via software using a single instruction).</li>
  <li>Multi function push button for reset/program.</li>
  <li>8 12-bit ADC inputs.</li>
  <li>10-bit DAC output.</li>
  <li>14 external interrupt input pins.</li>
  <li>Up to 5 serials between SPI, I2C and UART.</li>
  <li>I2S port for audio decoders such as  UDA1334A.</li>
  <li>13 PWM pins.</li>
  <li>Size: 28.5 mm x 10.16 mm (1.1 “ x 0.40 “), including USB port protrusions (27.23 mm x 10.16 mm excluding USB)</li>
  <li>4-layer board for improved noise performance.</li>
  <li>Standards narrow-DIP footprint: 0.3” (7.62 mm) row spacing, 0.1” (2.54) pin spacing.</li>
  <li>Pinout standard logic CMOS compatible: power and GND are on pin 16 and 8, so you can also emulate some 16 pin CMOS ICs (4000 and 74HC series)!</li>
</ul>

<p><strong>Additional Notes:</strong></p>

<ul>
  <li>The uChip does not have an RGB LED.</li>
  <li>The on-board LED is amber, rather than green.</li>
  <li>The board’s bootloader is BOSSA-compatible, but does not support UF2, so use a CircuitPython .bin file with BOSSA.  See <a href="https://learn.adafruit.com/welcome-to-circuitpython/non-uf2-installation">this page</a> for the general process of using BOSSA.  A Windows .bat script that demonstrates exactly how to use the BOSSAC commandline tool with uChip to flash CircuitPython is available <a href="https://github.com/mew-cx/circuitpython_stuff/tree/main/uChip">here</a>; you may use it as a template and customize as needed.</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.itaca-innovation.com">Itaca Innovation Store</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 25 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/uchip/</guid>
  </item><item>
    <title>µGame</title>
    <link>https://circuitpython.org/board/ugame10/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ugame_10.jpg 300w,
               /assets/images/boards/large/ugame_10.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ugame_10.jpg" alt="Image of Board" loading="lazy">
<p>By Radomir Dopieralski</p> <p>A tiny game console programmable with Python, which lets you easily re-create
the classic titles. Just draw your sprites in 16-color BMP files, generate
sounds as mono WAV files, and write code in CircuitPython, using the Stage
library which gives you graphic primitives such as tiled grids and sprites.</p>

<h2 id="learn-more">Learn More</h2>
<p>More information about the project is available at <a href="https://hackaday.io/project/27629-ugame">hackaday.io</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ugame10/</guid>
  </item><item>
    <title>Unexpected Maker FeatherS2</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers2.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_feathers2.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the FeatherS2 - The PRO ESP32-S2 based development board in a Feather format!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>16 MB SPI Flash</li>
  <li>8 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>2x 700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange) &amp; IO13 (blue) LEDs</li>
  <li>21x GPIO</li>
  <li>USB-C</li>
  <li>USB backfeed protection</li>
  <li>APA102 RGB LED (CLK IO45, DATA IO40)</li>
  <li>ALS-PT19 Ambient Light Sensor (IO14)</li>
  <li>QWIIC/STEMMA connector</li>
  <li>Feather format</li>
</ul>

<p><strong>2x LDO Voltage Regulators?</strong>
Yup! The first one is for the general operation of the board and the ESP32-S2, RAM and Flash.</p>

<p>The second LDO is for you to use to connect external 3V3 modules, sensors and peripherals, and it has programmable EN control tied to GPIO21 + it’s connected to the deep sleep capabilities of the S2, so if the S2 goes into deep sleep, the 2nd LDO is automatically shut down for you!</p>

<p>You can find out more about the FeatherS2 at <a href="https://feathers2.io">feathers2.io</a>, including how to <a href="https://feathers2.io/install_uf2.html">install the UF2 Bootloader</a>.</p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own FeatherS2 from:</p>
<ul>
  <li><a href="https://unexpectedmaker.com/shop/feathers2-esp32-s2">Unexpected Maker</a></li>
  <li><a href="https://www.adafruit.com/product/4769">Adafruit</a></li>
  <li><a href="https://shop.pimoroni.com/products/feathers2-esp32-s2">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 01 Oct 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers2/</guid>
  </item><item>
    <title>Unexpected Maker FeatherS2 Neo</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers2_neo/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers2_neo.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers2_neo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_feathers2_neo.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the FeatherS2 Neo - The Blingy RGB ESP32-S2 based development board in a Feather format!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>4 MB SPI Flash</li>
  <li>2 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange) &amp; IO13 (blue) LEDs</li>
  <li>5x5 RGB LED matrix + User controller power</li>
  <li>22x GPIO</li>
  <li>VBAT voltage sense on IO2</li>
  <li>VBUS detection om IO34</li>
  <li>USB-C</li>
  <li>RGB LED (PWR 39, DATA IO40)</li>
  <li>QWIIC/STEMMA connector</li>
  <li>Feather format</li>
</ul>

<p><strong>Onboard 5x5 RGB Matrix? Really?</strong></p>

<p>Yeah, why not! Getting compelling information out of a single RGB LED can be a real challenge, so with a 5x5 matrix, you can scroll text, show icons or even display cool animating patterns!</p>

<p>The RGB Matrix is powered from its own 3.3V LDO, that defaults to the off state, so there is no current draw if you put the FeatherS2 Neo into deep sleep. Turning the power on is as simple as setting IO4 HIGH.</p>

<p>You can find out more about the FeatherS2 Neo at <a href="https://unexpectedmaker.com/feathers2-neo-soon">unexpected maker</a>.</p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own FeatherS2 Neo from:</p>

<ul>
  <li><a href="https://unexpectedmaker.com/shop/feathers2neo-esp32s2">unexpectedmaker shop</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 30 Aug 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers2_neo/</guid>
  </item><item>
    <title> Unexpected Maker FeatherS2 Prerelease</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers2_prerelease/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers2_prerelease.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers2_prerelease.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_feathers2_prerelease.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Pre-Release version of the FeatherS2
For those that purchased the pre-release version and would like to run CircuitPython on it without having to compile from source.</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>16 MB SPI Flash</li>
  <li>8 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>2x 700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange) &amp; IO13 (blue) LEDs</li>
  <li>21x GPIO</li>
  <li>USB-C</li>
  <li>USB backfeed protection</li>
  <li>APA102 RGB LED (CLK IO45, DATA IO40)</li>
  <li>ALS-PT19 Ambient Light Sensor (IO14)</li>
  <li>QWIIC/STEMMA connector</li>
  <li>Feather format</li>
</ul>

<p><strong>2x LDO Voltage Regulators?</strong>
Yup! The first one is for the general operation of the board and the ESP32-S2, RAM and Flash.</p>

<p>The second LDO is for you to use to connect external 3V3 modules, sensors and peripherals, and it has programmable EN control tied to GPIO21 + it’s connected to the deep sleep capabilities of the S2, so if the S2 goes into deep sleep, the 2nd LDO is automatically shut down for you!</p>

<p>You can find out more about the FeatherS2 at <a href="https://feathers2.io">feathers2.io</a>, including how to <a href="https://feathers2.io/install_uf2.html">install the UF2 Bootloader</a>.</p>

<h2 id="purchase">Purchase</h2>
<p>The FeatherS2 pre-release boards are no longer available for purchase now that the final release version is out, which you can grab from these locations:</p>

<ul>
  <li><a href="https://unexpectedmaker.com/shop/feathers2-esp32-s2">Unexpected Maker</a></li>
  <li><a href="https://www.adafruit.com/product/4769">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Jun 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers2_prerelease/</guid>
  </item><item>
    <title>Unexpected Maker FeatherS3</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers3.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_feathers3.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the FeatherS3 - The Pro ESP32-S3 Development Board in the Feather Format!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>Dual 32bit Xtensa LX7 cores @ up to 240Mhz</li>
  <li>RISC-V Ultra Low Power Co-processor</li>
  <li>2.4GHz Wifi - 802.11b/g/n</li>
  <li>Bluetooth 5, BLE + Mesh</li>
  <li>16MB QSPI Flash</li>
  <li>8MB of extra QSPI PSRAM</li>
  <li>2x 700mA 3.3V LDO Regulators</li>
  <li>LDO2 is user controlled &amp; also auto-shuts down in deep sleep</li>
  <li>Low power RGB LED</li>
  <li><strong>ULTRA LOW Deep Sleep Current</strong></li>
  <li>USB-C Connector with back-feed protection</li>
  <li>Native USB + USB Serial JTAG</li>
  <li>LiPo Battery Charging</li>
  <li>VBAT and 5V Sense Pins</li>
  <li>3D High Gain Antenna</li>
  <li>21x GPIO</li>
  <li>2x STEMMA connectors, 1 on LDO1 and 1 on LDO2 !</li>
  <li>Feather Format compatibility</li>
</ul>

<p>You can find out more about the FeatherS3 at <a href="https://feathers3.io">feathers3.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own FeatherS3 from:
Adafruit - https://www.adafruit.com/product/5399
Pimoroni - https://shop.pimoroni.com/products/feathers3-esp32-s3
Unexpected Maker - https://unexpectedmaker.com/shop/feathers3</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 28 Jan 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers3/</guid>
  </item><item>
    <title>Unexpected Maker ProS3</title>
    <link>https://circuitpython.org/board/unexpectedmaker_pros3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_pros3.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_pros3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_pros3.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the ProS3 - The Ultimate Pro ESP32-S3 Development Board!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>Dual 32bit Xtensa LX7 cores @ up to 240Mhz</li>
  <li>RISC-V Ultra Low Power Co-processor</li>
  <li>2.4GHz Wifi - 802.11b/g/n</li>
  <li>Bluetooth 5, BLE + Mesh</li>
  <li>16MB QSPI Flash</li>
  <li>8MB of extra QSPI PSRAM</li>
  <li>2x 700mA 3.3V LDO Regulators</li>
  <li>LDO2 is user controlled &amp; also auto-shuts down in deep sleep</li>
  <li>Low power RGB LED</li>
  <li><strong>ULTRA LOW Deep Sleep Current</strong></li>
  <li>USB-C Connector with back-feed protection</li>
  <li><strong>USB ESD protection</strong></li>
  <li>Native USB + USB Serial JTAG</li>
  <li>LiPo Battery Charging + PicoBlade connector</li>
  <li>VBAT and 5V Sense Pins</li>
  <li>3D High Gain Antenna</li>
  <li>27x GPIO including castellated headers</li>
  <li>STEMMA connector powered by LDO1</li>
  <li><strong>JTAG pins on the header</strong></li>
  <li>Compatible with TinyPICO &amp; TinyS3</li>
</ul>

<p>You can find out more about the ProS3 at <a href="https://pros3.io">pros3.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own ProS3 from:
Adafruit - https://www.adafruit.com/product/5401
Pimoroni - https://shop.pimoroni.com/products/pros3-esp32-s3
Unexpected Maker - https://unexpectedmaker.com/shop/pros3</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 28 Jan 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_pros3/</guid>
  </item><item>
    <title>Unexpected Maker TinyPICO</title>
    <link>https://circuitpython.org/board/unexpectedmaker_tinypico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_tinypico.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_tinypico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_tinypico.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the TinyPICO - The Mighty Tiny ESP32 based development board!</p>

<p><strong>This firmware is for the V2 and V3 versions of TinyPICO</strong>
It can work on he original V1 board, but some features like VBUS sense won’t be available.</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>Dual 32bit Xtensa LX6 cores @ up to 240Mhz</li>
  <li>Ultra Low Power Co-processor</li>
  <li>2.4GHz Wifi - 802.11b/g/n</li>
  <li>Bluetooth 4 - Classic &amp; BLE</li>
  <li>4MB QSPI Flash</li>
  <li>4MB of extra QSPI PSRAM</li>
  <li>700mA 3.3V LDO Regulator</li>
  <li>APA102 RGB LED</li>
  <li><strong>ULTRA LOW Deep Sleep Current</strong></li>
  <li>USB-C Connector with back-feed protection</li>
  <li>LiPo Battery Charging</li>
  <li>JST pads on the back supports PH connector</li>
  <li>3D High Gain Antenna</li>
  <li>14 GPIO</li>
  <li>Only 35 x 18mm in size</li>
</ul>

<p>You can find out more about the TinyPICO at <a href="https://tinypico.com">tinypico.com</a></p>

<p>Getting the firmware onto the Esp32 based board is different to other circuitpython supporting chips.
You can find out more about how at <a href="https://learn.adafruit.com/circuitpython-with-esp32-quick-start">Circuitpython with ESP32 quick start</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own TinyPICO from:</p>

<ul>
  <li><a href="https://www.adafruit.com/product/5028">Adafruit</a></li>
  <li><a href="https://shop.pimoroni.com/products/tinypico-v2?variant=3928508953403">Pimoroni</a></li>
  <li><a href="https://unexpectedmaker.com/shop/tinypico-usbc">Unexpected Maker</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 18 Sep 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_tinypico/</guid>
  </item><item>
    <title>Unexpected Maker TinyPICO NANO</title>
    <link>https://circuitpython.org/board/unexpectedmaker_tinypico_nano/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_tinypico_nano.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_tinypico_nano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_tinypico_nano.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the TinyPICO NANO - The Mighty Tiny ESP32 all in one module!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>Dual 32bit Xtensa LX6 cores @ up to 240Mhz</li>
  <li>Ultra Low Power Co-processor</li>
  <li>2.4GHz Wifi - 802.11b/g/n</li>
  <li>Bluetooth 4 - Classic &amp; BLE</li>
  <li>4MB QSPI Flash</li>
  <li>4MB of extra QSPI PSRAM</li>
  <li>700mA 3.3V LDO Regulator</li>
  <li><strong>ULTRA LOW Deep Sleep Current</strong></li>
  <li>LiPo Battery Charging</li>
  <li>3D High Gain Antenna</li>
  <li>25 GPIO</li>
  <li>Only 35 x 18mm in size</li>
</ul>

<p>You can find out more about the TinyPICO NANO at <a href="https://www.tinypico.com/tinypico-nano">tinypico.com</a></p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.pimoroni.com/products/tinypico-nano?variant=39285102674003">Pimoroni</a></li>
  <li><a href="https://unexpectedmaker.com/shop/tinypico-nano">Unexpected Maker</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 18 Sep 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_tinypico_nano/</guid>
  </item><item>
    <title>Unexpected Maker TinyS2</title>
    <link>https://circuitpython.org/board/unexpectedmaker_tinys2/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_tinys2.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_tinys2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_tinys2.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the TinyS2 - The Mighty Tiny ESP32-S2 based development board!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>4 MB SPI Flash</li>
  <li>2 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D High Gain Antenna</li>
  <li>700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange)</li>
  <li>17x GPIO</li>
  <li>USB-C</li>
  <li>USB backfeed protection</li>
  <li>NeoPixel RGB LED</li>
  <li>Battery Voltage sense</li>
  <li>VBUS (5V) detection sense</li>
  <li>TinyPICO compatible format</li>
  <li>Charge LED can be disconnected</li>
</ul>

<p>You can find out more about the TinyS2 at <a href="https://tinys2.io">tinys2.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own TinyS2 from:</p>
<ul>
  <li><a href="https://unexpectedmaker.com/shop/tinys2-esp32-s2">Unexpected Maker</a></li>
  <li><a href="https://www.adafruit.com/product/5029">Adafruit</a></li>
  <li><a href="https://shop.pimoroni.com/products/tinys2">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 19 Mar 2021 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_tinys2/</guid>
  </item><item>
    <title>Unexpected Maker TinyS3</title>
    <link>https://circuitpython.org/board/unexpectedmaker_tinys3/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/unexpectedmaker_tinys3.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_tinys3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/unexpectedmaker_tinys3.jpg" alt="Image of Board" loading="lazy">
<p>By Unexpected Maker</p> <p>Introducing the TinyS3 - The Mighty Tiny ESP32-S3 based development board!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>Dual 32bit Xtensa LX7 cores @ up to 240Mhz</li>
  <li>RISC-V Ultra Low Power Co-processor</li>
  <li>2.4GHz Wifi - 802.11b/g/n</li>
  <li>Bluetooth 5, BLE + Mesh</li>
  <li>8MB QSPI Flash</li>
  <li>8MB of extra QSPI PSRAM</li>
  <li>700mA 3.3V LDO Regulator</li>
  <li>Low power RGB LED</li>
  <li><strong>ULTRA LOW Deep Sleep Current</strong></li>
  <li>USB-C Connector with back-feed protection</li>
  <li>Native USB + USB Serial JTAG</li>
  <li>LiPo Battery Charging</li>
  <li>JST pads on the back supports PH connector</li>
  <li>VBAT and 5V Sense Pins</li>
  <li>3D High Gain Antenna</li>
  <li>17 GPIO</li>
  <li>Only 35 x 18mm in size</li>
  <li>Compatible with TinyPICO &amp; TinyS2</li>
</ul>

<p>You can find out more about the TinyS3 at <a href="https://tinys3.io">tinys3.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own TinyS3 from:
Adafruit - https://www.adafruit.com/product/5398
Pimoroni - https://shop.pimoroni.com/products/tinys3-esp32-s3
Unexpected Maker - https://unexpectedmaker.com/shop/ttinys3-esp32s3</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 28 Jan 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_tinys3/</guid>
  </item><item>
    <title>YD-RP2040</title>
    <link>https://circuitpython.org/board/vcc_gnd_yd_rp2040/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/vcc_gnd_yd_rp2040.jpg 300w,
               /assets/images/boards/large/vcc_gnd_yd_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/vcc_gnd_yd_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By VCC-GND Studio</p> <p>Flexible I/O connects RP2040 to the physical world by allowing it to speak to almost anyexternal device. High performance breezes through integer workloads. Low cost helps ease the barrier to entry.</p>

<p>This isn’t just apowerful chip: it’s designed to help you bring every last drop of that power to bear. With six independent banks of RAM, and a fully connected switch at the heart of its bus fabric, you can easily arrange for the cores and DMA engines to run in parallel without contention.</p>

<p>VCC-GND Studios’ YD-RP2040 has the following improvements over the Raspberry Pi Pico:</p>
<ul>
  <li>Added PWR power LED</li>
  <li>The USB interface was changed to type-C USB</li>
  <li>Added reset button to facilitate reset operation and firmware update operation.</li>
  <li>Added the USRkey user button（GPIO24).</li>
  <li>Added RGB lights（GPIO23）</li>
  <li>Change PICO’s W25Q16 to W25Q32（4M）/W25Q64（8M）/W25Q128（16M）</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.us/item/3256803817805852.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 13 Oct 2022 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/vcc_gnd_yd_rp2040/</guid>
  </item><item>
    <title>ESP32-S2-Pico with LCD</title>
    <link>https://circuitpython.org/board/waveshare_esp32_s2_pico_lcd/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/waveshare_esp32_s2_pico_lcd.jpg 300w,
               /assets/images/boards/large/waveshare_esp32_s2_pico_lcd.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/waveshare_esp32_s2_pico_lcd.jpg" alt="Image of Board" loading="lazy">
<p>By Waveshare</p> <p>This is a WiFi development board with compact size, plenty peripheral interfaces, integrated low-power Wi-Fi System-on-Chip (SoC) and mass memory, supporting Raspberry Pi Pico expansion board ecosystem.
Equipped with hardware crypto accelerator, RNG, HMAC and Digital Signature module, it can meet the security requirements of the Internet of Things.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2FH4</strong> - Xtensa single-core 32-bit LX7 240Mhz microprocessor</li>
  <li><strong>Boot &amp; Reset</strong> buttons to get into the bootloader</li>
  <li><strong>TPS63000DRCR</strong> on-board 1.8A current high efficiency boost/buck DC-DC power supply IC</li>
  <li>Integrated 320KB SRAM, 128KB ROM, 8MB PSRAM, 4MB Flash memory</li>
  <li>Support IEEE802.11 b/g/n, on-board 2.4 GHz WiFi ceramic antenna, up to 150 Mbps data transfer rate</li>
  <li>USB-C connector, no more plug orientation problem</li>
  <li>On-board 0.96inch 160×80 pixels 65K color IPS LCD display.</li>
  <li>On-board single 3.7V lithium battery charge/discharge header, suitable for mobile IoT product design.</li>
</ul>

<p>Waveshare wiki <a href="https://www.waveshare.com/wiki/ESP32-S2-Pico">link</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.waveshare.com/esp32-s2.htm">Waveshare</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 22 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/waveshare_esp32_s2_pico_lcd/</guid>
  </item><item>
    <title>ESP32-S2-Pico</title>
    <link>https://circuitpython.org/board/waveshare_esp32s2_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/waveshare_esp32s2_pico.jpg 300w,
               /assets/images/boards/large/waveshare_esp32s2_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/waveshare_esp32s2_pico.jpg" alt="Image of Board" loading="lazy">
<p>By Waveshare</p> <p>This is a WiFi development board with compact size, plenty peripheral interfaces, integrated low-power Wi-Fi System-on-Chip (SoC) and mass memory, supporting Raspberry Pi Pico expansion board ecosystem.
Equipped with hardware crypto accelerator, RNG, HMAC and Digital Signature module, it can meet the security requirements of the Internet of Things.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>ESP32-S2FH4</strong> - Xtensa single-core 32-bit LX7 240Mhz microprocessor</li>
  <li><strong>Boot &amp; Reset</strong> buttons to get into the bootloader</li>
  <li><strong>TPS63000DRCR</strong> on-board 1.8A current high efficiency boost/buck DC-DC power supply IC</li>
  <li>Integrated 320KB SRAM, 128KB ROM, 8MB PSRAM, 4MB Flash memory</li>
  <li>Support IEEE802.11 b/g/n, on-board 2.4 GHz WiFi ceramic antenna, up to 150 Mbps data transfer rate</li>
  <li>USB-C connector, no more plug orientation problem</li>
</ul>

<p>Waveshare wiki <a href="https://www.waveshare.com/wiki/ESP32-S2-Pico">link</a>.</p>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.waveshare.com/esp32-s2.htm">Waveshare</a></li>
  <li><a href="https://grobotronics.com/waveshare-esp32-s2-wifi-development-board.html">Grobotronics</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 21 Aug 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/waveshare_esp32s2_pico/</guid>
  </item><item>
    <title>RP2040-Zero</title>
    <link>https://circuitpython.org/board/waveshare_rp2040_zero/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/waveshare_rp2040_zero.jpg 300w,
               /assets/images/boards/large/waveshare_rp2040_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/waveshare_rp2040_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Waveshare</p> <p>a Pico-like MCU board based on Raspberry Pi RP2040</p>

<p><strong>Board specifications</strong></p>

<ul>
  <li>RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom</li>
  <li>Dual-core Arm Cortex M0+ processor, flexible clock running up to 133 MHz</li>
  <li>264KB of SRAM, and 2MB of on-board Flash memory</li>
  <li>USB-C connector, keeps it up to date, easier to use</li>
  <li>Castellated module allows soldering direct to carrier boards</li>
  <li>USB 1.1 with device and host support</li>
  <li>Low-power sleep and dormant modes</li>
  <li>Drag-and-drop programming using mass storage over USB</li>
  <li>29 × multi-function GPIO pins (20× via edge pinout, others via solder points)</li>
  <li>2 × SPI, 2 × I2C, 2 × UART, 4 × 12-bit ADC, 16 × controllable PWM channels</li>
  <li>Accurate clock and timer on-chip</li>
  <li>Temperature sensor</li>
  <li>Accelerated floating-point libraries on-chip</li>
  <li>8 × Programmable I/O (PIO) state machines for custom peripheral support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.waveshare.com/rp2040-zero.htm">Waveshare</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 Jan 2022 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/waveshare_rp2040_zero/</guid>
  </item><item>
    <title>WeAct Studio Pico</title>
    <link>https://circuitpython.org/board/weact_studio_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/weact_studio_pico.jpg 300w,
               /assets/images/boards/large/weact_studio_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/weact_studio_pico.jpg" alt="Image of Board" loading="lazy">
<p>By WeAct Studio</p> <p>The Raspberry Pi Pico is a microcontroller board based on the Raspberry Pi RP2040 microcontroller chip. It has been designed to be a low-cost, high-performance microcontroller board with flexible digital interfaces. The Raspberry Pi Pico features two ARM Cortex-M0+ cores run up to 133MHz; 256KB RAM; 30 GPIO pins; and a broad range of interfacing options. This is paired with 2MB/4MB/8MB/16MB of onboard QSPI Flash memory for code and data storage.</p>

<p><strong>Specifications:</strong></p>

<ul>
  <li>RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom</li>
  <li>Dual-core Arm Cortex M0+ processor, flexible clock running up to 133 MHz</li>
  <li>264KB of SRAM, and 2MB/4MB/8MB/16MB of on-board Flash memory</li>
  <li>USB 1.1 with device and host support</li>
  <li>Low-power sleep and dormant modes</li>
  <li>Drag-and-drop programming using mass storage over USB</li>
  <li>26 × multi-function GPIO pins</li>
  <li>2 × SPI, 2 × I2C, 2 × UART, 3 × 12-bit ADC, 16 × controllable PWM channels</li>
  <li>Accurate clock and timer on-chip</li>
  <li>Temperature sensor</li>
  <li>Accelerated floating-point libraries on-chip</li>
  <li>8 × Programmable I/O (PIO) state machines for custom peripheral support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/3256803521775546.html">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Jun 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/weact_studio_pico/</guid>
  </item><item>
    <title>WeAct Studio Pico (16MB Variant)</title>
    <link>https://circuitpython.org/board/weact_studio_pico_16mb/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/weact_studio_pico.jpg 300w,
               /assets/images/boards/large/weact_studio_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/weact_studio_pico.jpg" alt="Image of Board" loading="lazy">
<p>By WeAct Studio</p> <p>The Raspberry Pi Pico is a microcontroller board based on the Raspberry Pi RP2040 microcontroller chip. It has been designed to be a low-cost, high-performance microcontroller board with flexible digital interfaces. The Raspberry Pi Pico features two ARM Cortex-M0+ cores run up to 133MHz; 256KB RAM; 30 GPIO pins; and a broad range of interfacing options. This is paired with 2MB/4MB/8MB/16MB of onboard QSPI Flash memory for code and data storage.</p>

<p><strong>Specifications:</strong></p>

<ul>
  <li>RP2040 microcontroller chip designed by Raspberry Pi in the United Kingdom</li>
  <li>Dual-core Arm Cortex M0+ processor, flexible clock running up to 133 MHz</li>
  <li>264KB of SRAM, and 2MB/4MB/8MB/16MB of on-board Flash memory</li>
  <li>USB 1.1 with device and host support</li>
  <li>Low-power sleep and dormant modes</li>
  <li>Drag-and-drop programming using mass storage over USB</li>
  <li>26 × multi-function GPIO pins</li>
  <li>2 × SPI, 2 × I2C, 2 × UART, 3 × 12-bit ADC, 16 × controllable PWM channels</li>
  <li>Accurate clock and timer on-chip</li>
  <li>Temperature sensor</li>
  <li>Accelerated floating-point libraries on-chip</li>
  <li>8 × Programmable I/O (PIO) state machines for custom peripheral support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/3256803521775546.html?skuId=12000026898823783">Aliexpress</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 22 Dec 2022 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/weact_studio_pico_16mb/</guid>
  </item><item>
    <title>Winterbloom Big Honking Button</title>
    <link>https://circuitpython.org/board/winterbloom_big_honking_button/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/honk.jpg 300w,
               /assets/images/boards/large/honk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/honk.jpg" alt="Image of Board" loading="lazy">
<p>By Alethea Flowers</p> <p>Winterbloom Big Honking Button is a modular synthesizer (Eurorack) module. It is very simple sampler in a very silly package. It makes a nice goose honk when you press its large orange button, and you can use CircuitPython to customize its behavior and samples.</p>

<h2 id="purchase">Purchase</h2>

<p>The BHB is available for purchase on <a href="https://winterbloom.com">Winterbloom.com</a> and several modular synthesizer distributors.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 10 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/winterbloom_big_honking_button/</guid>
  </item><item>
    <title>Winterbloom Sol</title>
    <link>https://circuitpython.org/board/winterbloom_sol/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sol.jpg 300w,
               /assets/images/boards/large/sol.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sol.jpg" alt="Image of Board" loading="lazy">
<p>By Alethea Flowers</p> <p>Winterbloom Sol is a modular synthesizer (Eurorack) module. It is a multi-purpose, scriptable USB MIDI to CV/gate converter. Its code can be modified while in use to change how it processes MIDI data into CV and gate outputs.</p>

<h2 id="purchase">Purchase</h2>

<p>Sol is available for purchase on <a href="https://winterbloom.com">Winterbloom.com</a> and several modular synthesizer distributors.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 07 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/winterbloom_sol/</guid>
  </item><item>
    <title>W5100S-EVB-Pico</title>
    <link>https://circuitpython.org/board/wiznet_w5100s_evb_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/w5100s-evb-pico.jpg 300w,
               /assets/images/boards/large/w5100s-evb-pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/w5100s-evb-pico.jpg" alt="Image of Board" loading="lazy">
<p>By WIZnet</p> <p>W5100S-EVB-Pico is a microcontroller evaluation board based on the Raspberry Pi RP2040 and fully hardwired TCP/IP controller W5100S – and basically works the same as Raspberry Pi Pico board but with additional Ethernet via W5100S.</p>

<ul>
  <li>Raspberry Pi Pico Clone</li>
  <li>Ethernet (W5100S Hardwired TCP/IP CHIP)</li>
  <li>AWS IoT Core Qualified</li>
  <li>Microsoft Azure Certified</li>
</ul>

<p><strong>Features​</strong></p>
<ul>
  <li>RP2040 microcontroller with 2MByte Flash
    <ul>
      <li>Dual-core cortex M0+ at up to 133MHz</li>
      <li>264kByte multi-bank high performance SRAM</li>
      <li>External Quad-SPI Flash with eXecute In Place (XIP)</li>
      <li>High performance full-crossbar bus fabric</li>
      <li>30 multi-function General Purpose IO (4 can be used for ADC)
        <ul>
          <li>1.8-3.3V IO Voltage (NOTE. Pico IO voltage is fixed at 3.3V)</li>
        </ul>
      </li>
      <li>12-bit 500ksps Analogue to Digital Converter (ADC)</li>
      <li>Various digital peripherals
        <ul>
          <li>2 × UART, 2 × I2C, 2 × SPI, 16 × PWM channels</li>
          <li>1 × Timer with 4 alarms, 1 × Real Time Counter</li>
        </ul>
      </li>
      <li>2 × Programmable IO (PIO) blocks, 8 state machines total</li>
      <li>Flexible, user-programmable high-speed IO</li>
      <li>Can emulate interfaces such as SD Card and VGA</li>
    </ul>
  </li>
  <li>Includes W5100S
    <ul>
      <li>Supports Hardwired Internet Protocols: TCP, UDP, WOL over UDP, ICMP, IGMPv1/v2, IPv4, ARP,    PPPoE</li>
      <li>Supports 4 Independent Hardware SOCKETs simultaneously</li>
      <li>Internal 16 Kbytes Memory for TX/ RX Buffers</li>
      <li>SPI Interface</li>
    </ul>
  </li>
  <li>Micro-USB B port for power and data (and for reprogramming the Flash)</li>
  <li>40 pin 21x51 ‘DIP’ style 1mm thick PCB with 0.1” through-hole pins also with edge castellations</li>
  <li>3-pin ARM Serial Wire Debug (SWD) port</li>
  <li>10 / 100 Ethernet PHY embedded</li>
  <li>Supports Auto Negotiation
    <ul>
      <li>Full / Half Duplex</li>
      <li>10 / 100 Based</li>
    </ul>
  </li>
  <li>Built-in RJ45(RB1-125BAG1A)</li>
  <li>Built-in LDO (LM8805SF5-33V)</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://eshop.wiznet.io/shop/module/w5100s-evb-pico/">WIZnet e-shop</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://docs.wiznet.io/Product/iEthernet/W5100S/w5100s-evb-pico">WIZnet Docs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 26 Apr 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/wiznet_w5100s_evb_pico/</guid>
  </item><item>
    <title>W5500-EVB-Pico</title>
    <link>https://circuitpython.org/board/wiznet_w5500_evb_pico/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/w5500-evb-pico.jpg 300w,
               /assets/images/boards/large/w5500-evb-pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/w5500-evb-pico.jpg" alt="Image of Board" loading="lazy">
<p>By WIZnet</p> <p>W5500-EVB-Pico is a microcontroller evaluation board based on the Raspberry Pi RP2040 and fully hardwired TCP/IP controller W5500 – and basically works the same as Raspberry Pi Pico board but with additional Ethernet via W5500.</p>

<ul>
  <li>Raspberry Pi Pico Clone</li>
  <li>Ethernet (W5500 Hardwired TCP/IP CHIP)</li>
</ul>

<p><strong>Features​</strong></p>

<ul>
  <li>RP2040 microcontroller with 2MByte Flash
    <ul>
      <li>Dual-core cortex M0+ at up to 133MHz</li>
      <li>264kByte multi-bank high performance SRAM</li>
      <li>External Quad-SPI Flash with eXecute In Place (XIP)</li>
      <li>High performance full-crossbar bus fabric</li>
      <li>30 multi-function General Purpose IO (4 can be used for ADC)
        <ul>
          <li>1.8-3.3V IO Voltage (NOTE. Pico IO voltage is fixed at 3.3V)</li>
        </ul>
      </li>
      <li>12-bit 500ksps Analogue to Digital Converter (ADC)</li>
      <li>Various digital peripherals
        <ul>
          <li>2 × UART, 2 × I2C, 2 × SPI, 16 × PWM channels</li>
          <li>1 × Timer with 4 alarms, 1 × Real Time Counter</li>
        </ul>
      </li>
      <li>2 × Programmable IO (PIO) blocks, 8 state machines total</li>
      <li>Flexible, user-programmable high-speed IO</li>
      <li>Can emulate interfaces such as SD Card and VGA</li>
    </ul>
  </li>
  <li>Includes W5500
    <ul>
      <li>Supports Hardwired Internet Protocols: TCP, UDP, ICMP, IPv4, ARP, IGMP, PPPoE</li>
      <li>Supports 8 Independent Hardware SOCKETs simultaneously</li>
      <li>Internal 32 Kbytes Memory for TX/ RX Buffers</li>
      <li>Supports High Speed Serial Peripheral Interface(SPI MODE 0, 3)</li>
    </ul>
  </li>
  <li>Micro-USB B port for power and data (and for reprogramming the Flash)</li>
  <li>40 pin 21×51 ‘DIP’ style 1mm thick PCB with 0.1″ through-hole pins also with edge castellations</li>
  <li>3-pin ARM Serial Wire Debug (SWD) port</li>
  <li>10 / 100 Ethernet PHY embedded</li>
  <li>Supports Auto Negotiation
    <ul>
      <li>Full / Half Duplex</li>
      <li>10 / 100 Based</li>
    </ul>
  </li>
  <li>Built-in RJ45</li>
  <li>Built-in LDO</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://eshop.wiznet.io/shop/module/w5500-evb-pico/">WIZnet e-shop</a></li>
</ul>

<h2 id="learn-more">Learn more</h2>

<ul>
  <li><a href="https://docs.wiznet.io/Product/iEthernet/W5500/w5500-evb-pico">WIZnet Docs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 25 Jul 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/wiznet_w5500_evb_pico/</guid>
  </item><item>
    <title>XinaBox CC03</title>
    <link>https://circuitpython.org/board/xinabox_cc03/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/xinabox_cc03.jpg 300w,
               /assets/images/boards/large/xinabox_cc03.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/xinabox_cc03.jpg" alt="Image of Board" loading="lazy">
<p>By XinaBox</p> <p>This xCHIP forms part of the core modules. The SAM D21 is a series of low-power micro controllers using the 32-bit ARM® Cortex® -M0+ processor, with 256 KB Flash and 32KB of SRAM. Compatible with Arduino platform due to the shared architecture with the Arduino M0.</p>

<h3 id="product-highlights">Product Highlights</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
  <li>Five 16-Bit Configurable Timers</li>
  <li>Three 24-Bit Timers/Counters</li>
  <li>32-Bit Real Time Counter with Clock/Calendar Function</li>
  <li>Watchdog Timer</li>
  <li>CRC-32 Generator</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://xinabox.cc/products/cc03?_pos=1&amp;_sid=ecd354e4d&amp;_ss=r">XinaBox CC03</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/xinabox_cc03/</guid>
  </item><item>
    <title>XinaBox CS11</title>
    <link>https://circuitpython.org/board/xinabox_cs11/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/xinabox_cs11.jpg 300w,
               /assets/images/boards/large/xinabox_cs11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/xinabox_cs11.jpg" alt="Image of Board" loading="lazy">
<p>By XinaBox</p> <p>This xCHIP forms part of the core modules. The SAM D21 is a series of low-power micro controllers using the 32-bit ARM® Cortex® -M0+ processor, with 256 KB Flash and 32KB of SRAM. Compatible with Arduino platform due to the shared architecture with the Arduino M0.</p>

<h3 id="product-highlights">Product Highlights</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
  <li>Five 16-Bit Configurable Timers</li>
  <li>Three 24-Bit Timers/Counters</li>
  <li>32-Bit Real Time Counter with Clock/Calendar Function</li>
  <li>Watchdog Timer</li>
  <li>CRC-32 Generator</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://xinabox.cc/products/cs11?_pos=1&amp;_sid=8a988d61c&amp;_ss=r">XinaBox CS11</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/xinabox_cs11/</guid>
  </item><item>
    <title>RP2.65-F</title>
    <link>https://circuitpython.org/board/zrichard_rp2.65-f/</link>
    <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/zrichard_rp2.65-f.jpg 300w,
               /assets/images/boards/large/zrichard_rp2.65-f.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/zrichard_rp2.65-f.jpg" alt="Image of Board" loading="lazy">
<p>By Zach Richard</p> <p>A 65% Ortholinear Keyboard based on the Rasperry Pi RP2040 with faders.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://github.com/BigTuna94/RP2.65-F">GitHub</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 May 2022 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/zrichard_rp2.65-f/</guid>
  </item>

    <item>
      <title>Helios</title>
      <link>https://circuitpython.org/blinka/0xcb_helios/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/0xcb_helios.jpg 300w,
               /assets/images/boards/large/0xcb_helios.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/0xcb_helios.jpg" alt="Image of Board" loading="lazy">
<p>By 0xCB</p> <p>The 0xCB Helios is our Elite-C compatible MicroController, based on the high-performance and affordable RP2040.</p>

<p>It’s a drop-in replacement for legacy ProMicro boards.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>Powerful RP2040</strong> 32-bit Cortex M0+ dual core running at 133 MHz and 264kB SRAM.</li>
  <li><strong>16MB/128Mb QSPI FLASH</strong> chip for storing files and code</li>
  <li><strong>Only 3.16 mm thick</strong> thanks to a mid-mounted USB-C port</li>
  <li>3.3V 500mA LDO, PTC fuse and <strong>ESD protection</strong> chip</li>
  <li>Elite-C, Pro Micro, SparkFun Pro Micro RP2040, and nice!Nano compatible pinout (follows the <strong>BastardKb standard</strong>)</li>
  <li><strong>8 extra I/O pins</strong>: (GP12-GP16) added along the bottom edge, (GP10-GP11) at the top and a 5V level shifted pin to drive RGB LEDs for example (GP25)</li>
  <li><strong>25 available digital pins</strong> for a maximum of 13x12 = 156 switches (using a standard matrix)</li>
  <li>Default off <strong>red power LED</strong> (selectable via a jumper on the left side)</li>
  <li><strong>blue user LED</strong> on pin GP17</li>
  <li>4 pins configurable as <strong>analog inputs</strong></li>
  <li><strong>USB D+/D- broken out</strong> for use with an external USB socket/daughterboard</li>
  <li><strong>USB VBUS detection</strong> on GPIO19 for split keyboard side detection</li>
  <li><strong>UF2 bootloader</strong> for drag &amp; drop programming via your file manager</li>
  <li>easy to use and backward compatible <strong>Single button boot and reset circuit</strong> push to reset and hold &gt;500ms to enter bootloader (legacy boards with reset buttons will continue to work!)</li>
  <li><strong>RAW / VBUS</strong> output, for powering RGB LEDs or other 5 V devices. The jumper on top lets you skip over the 500 mA fuse and Schottky diode, for up to 3A from USB ports.</li>
  <li><strong>USB-C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://keeb.supply/products/0xcb-helios">KeebSupply</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 04 Jan 2023 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/0xcb_helios/</guid>
    </item>

    <item>
      <title>Feather RP2040</title>
      <link>https://circuitpython.org/blinka/adafruit_feather_rp2040/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_feather_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_feather_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_feather_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>A new chip means a new Feather, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the Feather Treatment” and so we did! This Feather features the <strong>RP2040</strong>, and all niceties you know and love about Feather.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8 mm x 22.8 mm x 7 mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li><strong>21 GPIO pins with following capabilities:</strong>
    <ul>
      <li><strong>Four</strong> 12 bit ADCs (one more than Pico)</li>
      <li>Two I2C, Two SPI and two UART peripherals, we label one for the ‘main’ interface in standard Feather locations</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>The 8 digital ‘non-ADC/non-peripheral’ GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>Built in 200 mA lipoly charger</strong> with charging status indicator LED</li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> with power pin on GPIO so you can depower it for low power usages.</li>
  <li>On-board <strong>STEMMA QT connector</strong> that lets you quickly connect any Qwiic, STEMMA QT or Grove I2C devices with no soldering!</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts (no unplugging-replugging to relaunch code)</strong></li>
  <li>3.3 V Power/enable pin</li>
  <li><a href="https://www.adafruit.com/product/752">Optional SWD debug port can be soldered in for debug access</a></li>
  <li>4 mounting holes</li>
  <li>24 MHz crystal for perfect timing.</li>
  <li>3.3 V regulator with 500 mA peak current output</li>
  <li><strong>USB-C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader.</strong> What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD1). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating-point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>At the time of launch, there is no Arduino core support for this board. There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="/downloads">CircuitPython port</a>!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264 KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. <strong>On this board there is 8 MB</strong>, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 7 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133 MHz</li>
  <li>264 kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some header, so you can solder it in and plug it into a solderless breadboard.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4884">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/adafruit_feather_rp2040/</guid>
    </item>

    <item>
      <title>ItsyBitsy RP2040</title>
      <link>https://circuitpython.org/blinka/adafruit_itsybitsy_rp2040/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_itsybitsy_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_itsybitsy_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_itsybitsy_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>A new chip means a new ItsyBitsy, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the ItsyBitsy teensy-weensy Treatment” and so we did! This Itsy’ features the RP2040, and all niceties you know and love about the <a href="https://www.adafruit.com/category/1008">ItsyBitsy family</a>.</p>

<p>What’s smaller than a Feather but larger than a Trinket? It’s an Adafruit ItsyBitsy RP2040 featuring the Raspberry Pi RP2040! Small, powerful, with a ultra fast duel Cortex M0+ processor running at 125 MHz - this microcontroller board is perfect when you want something very compact, with lots of horsepower and a bunch of pins. This Itsy has sports car speed, but SUV roominess with 4 MB of FLASH and 264 KB of SRAM.</p>

<p>ItsyBitsy RP2040 is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (4 of which can be analog in and 16 x PWM out). It’s the same chip as the <a href="https://www.adafruit.com/products/4884">Feather RP2040</a> and <a href="https://www.adafruit.com/products/4883">Raspberry Pi Pico</a> <em>but really really small</em>. So it’s great once you’ve finished up a prototype, and want to make the project much smaller. It even comes with 4MB of SPI Flash built in, for data logging, file storage, or CircuitPython/MicroPython code</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Same size and form-factor as the rest of the <a href="https://www.adafruit.com/category/1008">ItsyBitsy family</a> and nearly-identical pinout</li>
  <li>Measures 1.4” x 0.7” x 0.2” (36 mm x 18 mm x 4 mm) without headers soldered in</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>4 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>23 GPIO pins with following capabilities:
    <ul>
      <li>4 12-bit ADCs (one more than Pico)</li>
      <li>2 I2C, 2 SPI and 2 UART peripherals, we label one for the ‘main’ interface in standard ItsyBitsy locations</li>
      <li>16 PWM outputs - for servos, LEDs, etc</li>
      <li>The 10 digital ‘non-ADC/non-peripheral’ GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> with power pin on GPIO so you can depower it for low power usages.</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts (no unplugging-replugging to relaunch code)</strong></li>
  <li>3.3 V regulator with 500mA peak current output</li>
  <li>3.3 V Power/enable pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Broken-out SWD pins for debug access</li>
  <li>24 MHz crystal for perfect timing.</li>
  <li>Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other 5V-logic devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
  <li><strong>USB Micro B connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader</strong>. What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create <em>custom hardware logic and data processing blocks</em> that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. <a href="https://github.com/raspberrypi/pico-examples/tree/master/pio">Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA</a>! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>At the time of launch, there is no Arduino core support for this board. There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="https://circuitpython.org/downloads">CircuitPython port</a>!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>This Itsy comes with loose 0.1” headers you can solder in for breadboard use!</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board there is 2MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>

<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals
    <ul>
      <li>2 UARTs</li>
      <li>2 SPI controllers</li>
      <li>2 I2C controllers</li>
      <li>16 PWM channels</li>
      <li>USB 1.1 controller and PHY, with host and device support</li>
      <li>8 PIO state machines</li>
    </ul>
  </li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4888">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/adafruit_itsybitsy_rp2040/</guid>
    </item>

    <item>
      <title>MacroPad RP2040</title>
      <link>https://circuitpython.org/blinka/adafruit_macropad_rp2040/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_macropad_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_macropad_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_macropad_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Strap yourself in, we’re launching in T-minus 10 seconds…Destination? A new Class M planet called MACROPAD! M here, stands for Microcontroller because this 3x4 keyboard controller features the newest technology from the Raspberry Pi sector: say hello to the RP2040. It’s speedy little microcontroller with lots of GPIO pins and a 64 times more RAM than the Apollo Guidance Computer. We added 8 MB of flash memory for plenty of storage.</p>

<p>Get ready to upgrade your desk’s mission control station with a CircuitPython or Arduino powered Macropad - complete with 12 buttons, OLED display, speaker and rotary encoder. Customize it for your spacecraft to help guide you through the great reaches of the unknown. (Or just have it type out your favorite emojis.)</p>

<p>Each of the 12 sockets can accept a Cherry MX-compatible key switch. No soldering required, just snap it in! Use any key switch you like - but we recommend ones with slots that will allow the matching twelve NeoPixels underneath to shine through.</p>

<p>This space-ship is also fitted with a 128x64 monochome OLED for a crisp heads-up display that can be used in Arduino or CircuitPython to display keymaps, stats, computer performance, etc. There’s also a rotary encoder with push-button soldered in. Twist and turn it or push to change volume or monitor brightness or scroll: whatever you like! A tiny speaker can give audio feedback or play fun bleepy tunes.</p>

<p>Want to add more hardware? No worries - <a href="https://www.adafruit.com/category/1018">a STEMMA QT port on the side lets you connect any I2C add-on peripherals from the massive STEMMA QT / Qwiic family of plug in boards</a>.</p>

<p><strong>Please note, the RP2040 chip does not currently have QMK support</strong> - this macropad is designed to be programmed in Arduino or CircuitPython! If QMK eventually does add RP2040 as a supported chipset (no ETA and no plans that we know of), we’ll update this page.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li><strong>Raspberry Pi RP2040 Chip + 8MB Flash memory</strong> - Dual core Cortex M0+ at ~130MHz with 264KB or RAM. Runs CircuitPython, Arduino or MicroPython with ease and lots of space for development code and files</li>
  <li><strong>USB C Connector for Power/Data</strong> - of course this can act as an HID device but also can be MIDI, UART, etc.</li>
  <li><strong>3x4 Mechanical key switch sockets</strong> - accepts any Cherry MX-compatible switches. Individually tied to GPIO pins (not matrix wired)</li>
  <li><strong>One NeoPixel RGB LED per switch</strong>, on north side</li>
  <li><strong>Rotary encoder</strong>, 20 detents per rotation, with push-switch on GPIO pin. Push switch is also used for entering bootloader mode when held down on power-up or reset.</li>
  <li><strong>128x64 SH1106 Monochrome OLED display</strong> - On high speed hardware SPI port for quick updates</li>
  <li><strong>8mm Speaker/Buzzer</strong> - With Class D amplifier and RC filter, can be used to make simple beeps and sounds effects.</li>
  <li><strong>STEMMA QT Connector</strong> - Allows adding any I2C sensors/displays/devices with plug-and-play cables.</li>
  <li><strong>Reset button -</strong> On the side, for quick restarting of code</li>
  <li><strong>Four M3 mounting bosses</strong> - Make custom enclosures easily</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5128">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/adafruit_macropad_rp2040/</guid>
    </item>

    <item>
      <title>Trinkey QT2040</title>
      <link>https://circuitpython.org/blinka/adafruit_qt2040_trinkey/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qt2040_trinkey.jpg 300w,
               /assets/images/boards/large/adafruit_qt2040_trinkey.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qt2040_trinkey.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>It’s half USB Key, half Adafruit QT Py, and a lotta RP2040<em>…</em>it’s <strong>Trinkey QT2040</strong>, the circuit board with an RP2040 heart and Stemma QT legs. Folks are loving the <a href="https://www.adafruit.com/product/4900">QT Py 2040</a> we made, but maybe you want something plug-and-play. So we thought, hey what if we made something like that plugs right into your computer’s USB port? And this is what we came up with!</p>

<p>The PCB is designed to slip into any USB A port on a computer or laptop. There’s an RP2040 microcontroller on board with just enough circuitry to keep it happy. There’s an RGB NeoPixel, a reset and bootloader or user button and a STEMMA QT Port on the end. That’s it!</p>

<p>With the body of the board being 1.0” x 0.7” and four mounting holes, you can attach just about any of our QT boards right on (some are a little larger so just check that has the holes in the same locations). <a href="https://www.adafruit.com/product/3658">Use M2.5 sized standoffs and screws</a> to do so, you could use 2 diagonal at a minimum. Then use a <a href="https://www.adafruit.com/product/4399">shorty QT cable</a> and you’ve got a custom sensor Trinkey for any sensor purpose.</p>

<p>The board comes with 8 MB of QSPI flash memory so you can put <em>all</em> of our CircuitPython drivers on the disk!</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Main body is same size/mounting holes as most of our Stemma QT boards (1.0” x 0.7” with M2.5 holes)</li>
  <li>USB Type A connector with extra-thick PCB to fit into a USB host port</li>
  <li>RP2040 32-bit Cortex M0+ dual-core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li>8 MB SPI FLASH chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>Native USB supported by every OS - can be used as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Built-in RGB NeoPixel LED</li>
  <li>STEMMA QT/Qwiic port for I2C connectivity</li>
  <li>3.3 V regulator with 600 mA peak output</li>
  <li>12 MHz crystal</li>
  <li>Both Reset button and Bootloader select buttons for quick restarts (no unplugging-replugging to relaunch code)</li>
  <li>Bootloader button can also be safely used in ‘user’ code</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/5056">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/adafruit_qt2040_trinkey/</guid>
    </item>

    <item>
      <title>QT Py RP2040</title>
      <link>https://circuitpython.org/blinka/adafruit_qtpy_rp2040/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/adafruit_qtpy_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_qtpy_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/adafruit_qtpy_rp2040.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with one of our new favorite chip, the RP2040. It’s been made famous in the new <a href="https://www.adafruit.com/pico">Raspberry Pi Pico</a> <em>and</em> our <a href="http://www.adafruit.com/product/4884">Feather RP2040</a> and <a href="http://www.adafruit.com/product/4888">ItsyBitsy RP2040</a>, but what if we wanted something really <em>smol?</em></p>

<p>A new chip means a new QT Py, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the cuuutie QT Py Treatment”, and so we did! This QT Py features the RP2040, <a href="https://www.adafruit.com/category/4600">and all niceties you know and love about the original QT Py</a></p>

<p>The star of the QT Py is <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>. Having this connector means you don’t need to do any soldering to get started.</p>

<p>What can you pop into the QT port? How about <a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible <a href="https://learn.adafruit.com/introducing-adafruit-stemma-qt">STEMMA QT</a> connectors for the I2C bus so you don’t even need to solder. Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p><strong>At the time of launch, there is no Arduino core support for the chip on this board. There is great <a href="https://github.com/raspberrypi/pico-sdk">C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a <a href="https://circuitpython.org/downloads">CircuitPython port</a>!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think it’s the easiest way to get started</a> and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it to a PCB with a cut out to allow the bottom components some breathing room. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with a controllable power pin to allow for ultra-low-power usage), <strong>and both boot-mode and reset buttons</strong> (great for restarting your program or entering the bootloader). This QT Py comes with loose 0.1” headers you can solder in for breadboard use.</p>

<p>While the RP2040 has lots of onboard RAM (264 KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board there is 4MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 3 MB remaining for code, files, images, fonts, etc.</p>

<ul>
  <li>Same size, form-factor, and pin-out as <a href="https://www.adafruit.com/product/4600">our SAMD-based QT Py</a></li>
  <li><strong>USB-C connector</strong> - <a href="https://www.adafruit.com/product/4299">If you have only Micro B cables, this adapter will come in handy</a>!</li>
  <li><strong>RP2040 32-bit Cortex M0+</strong> dual-core running at ~125 MHz @ 3.3 V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>8 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li><strong>Built-in RGB NeoPixel LED</strong></li>
  <li>13 GPIO pins (11 breakout pads and two QT pads):
    <ul>
      <li><strong>Four</strong> 12 bit ADCs (one more than Pico)</li>
      <li>Two I2C ports (one on the QT connector, one on the breakout pads)</li>
      <li>SPI and UART peripherals, in standard QT Py locations,</li>
      <li>PWM outputs on every IO pin - for servos, LEDs, etc</li>
      <li>There are 6 GPIO in consecutive order for PIO compatibility</li>
    </ul>
  </li>
  <li>3.3 V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf"><strong>600 mA peak output</strong></a></li>
  <li><strong>Both Reset button and Bootloader select buttons</strong> for quick restarts (no unplugging-replugging to relaunch code)</li>
  <li><strong>Really really small</strong></li>
</ul>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader</strong>. What that means is when you want to program new firmware, you can hold down the BOOT button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well, instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create <em>custom hardware logic and data processing blocks</em> that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. <a href="https://github.com/raspberrypi/pico-examples/tree/master/pio">Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA</a>! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4900">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/adafruit_qtpy_rp2040/</guid>
    </item>

    <item>
      <title>SmartEdge Industrial IOT Gateway</title>
      <link>https://circuitpython.org/blinka/avnet_iiot_gateway/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/avnet_iiot_gateway.jpg 300w,
               /assets/images/boards/large/avnet_iiot_gateway.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/avnet_iiot_gateway.jpg" alt="Image of Board" loading="lazy">
<p>By Avnet, Inc.</p> <p>Gateways can be as varied as the devices they help connect, with each gateway needing different protocols, connection methodologies and energy requirements to bring together the myriad of distributed parts that make up the IoT whole. Gateways serve critical functions such as data filtering and security and up to application code. Whether an app on a mobile device, a demo board, or even a connected sensor, gateways are critical to the functioning of the IoT—and Avnet’s deep hardware experience help connect your solutions to the cloud smartly and with security in mind.</p>

<p>SmartEdge Industrial IoT Gateway, powered by Raspberry Pi, helps simplify and accelerate adoption of IIoT applications. The gateway provides versatile connectivity with data intelligence for a wide range of industrial 4.0 applications.</p>

<p>Empower analytics at the edge of your IoT network with the intelligent Dell Edge Gateway for richer business insights. An edge gateway connects varied wired and wireless devices and systems, aggregates and analyzes the input, and sends it on. Because the gateway sits close to your devices and sensors, it sends only meaningful data to the cloud or control center, saving you expensive bandwidth.</p>

<ul>
  <li>Broadcom BCM2837 SoC, 64-bit, Quad-core ARM Cortex-A53 processor running up to 900 MHz + 1GB LPDDR2 SDRAM for data</li>
  <li>Robust program storage with 8GB eMMC Flash pre-programmed with a secure boot version of the Raspbian Linux OS</li>
  <li>On-Board Trusted Platform Module TPM 2.0 module for comprehensive end-to-end security</li>
  <li>HDMI output for driving a display with outstanding 1080p video processing</li>
  <li>Same Raspberry Pi 40-pin GPIO header compatible with your favorite for HATs</li>
  <li>WiFi 2.4GHz and Bluetooth (BLE) 4.2 wireless connectivity with internal antennas</li>
  <li>Dual USB 2.0 Ports, Dual 10/100 Ethernet ports and mPCIe slot for a cellular card</li>
  <li>Terminal blocks for Isolated RS-232/485/Modbus, CAN, Digital I/O and 12 to 24VDC power</li>
  <li>On-Board battery backed real-time clock (RTC) and watchdog timer</li>
  <li>Can be mounted on DIN rail, direct on wall/panel, or free standing</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newark.com/avnet/avtse-rpi-iiotg/smartedge-industrial-iot-gateway/dp/02AH6799">Newark</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/avnet_iiot_gateway/</guid>
    </item>

    <item>
      <title>Banana Pi BPI-M2+</title>
      <link>https://circuitpython.org/blinka/banana_pi_bpi_m2_plus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/banana_pi_bpi_m2_plus.jpg 300w,
               /assets/images/boards/large/banana_pi_bpi_m2_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/banana_pi_bpi_m2_plus.jpg" alt="Image of Board" loading="lazy">
<p>By SinoVoip</p> <p>Banana PI BPI-M2+ is the open source hardware platform, use Alliwnner H3 (option H2+ chip and H5 chip ) chip on board. and mini size only 65mm*65mm,</p>

<p>PBI-M2 hardware: 1Ghz ARM7 quad-core processor, 1GB DDR3 SDRAM, 8G eMMC flash on board,and SDIO wifi&amp;BT 4.0 moodule on board.Gigabit ethrnet.</p>

<p>BPI-M2+ series run Android,Debian linux,Ubuntu linux, Raspberry Pi image and others image. Banana PI,it can easily run with the game it support 1080P high definition video output and 4K support, the GPIO compatible with Raspberry Pi B+ .</p>

<p>Banana Pi BPI-M2+ not support sata port, so you need use USB for hardisk</p>

<ul>
  <li>Allwinner H3 Quad-core 1.2GHz Cortex-A7 (option H2+ H5).</li>
  <li>1GB DDR3</li>
  <li>8GB eMMC onboard</li>
  <li>HDMI out</li>
  <li>WiFi and BlueTooth onboard</li>
  <li>10/100/1000Mbps Ethernet Port</li>
  <li>CSI camera interface</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.us/item/2252799815676798.html">Aliexpress</a></li>
  <li><a href="https://amzn.to/3CFghTl">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 16 Oct 2022 20:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/banana_pi_bpi_m2_plus/</guid>
    </item>

    <item>
      <title>Banana Pi BPI-M2 Zero</title>
      <link>https://circuitpython.org/blinka/banana_pi_bpi_m2_zero/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/banana_pi_m2_zero.jpg 300w,
               /assets/images/boards/large/banana_pi_m2_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/banana_pi_m2_zero.jpg" alt="Image of Board" loading="lazy">
<p>By SinoVoip</p> <p>The Banana Pi M2 Zero is an ultra compact single board computer which measures only 60mm*30mm. Its external interfaces are the same as the Raspberry Pi Zero W, and it will fit almost all cases and accessories for the Zero W. It uses the quad-core Cortex A7 Allwinner H2+ processor, with 512MB RAM. It’s ideal for light-weight systems and space-limited applications. Like other members of the Banana Pi family, it supports both Linux and Android operating systems.</p>

<ul>
  <li>H2+ Quad-core Cortex-A7</li>
  <li>Mali 400 MP2</li>
  <li>512M DDR3</li>
  <li>MicroSD slot</li>
  <li>Wi-Fi 802.11 b/g/n</li>
  <li>Bluetooth 4.0</li>
  <li>Mini HDMI</li>
  <li>1 x USB 2.0 OTG</li>
  <li>GPIO (x28)</li>
  <li>Power (+5V, +3.3V and GND)</li>
  <li>UART, I2C, SPI or PWM</li>
  <li>65mm × 30mm, 15g</li>
  <li>Android and Linux</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/33038926185.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 30 Oct 2020 20:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/banana_pi_bpi_m2_zero/</guid>
    </item>

    <item>
      <title>Banana Pi BPI-M5</title>
      <link>https://circuitpython.org/blinka/banana_pi_bpi_m5/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/banana_pi_bpi_m5.jpg 300w,
               /assets/images/boards/large/banana_pi_bpi_m5.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/banana_pi_bpi_m5.jpg" alt="Image of Board" loading="lazy">
<p>By SinoVoip</p> <p>Banana Pi BPI-M5 is the next generation single board computer from Banana Pi in 2020. It is powered by Amlogic S905X3 quad-core Cortex-A55 (2.0 XXGHz) processor.Onboard 4GB LPDDR4 memory and 16GB EMMC storage, and supports 4 USB 3.0 interface, a gigabit network port.</p>

<ul>
  <li>CPU: Amlogic S905X3 Quad-Core Cortex-A55 (2.0xxGHz)</li>
  <li>GPU: Mali-G31 MP2 GPU with 4 x Execution Engines (650Mhz)</li>
  <li>Memory  : 4 GB LPDDR4</li>
  <li>Storage : MicroSD slot with support for up to 256GB expansion and 16G eMMC flash with support for up to 64GB</li>
  <li>Network : 10/100/1000 Mbit/s Ethernet ,Optional WiFi USB dongle</li>
  <li>Video Output(s): 1 x HDMI 2.1 (up to 4K@60Hz with HDR, CEC, EDID)</li>
  <li>Audio Output(s): 3.5mm jack and 1 x HDMI digital output</li>
  <li>USB ports: USB 3.0 PORT (x4)</li>
  <li>GPIO: 40 Pin Header : GPIO (x28) and Power (+5V, +3.3V and GND). GPIO pins can be used for UART, I2C, SPI or PWM</li>
  <li>Switches: Reset, Power and U-boot</li>
  <li>LED: Power Status and Activity status</li>
  <li>Power Source: 5 volt @3A via Micro USB (TYPE C)</li>
  <li>Size &amp; Weight  : 92x60mm, 48g</li>
  <li>OS : Android and Linux</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://amzn.to/3CpbK8X">Amazon</a></li>
  <li><a href="https://www.aliexpress.com/item/3256801685527943.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 22 Jul 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/banana_pi_bpi_m5/</guid>
    </item>

    <item>
      <title>BeagleBone</title>
      <link>https://circuitpython.org/blinka/beaglebone/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone.jpg 300w,
               /assets/images/boards/large/beaglebone.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleBoard</p> <p>BeagleBone is an $89 MSRP, credit-card-sized Linux computer that connects to the Internet and runs software such as Android 4.0 and Ubuntu. With plenty of I/O and processing power for real-time analysis provided by an AM335x 720MHz ARM® processor, BeagleBone can be complemented with cape plug-in boards to augment functionality.</p>

<ul>
  <li>256MB DDR2 RAM</li>
  <li>3D graphics accelerator</li>
  <li>ARM Cortex-M3 for power management</li>
  <li>2x PRU 32-bit RISC CPUs</li>
  <li>USB client: power, debug and device</li>
  <li>USB host</li>
  <li>Ethernet</li>
  <li>2x 46 pin headers</li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone/</guid>
    </item>

    <item>
      <title>BeagleBone AI</title>
      <link>https://circuitpython.org/blinka/beaglebone_ai/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_ai.jpg 300w,
               /assets/images/boards/large/beaglebone_ai.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_ai.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleBoard</p> <p>Built on the proven BeagleBoard.org® open source Linux approach, BeagleBone® AI fills the gap between small SBCs and more powerful industrial computers. Based on the Texas Instruments AM5729, developers have access to the powerful SoC with the ease of BeagleBone® Black header and mechanical compatibility. BeagleBone® AI makes it easy to explore how artificial intelligence (AI) can be used in everyday life via the TI C66x digital-signal-processor (DSP) cores and embedded-vision-engine (EVE) cores supported through an optimized TIDL machine learning OpenCL API with pre-installed tools. Focused on everyday automation in industrial, commercial and home applications.</p>

<ul>
  <li>Processor: Sitara AM5729</li>
  <li>Dual Arm® Cortex®-A15 microprocessor subsystem</li>
  <li>2 C66x floating-point VLIW DSPs</li>
  <li>2.5MB of on-chip L3 RAM</li>
  <li>2x dual Arm® Cortex®-M4 co-processors</li>
  <li>4x Embedded Vision Engines (EVEs)</li>
  <li>2x dual-core Programmable Real-Time Unit and Industrial Communication SubSystem (PRU-ICSS)</li>
  <li>2D-graphics accelerator (BB2D) subsystem</li>
  <li>Dual-core PowerVR® SGX544™ 3D GPU</li>
  <li>IVA-HD subsystem (4K @ 15fps encode and decode support for H.264, 1080p60 for others)</li>
  <li>BeagleBone Black mechanical and header compatibility</li>
  <li>1GB RAM and 16GB on-board eMMC flash with high-speed interface</li>
  <li>USB type-C for power and superspeed dual-role controller; and USB type-A host</li>
  <li>Gigabit Ethernet, 2.4/5GHz WiFi, and Bluetooth</li>
  <li>microHDMI</li>
  <li>Zero-download out-of-box software experience with Debian GNU/Linux</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/en/products/detail/beagleboard-org/BBONE-AI/10671097">DigiKey</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 20 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_ai/</guid>
    </item>

    <item>
      <title>BeagleBone Black</title>
      <link>https://circuitpython.org/blinka/beaglebone_black/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_black.jpg 300w,
               /assets/images/boards/large/beaglebone_black.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_black.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleBoard</p> <p>If you liked the BeagleBone Black Rev B, you will love the Rev C! The Rev C has a blistering 1GHz AM3358 processor and 512MB onboard DDR3 RAM, two 46-pin headers, micro HDMI for audio/video output, USB ports, 10/100 Ethernet and other I/O features. The Rev C is an ultra-powered embedded computer that can fit in a mint tin.</p>

<p>This model includes 4GB of eMMC built-in storage instead of the Rev B’s 2GB. With the doubled storage and faster eMMC, the developers were able to make the Rev C’s most significant change: shipping the BeagleBone Black with Debian Linux pre-loaded on the board’s flash instead of Angstrom Linux. Debian Linux is a more user-friendly operating system than Angstrom and the switch to Debian is partly the result of consumer demand (especially from Adafruit users, thanks!)</p>

<p>Of course the BeagleBone Black Rev C is an open board so if you want to load it back up with Angstrom or other Linux-based distributions like Ubuntu or Android, you can.</p>

<p>The rev C comes with a mini-B cable for powering it up ASAP. No microSD card is included as the BBB has onboard flash storage - and no SD card loading is required to get started. Please note the PCB may say rev B, that’s normal! The rev C has more memory which did not affect the PCB revision code.</p>

<ul>
  <li>Processor: Sitara AM3358BZCZ100 1GHz, 2000 MIPS</li>
  <li>Graphics Engine: SGX530 3D, 20M Polygons/S</li>
  <li>SDRAM Memory: 512MB DDR3L 606MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC</li>
  <li>PMIC: TPS65217C PMIC regulator and one additional LDO.</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source: miniUSB USB or DC Jack, 5VDC External Via Expansion Header</li>
  <li>PCB: 86.44mm x 54.54mm / 3.4” x 2.15” 6 layers</li>
  <li>88.98mm x 54.54mm x 15.41mm / 3.5” x 2.15” x 0.6”</li>
  <li>Indicators 1-Power, 2-Ethernet, 4-User Controllable LEDs</li>
  <li>HiSpeed USB 2.0 Client Port: Access to USB0, Client mode via miniUSB</li>
  <li>HiSpeed USB 2.0 Host Port Access to USB1, Type A Socket, 500mA LS/FS/HS</li>
  <li>Serial Port UART0 access via 6 pin 3.3V TTL Header. Header is populated</li>
  <li>Ethernet 10/100, RJ45</li>
  <li>SD/MMC Connector microSD , 3.3V</li>
  <li>User Input: Reset Button, Boot Button, Power Button</li>
  <li>Video Out: 16b HDMI, 1280x1024 (MAX), 1024x768,1280x720,1440x900 w/EDID Support</li>
  <li>Audio Via HDMI Interface, Stereo</li>
  <li>Expansion Connectors:</li>
  <li>Power 5V, 3.3V , VDD_ADC(1.8V)</li>
  <li>3.3V I/O on all signals</li>
  <li>McASP0, SPI1, I2C, GPIO(65), LCD, GPMC, MMC1, MMC2, 7 AIN(1.8V MAX), 4 Timers, 3 Serial Ports, CAN0, EHRPWM(0,2),XDMA Interrupt, Power button, Expansion Board ID (Up to 4 can be stacked)</li>
  <li>Weight 40.55g / 1.43oz</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/1996">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black/</guid>
    </item>

    <item>
      <title>BeagleBone Black Industrial</title>
      <link>https://circuitpython.org/blinka/beaglebone_black_industrial/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_black_industrial.jpg 300w,
               /assets/images/boards/large/beaglebone_black_industrial.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_black_industrial.jpg" alt="Image of Board" loading="lazy">
<p>By Element14</p> <p>The element14 BeagleBone Black Industrial (BBONE-BLACK-IND-4G) is a low cost, high-expansion focused BeagleBoard using a low cost industrial temperature grade Sitara™ AM3358 ARM® Cortex™-A8 processor from Texas Instruments. BBONE-BLACK-IND-4G ships with the Debian Linux distribution preinstalled on the onboard FLASH, ready to start evaluation and development.</p>

<ul>
  <li>Processor: TI Sitara AM3358BZCZA100, 1GHz, 2000 MIPS 1 GHz ARM®Cortex™-A8</li>
  <li>SGX530 Graphics Engine</li>
  <li>Programmable Real-Time Unit Subsystem</li>
  <li>Operating temperature can span from -40C to +85C</li>
  <li>Memory SDRAM: 512MB DDR3L 800MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC (eMMC)</li>
  <li>SD/MMC Connector for microSD</li>
  <li>Power management:TPS65217C PMIC is used along with a separate LDO to provide power to the system</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source miniUSB USB or DC Jack</li>
  <li>5VDC External Via Expansion Header</li>
  <li>Connectivity High speed USB 2.0 Client port: Access to USB0, Client mode via miniUSB</li>
  <li>User Input / Output Reset Button</li>
  <li>Video/Audio Interfaces HDMI D type interface</li>
  <li>Expansion Interfaces LCD, UART, eMMC</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newark.com/element14/bbone-black-ind-4g/beaglebone-black-industrial/dp/76Y2810">Newark</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black_industrial/</guid>
    </item>

    <item>
      <title>BeagleBone Black Wireless</title>
      <link>https://circuitpython.org/blinka/beaglebone_black_wireless/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_black_wireless.jpg 300w,
               /assets/images/boards/large/beaglebone_black_wireless.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_black_wireless.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleBoard</p> <p>Replacing the 10/100 Ethernet port with onboard 802.11 b/g/n 2.4GHz WiFi and Bluetooth, the popular open source BeagleBone® Black computer now comes with built-in wireless networking capability. Leveraging a partnership with Octavo Systems and designed in CadSoft Eagle, BeagleBone® Black Wireless is the easiest to use and modify credit-card sized IoT Linux computer available.</p>

<ul>
  <li>Processor: Octavo Systems OSD3358 1GHz ARM Cortex-A8</li>
  <li>512MB DDR3 RAM</li>
  <li>4GB 8-bit eMMC on-board flash storage</li>
  <li>3D graphics accelerator</li>
  <li>NEON floating-point accelerator</li>
  <li>2x PRU 32-bit microcontrollers</li>
  <li>USB client for power &amp; communications</li>
  <li>USB host</li>
  <li>802.11b/g/n and Bluetooth 4.1 plus BLE</li>
  <li>HDMI</li>
  <li>2x 46 pin headers</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/products/en?lang=en&amp;site=us&amp;KeyWords=BBBWL-SC-562-ND">Digi-Key</a></li>
  <li><a href="https://www.arrow.com/en/products/bbwireless/beagleboardorg">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black_wireless/</guid>
    </item>

    <item>
      <title>BeagleBone Green Gateway</title>
      <link>https://circuitpython.org/blinka/beaglebone_green_gateway/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_green_gateway.jpg 300w,
               /assets/images/boards/large/beaglebone_green_gateway.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_green_gateway.jpg" alt="Image of Board" loading="lazy">
<p>By SeeedStudio</p> <p>Seeed Studio BeagleBone® Green Gateway is a low cost, open-source, community supported development platform for developers and hobbyists. It is a joint effort by BeagleBoard.org and Seeed Studio. It is based on the classical open-source hardware design of BeagleBone® Black and developed into this differentiated version. The Seeed Studio BeagleBone® Green Gateway includes two Grove connectors, making it easier to connect to the large family of Grove sensors. The on-board HDMI and Ethernet are removed to make room for these wireless features and Grove connectors.</p>

<p>The Seeed Studio BeagleBone® Green Gateway is a combination of Seeed Studio BeagleBone® Green and Seeed Studio BeagleBone® Green Wireless, equipped with both Ethernet and Wireless connectivity.</p>

<p>Boot Linux in less 10 seconds and get started on development in less than 5 minutes with just a single USB cable.</p>

<ul>
  <li>Fully Compatible with BeagleBone® Black and Seeed Studio BeagleBone® Green</li>
  <li>Processor: AM3358 1GHz ARM® Cortex-A8</li>
  <li>2×32-bit 200-MHz programmable real-time units (PRUs)</li>
  <li>512MB DDR3 RAM</li>
  <li>4KB EEPROM</li>
  <li>4GB 8-bit eMMC on-board flash storage</li>
  <li>3D graphics accelerator</li>
  <li>NEON floating-point accelerator</li>
  <li>Ethernet 10/100M bit</li>
  <li>WiFi 802.11 b/g/n 2.4GHz</li>
  <li>USB client for power &amp; communications</li>
  <li>USB host</li>
  <li>SD/MMC Connector for microSD</li>
  <li>Bluetooth 4.1 with BLE</li>
  <li>2x 46 pin headers</li>
  <li>2x Grove connectors (I2C and UART)</li>
  <li>DC Jack for power, 12V</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/SeeedStudio-BeagleBone-Green-Gateway-p-4586.html">SeeedStudio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 01 Nov 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_green_gateway/</guid>
    </item>

    <item>
      <title>BeagleBone Green Wireless</title>
      <link>https://circuitpython.org/blinka/beaglebone_green_wireless/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglebone_green_wireless.jpg 300w,
               /assets/images/boards/large/beaglebone_green_wireless.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglebone_green_wireless.jpg" alt="Image of Board" loading="lazy">
<p>By SeeedStudio</p> <p>SeeedStudio BeagleBone Green Wireless (BBGW) is a joint effort by BeagleBoard.org and Seeed Studio. It is based on the open-source hardware design of BeagleBone Black and developed into this differentiated version. SeeedStudio BeagleBone Green Wireless has included a high-performance flexible WiFi/Bluetooth interface and two Grove connectors, making it easier to connect to the large family of Grove sensors. The on-board HDMI and Ethernet are removed to make room for these wireless features and Grove connectors.</p>

<ul>
  <li>Processor: Sitara AM3358BZCZ100 1GHz, 2000 MIPS</li>
  <li>Graphics Engine: SGX530 3D, 20M Polygons/S</li>
  <li>SDRAM Memory: 512MB DDR3L 606MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC</li>
  <li>PMIC: TPS65217C PMIC regulator and one additional LDO.</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source: miniUSB USB or DC Jack, 5VDC External Via Expansion Header</li>
  <li>PCB: 86.44mm x 54.54mm / 3.4” x 2.15” 6 layers</li>
  <li>88.98mm x 54.54mm x 15.41mm / 3.5” x 2.15” x 0.6”</li>
  <li>Indicators 1-Power, 2-Ethernet, 4-User Controllable LEDs</li>
  <li>4x USB2.0 host</li>
  <li>Serial Port UART0 access via 6 pin 3.3V TTL Header. Header is populated</li>
  <li>Wi-Fi 802.11b/g/n 2.4GHz and Bluetooth 4.1 LE</li>
  <li>SD/MMC Connector microSD , 3.3V</li>
  <li>User Input: Reset Button, Boot Button, Power Button</li>
  <li>Video Out: 16b HDMI, 1280x1024 (MAX), 1024x768,1280x720,1440x900 w/EDID Support</li>
  <li>Audio Via HDMI Interface, Stereo</li>
  <li>Expansion Connectors:</li>
  <li>Power 5V, 3.3V , VDD_ADC(1.8V)</li>
  <li>3.3V I/O on all signals</li>
  <li>McASP0, SPI1, I2C, GPIO(65), LCD, GPMC, MMC1, MMC2, 7 AIN(1.8V MAX), 4 Timers, 3 Serial Ports, CAN0, EHRPWM(0,2),XDMA Interrupt, Power button, Expansion Board ID (Up to 4 can be stacked)</li>
  <li>Weight 40.55g / 1.43oz</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/BeagleBone-Green-Wireless-Development-Board-TI-AM335x-WiFi-BT.html">SeeedStudio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_green_wireless/</guid>
    </item>

    <item>
      <title>BeagleV Starlight Beta Prototype</title>
      <link>https://circuitpython.org/blinka/beaglev_starlight/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/beaglev_starlight.jpg 300w,
               /assets/images/boards/large/beaglev_starlight.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/beaglev_starlight.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleV</p> <p><strong>The BeagleV™ - Starlight project has concluded and no units beyond the beta prototypes will be produced. This design was never sold as a product.</strong></p>

<p><a href="https://beagleboard.org/beaglev">BeagleV Starlight</a> is a Linux-capable RISC-V 64-bit dev board.</p>

<p>A <a href="https://wiki.seeedstudio.com/BeagleV-Getting-Started/#faq">beta prototype version</a> was sent to a limited number of upstream developers for software enablement.  This beta prototype used the StarFive JH7100 SoC.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/beagleboard/beaglev-starlight#readme">GitHub</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 17 Jul 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglev_starlight/</guid>
    </item>

    <item>
      <title>Nova</title>
      <link>https://circuitpython.org/blinka/binho_nova/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/binho_nova.jpg 300w,
               /assets/images/boards/large/binho_nova.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/binho_nova.jpg" alt="Image of Board" loading="lazy">
<p>By Binho</p> <p>The Binho Nova brings Multi-Protocol USB Host Adapters into the 21st Century. No more fumbling through development with cumbersome, clunky, out-dated adapters. Let your productivity soar to new heights!</p>

<p>With support for I2C, SPI, UART, 1-WIRE, SWI protocols all in one slim, robust package, it may even be the last adapter you’ll ever need…</p>

<p>With an intuitive user interface, our software is the quickest, simplest way to get up and running with your new Binho Nova. Whether you’re working in a Windows, Linux, or macOS environment, our cross-platform solution has you covered. Alpha build available now with I2C, SPI, and IO functionality.</p>

<ul>
  <li>Support for SPI @ 12MHz max clock</li>
  <li>Support for I2C @ 3.4MHz max clock</li>
  <li>Support for UART @ 1000000 max baud</li>
  <li>Support for Dallas 1-Wire</li>
  <li>Support for Atmel Single-Wire Interface</li>
  <li>Provides 3v3 and VUSB power rails</li>
  <li>1 x DAC Output, 5 x ADC Inputs</li>
  <li>GPIO / Interrupt / PWM Support</li>
  <li>Programmable RGB Status LED</li>
  <li>Field-Upgradeable Device Firmware</li>
  <li>Cross-platform Support for Windows,
Mac, Linux</li>
  <li>Robust, low-profile Aluminum
Enclosure</li>
  <li>USB Type-C Connector</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4459">Adafruit</a></li>
  <li><a href="https://binho.io/">Binho</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/binho_nova/</guid>
    </item>

    <item>
      <title>Clara AGX Xavier</title>
      <link>https://circuitpython.org/blinka/clara_agx_xavier/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/clara_agx_xavier.jpg 300w,
               /assets/images/boards/large/clara_agx_xavier.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/clara_agx_xavier.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>The NVIDIA Clara AGX™ developer kit delivers real-time AI and imaging for medical devices. By combining low-powered, NVIDIA Xavier SOC (system on a chip) and RTX GPUs with the NVIDIA Clara AGX SDK and the NVIDIA EGX stack, it’s easy to securely provision and remotely manage fleets of distributed medical instruments.</p>

<p>The NVIDIA Clara AGX™ developer kit is an embedded AI computer and software development framework for medical devices that need the ability to perform real-time AI and advanced image, video, and signal processing. Powered by ARM-based NVIDIA Xavier™ along with RTX GPUs and running the NVIDIA EGX software stack, Clara AGX securely manages and orchestrates AI application deployments to fleets of medical devices or edge nodes.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://developer.nvidia.com/clara-agx-devkit">NVIDIA</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 06 Oct 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/clara_agx_xavier/</guid>
    </item>

    <item>
      <title>ClockworkPi</title>
      <link>https://circuitpython.org/blinka/clockworkpi/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/clockworkpi.jpg 300w,
               /assets/images/boards/large/clockworkpi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/clockworkpi.jpg" alt="Image of Board" loading="lazy">
<p>By Clockwork Tech LLC</p> <p>New clockworkPi v3.1 development board:</p>
<ul>
  <li>Allwinner R16-J Quad-core Cortex-A7 CPU @1.2GHz</li>
  <li>Mali-400 MP2 GPU</li>
  <li>1GB DDR3 memory</li>
  <li>WI-FI 802.11b/g/n &amp; Bluetooth v4.0</li>
  <li>Micro HDMI output (720P)</li>
  <li>Micro SD card slot (Support up to 128GB)</li>
  <li>PMU (Power Management Unit)</li>
  <li>USB OTG supported</li>
  <li>Ultra-small size (67.6 * 47.6 * 6.8mm)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.clockworkpi.com/product-page/cpi-v3-1">ClockworkPi</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/clockworkpi/</guid>
    </item>

    <item>
      <title>Piunora</title>
      <link>https://circuitpython.org/blinka/diodes_delight_piunora/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/diodes_delight_piunora.jpg 300w,
               /assets/images/boards/large/diodes_delight_piunora.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/diodes_delight_piunora.jpg" alt="Image of Board" loading="lazy">
<p>By Diodes Delight</p> <p>Piunora is a compact, easy-to-use development board for electronics prototyping with Linux. It has a familiar form factor, legible pin labels, and a design that’s well suited to space-constrained applications.</p>

<p>As a carrier board for the <a href="https://www.raspberrypi.org/products/compute-module-4/?variant=raspberry-pi-cm4001000">Raspberry Pi Compute Module 4</a> (CM4), Piunora is essentially a tiny version of the Raspberry Pi 4 Single Board Computer (SBC) with added flexibility to accommodate custom form factors. CM4-based devices like Piunora are fully compatible with software that was written for the Raspberry Pi 4, as long as that software accounts for the hardware peripherals in use. There are also versions of the CM4 that include eMMC memory, which is more reliable than a traditional SD card.</p>

<p>It may be small, but Piunora is packed with powerful peripherals that will come in handy for rapid prototyping and embedded machine-learning applications. Examples include an HDMI port, camera-input connectors, and PCI-e support, which is not present on a standard Raspberry Pi 4. Finally, the M.2 B-Key port on the rear of the board is not only useful for SSD storage, it can also host a diverse range of PCI-e expansion boards.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/diodes-delight/piunora">Crowd Supply</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/diodes_delight_piunora/</guid>
    </item>

    <item>
      <title>Dragonboard 410c</title>
      <link>https://circuitpython.org/blinka/dragonboard_410c/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/dragonboard_410c.jpg 300w,
               /assets/images/boards/large/dragonboard_410c.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/dragonboard_410c.jpg" alt="Image of Board" loading="lazy">
<p>By Arrow Electronics</p> <p>The DragonBoard 410c, a product of Arrow Electronics, is the development board based on the mid-tier Qualcomm® APQ8016E processor. It features advanced processing power, Wi-Fi, Bluetooth connectivity, and GPS, all packed into a board the size of a credit card.</p>

<p>This DragonBoard™ 410c based on 96Boards™ specification features the Qualcomm® Snapdragon™ 410 processor, a Quad-core ARM® Cortex™ A53 at up to 1.2GHz clock speed per core, capable of 32-bit and 64-bit operation.96Boards is a 32-bit and 64-bit ARM® Open Platform hosted by Linaro™ with the intension to serve the software/ maker and embedded OEM communities.DragonBoard 410c supports Android 5.1, Linux based on Debian and Win10 IoT Core advanced processing power, WLAN, Bluetooth, and GPS, all packed into a board the size of a credit card. It is designed to support feature-rich functionality, including multimedia, with the Qualcomm® Adreno™ 306 GPU, integrated ISP with up to 13 MP camera support, and 1080p HD video playback and capture with H.264 (AVC).</p>

<ul>
  <li>Qualcomm APQ8016E</li>
  <li>ARM Cortex-A53 Quad-core up to 1.2 GHz per core</li>
  <li>Qualcomm Adreno 306 @ 400MHz</li>
  <li>PC-class graphics with support for Advanced APIs</li>
  <li>Supports OpenGL ES 3.0, OpenCL, DirectX, and content security</li>
  <li>1GB LPDDR3 SDRAM @ 533MHz</li>
  <li>8GB eMMC 4.51 on board storage</li>
  <li>MicroSD card slot</li>
  <li>USB 2.0 expansion</li>
  <li>WLAN 802.11 b/g/n 2.4 GHz</li>
  <li>Bluetooth 4.1, GPS</li>
  <li>On board GPS, BT and WLAN antennas</li>
  <li>2 x USB 2.0 Host 1 x USB 2.0 OTG</li>
  <li>1 x HDMI 1.4 (Type A - full)</li>
  <li>1 x MIPI-DSI HDMI output up to FHD 1080P</li>
  <li>1080p@30fps HD video playback and capture with H.264 (AVC)</li>
  <li>720p playback with H.265 (HEVC)</li>
  <li>PCM/AAC+/MP3/WMA, ECNS, Audio+ post-processing</li>
  <li>Integrated ISP with support for image sensors up to 13MP</li>
  <li>40 pin low speed expansion connector</li>
  <li>60 pin high speed expansion connector</li>
  <li>6 x LED: 4xUser controlled, 2xRadio(BT and WLAN activity)</li>
  <li>Power/Reset and Volume Up/down</li>
  <li>8V~18V@3A</li>
  <li>Plug specification is inner diameter 1.7mm and outer diameter 4.8mm</li>
  <li>Ubuntu 16.04 or Android 6.0 Marshmallow based on Kernel 3.14LTS</li>
  <li>Android / Linux / Windows IoT Core Support</li>
  <li>85mm x 54mm</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/dragonboard410c/arrow-development-tools">Arrow Electronics</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 29 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/dragonboard_410c/</guid>
    </item>

    <item>
      <title>FT232H</title>
      <link>https://circuitpython.org/blinka/ft232h/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/ft232h.jpg 300w,
               /assets/images/boards/large/ft232h.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/ft232h.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Wouldn’t it be cool to drive a tiny OLED display, read a color sensor, or even just flash some LEDs directly from your computer?  Sure you can program an Arduino or Trinket to talk to these devices and your computer, but why can’t your computer just talk to those devices and sensors itself?  Well, now your computer can talk to devices using the Adafruit FT232H breakout board!</p>

<p>What can the FT232H chip do?  This chip from FTDI is similar to their USB to serial converter chips but adds a ‘multi-protocol synchronous serial engine’ which allows it to speak many common protocols like SPI, I2C, serial UART, JTAG, and more!  There’s even a handful of digital GPIO pins that you can read and write to do things like flash LEDs, read switches or buttons, and more.  The FT232H breakout is like adding a little swiss army knife for serial protocols to your computer!</p>

<p>This chip is powerful and useful to have when you want to use Python (for example) to quickly iterate and test a device that uses I2C, SPI or plain general purpose I/O. There’s no firmware to deal with, so you don’t have to deal with how to “send data to and from an Arduino which is then sent to and from” an electronic sensor or display or part.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2264">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 30 Sep 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/ft232h/</guid>
    </item>

    <item>
      <title>Giant Board</title>
      <link>https://circuitpython.org/blinka/giant_board/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/giant_board.jpg 300w,
               /assets/images/boards/large/giant_board.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/giant_board.jpg" alt="Image of Board" loading="lazy">
<p>By Groboards</p> <p>The Giant Board is a super tiny single-board computer (SBC) based on the Adafruit Feather form factor. We always want more power in a smaller package, and the Giant Board delivers! It provides a small, powerful platform that is compatible with a wide range of pre-existing accessories. FeatherWing support makes the Giant Board a flexible, drop-in component for most Feather based projects.</p>

<p>We all love our microcontrollers, but in some cases they just don’t have the resources we need to carry out the projects we have in mind. By squeezing the power of an SBC into a package the size of a microcontroller board, the Giant Board relaxes memory, storage, and processing constraints and allows you to take your projects to the next level.</p>

<p>The Giant Board fills the gap between microcontrollers and other single-board computers. It makes a great alternative to a Raspberry Pi or BeagleBone in a space constrained project where you need more power than a typical microcontroller can provide. The Giant Board is based on a form factor that is traditionally used for microcontrollers, so power consumption is important, which is why the Giant Board offers low-power modes.</p>

<p>To leverage all that powerful hardware, the Giant Board runs Linux. Not just any Linux, but full Debian Linux! This gives developers and users access to an endless number of applications and libraries for their projects.</p>

<ul>
  <li>Processor: Microchip SAMA5D2 ARM® Cortex®-A5 Processor 500 MHz</li>
  <li>Memory: 128 MB DDR2 RAM</li>
  <li>Storage: microSD card</li>
  <li>Sensing: 6 x 12-bit ADC with 3.3 V reference and external trigger</li>
  <li>Actuation: 4 x 16-bit PWM with external trigger</li>
  <li>Connectivity: 1 x I²C, 1 x SPI, 1 x UART, more with Flexcom</li>
  <li>Power: via USB, with support for LiPo batteries</li>
  <li>Operating System: mainline Linux kernel</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/groboards/giant-board">Crowd Supply</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/giant_board/</guid>
    </item>

    <item>
      <title>Google Coral Dev Board</title>
      <link>https://circuitpython.org/blinka/google_coral/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/google_coral.jpg 300w,
               /assets/images/boards/large/google_coral.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/google_coral.jpg" alt="Image of Board" loading="lazy">
<p>By Google</p> <p>A development board to quickly prototype on-device ML products. Scale from prototype to production with a removable system-on-module (SOM).</p>

<h3 id="edge-tpu-module">Edge TPU Module</h3>

<ul>
  <li>CPU: NXP i.MX 8M SOC (quad Cortex-A53, Cortex-M4F)</li>
  <li>GPU: Integrated GC7000 Lite Graphics</li>
  <li>ML accelerator: Google Edge TPU coprocessor</li>
  <li>RAM: 1 GB LPDDR4</li>
  <li>Flash memory: 8 GB eMMC</li>
  <li>Wireless: Wi-Fi 2x2 MIMO (802.11b/g/n/ac 2.4/5 GHz) Bluetooth 4.1</li>
  <li>Dimensions: 48 mm x 40 mm x 5 mm</li>
</ul>

<h3 id="baseboard">Baseboard</h3>

<ul>
  <li>Flash memory MicroSD slot</li>
  <li>USB: USB-C OTG, USB-C power, Type-A 3.0 host,  Micro-B serial console</li>
  <li>LAN: Gigabit Ethernet port</li>
  <li>Audio: 3.5 mm audio jack (CTIA compliant) Digital PDM microphone (x2) 2.54 mm 4-pin terminal for stereo speakers</li>
  <li>Video: HDMI 2.0a (full size) 39-pin FFC connector for MIPI-DSI display (4-lane) 24-pin FFC connector for MIPI-CSI2 camera (4-lane)</li>
  <li>GPIO: 3.3 V power rail 40 - 255 ohm programmable impedance ~82 mA max current</li>
  <li>Power: 5 V DC (USB-C)</li>
  <li>Dimensions:	88 mm x 60 mm x 24mm</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://coral.withgoogle.com/products/dev-board">Google</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 13 May 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/google_coral/</guid>
    </item>

    <item>
      <title>Google Coral Dev Board Mini</title>
      <link>https://circuitpython.org/blinka/google_coral_mini/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/google_coral_mini.jpg 300w,
               /assets/images/boards/large/google_coral_mini.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/google_coral_mini.jpg" alt="Image of Board" loading="lazy">
<p>By Google</p> <p>The Coral Dev Board Mini is a single-board computer that provides fast machine learning (ML) inferencing in a small form factor. It’s primarily designed as an evaluation device for the Accelerator Module (a surface-mounted module that provides the Edge TPU), but it’s also a fully-functional embedded system you can use for various on-device ML projects.</p>

<ul>
  <li>CPU	MediaTek 8167s SoC (Quad-core Arm Cortex-A35)</li>
  <li>GPU	IMG PowerVR GE8300 (integrated in SoC)</li>
  <li>ML accelerator	Google Edge TPU coprocessor</li>
  <li>RAM	2 GB LPDDR3</li>
  <li>Flash memory	8 GB eMMC</li>
  <li>Wireless	Wi-Fi 5 (802.11a/b/g/n/ac); Bluetooth 5.0</li>
  <li>Audio	3.5mm audio jack; digital PDM microphone; 2.54mm 2-pin speaker terminal;</li>
  <li>Video	micro HDMI (1.4); 24-pin FFC connector for MIPI-CSI2 camera (4-lane); 39-pin FFC connector for MIPI-DSI display (4-lane)</li>
  <li>Input/output 	3.5mm audio jack; digital PDM microphone; 2.54mm 2-pin speaker terminal; micro HDMI (1.4); 24-pin FFC connector for MIPI-CSI2 camera (4-lane); 39-pin FFC connector for MIPI-DSI display (4-lane)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/Coral-Dev-Board-Mini-p-4682.html">Seeed</a></li>
  <li><a href="https://www.mouser.com/new/google-coral/coral-dev-board-mini/">Mouser</a></li>
  <li><a href="https://www.arrow.com/en/products/g650-03324-01/google-corporation">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 07 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/google_coral_mini/</guid>
    </item>

    <item>
      <title>GreatFET One</title>
      <link>https://circuitpython.org/blinka/greatfet_one/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/greatfet_one.jpg 300w,
               /assets/images/boards/large/greatfet_one.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/greatfet_one.jpg" alt="Image of Board" loading="lazy">
<p>By Great Scott Gadgets</p> <p><strong>GreatFET One</strong> from <a href="https://greatscottgadgets.com/">Great Scott Gadgets</a> is a hardware hacker’s best friend. At the center is a powerful NXP LPC4330 (Cortex M4 @ 204MHz) with two USB ports, one host and one peripheral, so it can act as a ‘man in the middle’ for USB interfacing. With an extensible, open source design, two USB ports, and 100 expansion pins, GreatFET One is your essential gadget for hacking, making, and reverse engineering. By adding expansion boards called neighbors, you can turn GreatFET One into a USB peripheral that does almost anything.</p>

<p>Whether you need an interface to an external chip, a logic analyzer, a debugger, or just a whole lot of pins to bit-bang, the versatile GreatFET One is the tool for you. Hi-Speed USB and a Python API allow GreatFET One to become your custom USB interface to the physical world.</p>

<ul>
  <li>programmable digital I/O</li>
  <li>serial protocols including SPI, I2C, UART, and JTAG</li>
  <li>logic analysis</li>
  <li>analog I/O (ADC/DAC)</li>
  <li>data acquisition</li>
  <li>debugging</li>
  <li>versatile USB functions including FaceDancer</li>
  <li>high-throughput hardware-assisted streaming serial engine</li>
  <li>four fabulous LEDs!</li>
</ul>

<p>GreatFET One ships in an ESD bag with a high-speed USB cable and a <a href="https://greatscottgadgets.com/wiggler">wiggler</a> for easy separation of neighbors. Enclosures and neighbors are sold separately.</p>

<p>GreatFET is a next generation <a href="https://www.adafruit.com/product/1279">GoodFET</a> intended to serve as your custom Hi-Speed USB peripheral through the addition of expansion boards called “neighbors”.</p>

<p>GreatFET is designed to provide a significant step up in capabilities from <a href="http://github.com/travisgoodspeed/goodfet">GoodFET</a> while making the design manufacturable at a lower cost than GoodFET. In addition to being designed for automated assembly, it can be hand-assembled with a soldering iron, though it is a more complicated assembly than GoodFET. An important similarity to GoodFET is that GreatFET has a USB bootloader in ROM, so it is possible to build a board by hand and install firmware onto it without the need of any external programming hardware.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4234">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/greatfet_one/</guid>
    </item>

    <item>
      <title>Hifive Unleashed</title>
      <link>https://circuitpython.org/blinka/hifive_unleashed/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/hifive_unleashed.jpg 300w,
               /assets/images/boards/large/hifive_unleashed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/hifive_unleashed.jpg" alt="Image of Board" loading="lazy">
<p>By Sifive</p> <p>We founded SiFive to bring the power of open source to the semiconductor industry. We do this not only by supporting the RISC-V specification, but also by implementing the specification and getting usable chips into the hands of developers as quickly as we can. We did exactly that just over a year ago when we introduced the open source, Arduino-compatible HiFive1 dev board based on our Freedom Everywhere line of 32-bit microcontrollers. Today, we’re proud to be doing the same thing with our Freedom Unleashed 64-bit, Linux-capable system-on-chip (SoC) platform. Meet the HiFive Unleashed, the world’s first RISC-V-based, Linux-capable development board.</p>

<p>Industry skeptics have previously dismissed RISC-V as an academic project, low performance, and only for microcontrollers. HiFive Unleashed, featuring the SiFive Freedom U540 SoC, ends all of that. Linux and RISC-V were meant for each other, and the HiFive Unleashed dev board brings them together for the first time.</p>

<ul>
  <li>Processor: SiFive Freedom U540 SoC</li>
  <li>Memory: 8 GB DDR4 with ECC</li>
  <li>Connectivity: Gigabit Ethernet port</li>
  <li>Flash: 32 MB quad SPI flash from ISSI</li>
  <li>Storage: microSD card for removable storage</li>
  <li>Expansion: FMC connector for future expansion</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/sifive/hifive-unleashed">Crowd Supply</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/hifive_unleashed/</guid>
    </item>

    <item>
      <title>Jetson AGX Orin</title>
      <link>https://circuitpython.org/blinka/jetson_agx_orin/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_agx_orin.jpg 300w,
               /assets/images/boards/large/jetson_agx_orin.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_agx_orin.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>Bring your next-gen products to life with the world’s most powerful AI computer for energy-efficient autonomous machines. With up to 275 TOPS and 8X the performance of the last generation for multiple concurrent AI inference pipelines, plus high-speed interface support for multiple sensors, NVIDIA Jetson Orin™ modules provide the ideal solution for a new age of robotics.</p>

<p>The NVIDIA Jetson AGX Orin Developer Kit makes it easy to get started with the Jetson AGX Orin module. Compact size, lots of connectors, and up to 275 TOPS of AI performance make this developer kit perfect for prototyping advanced AI-powered robots and other autonomous machines.</p>

<p>Jetson AGX Orin features an NVIDIA Ampere architecture GPU together with next-generation deep learning and vision accelerators, and its high-speed IO and fast memory bandwidth can feed multiple concurrent AI application pipelines. This means you can develop solutions using your largest and most complex AI models to solve problems such as natural language understanding, 3D perception, and multi-sensor fusion.</p>

<p>NVIDIA JetPack SDK brings the NVIDIA AI software stack to Jetson, along with application development and optimization tools. Software for specific use cases is available, including Isaac for robotics and Metropolis for smart cities, and you can save significant time developing your AI solution when you use your datasets with TAO toolkit to fine-tune pretrained AI models from the NGC catalog.</p>

<p>Jetson ecosystem partners offer additional AI and system software, developer tools, and custom software development. They can also help with cameras and other sensors, as well as carrier boards and design services for your product.</p>

<p>With the computing capability of more than 8 Jetson AGX Xavier systems in a developer kit that integrates the latest NVIDIA GPU technology with the world’s most advanced deep learning software stack, you’ll have the flexibility to create tomorrow’s AI solution as well as today’s.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://amzn.to/3QKDIAt">Amazon</a></li>
  <li><a href="https://www.arrow.com/en/products/945-13730-0000-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 27 Jul 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_agx_orin/</guid>
    </item>

    <item>
      <title>Jetson Nano Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_nano/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_nano.jpg 300w,
               /assets/images/boards/large/jetson_nano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_nano.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>The NVIDIA® Jetson Nano™ Developer Kit delivers the compute performance to run modern AI workloads at unprecedented size, power, and cost. Developers, learners, and makers can now run AI frameworks and models for applications like image classification, object detection, segmentation, and speech processing.</p>

<p>The developer kit can be powered by micro-USB and comes with extensive I/Os, ranging from GPIO to CSI. This makes it simple for developers to connect a diverse set of new sensors to enable a variety of AI applications. And it is incredibly power-efficient, consuming as little as 5 watts.</p>

<ul>
  <li>GPU   128-core Maxwell™ GPU</li>
  <li>CPU   4-core ARM A57</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Memory    4 GB 64 Bit LPDDR4</td>
          <td>25.6 GB/s</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Storage   microSD (not included)</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video Encode  4Kp30</td>
          <td>4x 1080p30</td>
          <td>8x 720p30 (H.264/H.265)</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video Decoder 4Kp60</td>
          <td>2x 4Kp30</td>
          <td>8x 1080p30</td>
          <td>16x 720p30</td>
          <td>(H.264/H.265)</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Size  100mm x 80mm x 29mm</li>
  <li>Deployment    Module (Jetson Nano)</li>
  <li>USB   5</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems   Linux</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/products/945-13450-0000-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_nano/</guid>
    </item>

    <item>
      <title>Jetson TX1</title>
      <link>https://circuitpython.org/blinka/jetson_tx1/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_tx1.jpg 300w,
               /assets/images/boards/large/jetson_tx1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_tx1.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>The world’s first supercomputer on a module, Jetson TX1 is capable of delivering the performance and power efficiency needed for the latest visual computing applications. It’s built around the revolutionary NVIDIA Maxwell™ architecture with 256 CUDA cores delivering over 1 TeraFLOPs of performance. 64-bit CPUs, 4K video encode and decode capabilities, and a camera interface capable of 1400 MPix/s make this the best system for embedded deep learning, computer vision, graphics, and GPU computing.</p>

<ul>
  <li>GPU    256-core NVIDIA Maxwell™ GPU</li>
  <li>CPU    Quad-Core ARM® Cortex®-A57 MPCore</li>
  <li>Memory    4GB 64-bit LPDDR4 Memory</li>
  <li>Storage    16GB eMMC</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: 4K 60 Hz decode</td>
          <td>4K 30 Hz encode</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB   USB 3.0 + USB 2.0</li>
  <li>Ethernet  1</li>
  <li>I2C   4</li>
  <li>CAN  1</li>
  <li>SPI   3</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems  Linux Ubuntu</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/900-82180-0001-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_tx1/</guid>
    </item>

    <item>
      <title>Jetson TX2 Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_tx2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_tx2.jpg 300w,
               /assets/images/boards/large/jetson_tx2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_tx2.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>The Jetson TX2 Developer Kit gives you a fast, easy way to develop hardware and software for the Jetson TX2 AI supercomputer on a module. It exposes the hardware capabilities and interfaces of the developer board, comes with design guides and other documentation, and is pre-flashed with a Linux development environment.</p>

<p>It also supports NVIDIA Jetpack—a complete SDK that includes the BSP, libraries for deep learning, computer vision, GPU computing, multimedia processing, and much more.</p>

<ul>
  <li>GPU    NVIDIA Pascal™ Architecture GPU</li>
  <li>CPU    2 Denver 64-bit CPUs + Quad-Core A57 Complex</li>
  <li>Memory    8 GB L128 bit DDR4 Memory</li>
  <li>Storage    32 GB eMMC 5.1 Flash Storage</li>
  <li>Connectivity to 802.11ac Wi-Fi and Bluetooth-Enabled Devices</li>
  <li>10/100/1000BASE-T Ethernet</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: 4K 60 Hz decode</td>
          <td>4K 30 Hz encode</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB   USB 3.0 + USB 2.0</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>CAN  1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems  Linux Ubuntu 64-bit v14.04</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/945-82771-0000-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_tx2/</guid>
    </item>

    <item>
      <title>Jetson TX2 Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_tx2_nx/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_tx2_nx.jpg 300w,
               /assets/images/boards/large/jetson_tx2_nx.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_tx2_nx.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>NVIDIA® Jetson™ TX2 NX delivers the next step in AI performance for entry-level embedded and edge products. It provides up to 2.5X the performance of Jetson Nano, and shares form-factor and pin compatibility with Jetson Nano and Jetson Xavier™ NX.</p>

<p>This small module packs hardware accelerators for the entire AI pipeline, and NVIDIA JetPack™ SDK provides the tools you need to use them for your application. Custom AI network development is easy with pre-trained AI models from NVIDIA NGC™ and the NVIDIA Transfer Learning Toolkit, and containerized deployments make updates for your product flexible and seamless.</p>

<p>Ease of development and speed of deployment—plus a unique combination of form-factor, performance, and power advantage—make Jetson TX2 NX the ideal mass-market AI product platform.</p>

<ul>
  <li>AI Performance: 1.33 TFLOPs</li>
  <li>GPU: NVIDIA Pascal™ Architecture GPU with 256 CUDA cores</li>
  <li>CPU: Dual-core NVIDIA Denver 2 64-bit CPU and quad-core ARM A57 Complex</li>
  <li>Memory: 4GB 128-bit LPDDR4, 1600 MHz - 51.2 GBs</li>
  <li>Storage: 16GB eMMC 5.1 Flash Storage</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/900-13636-0010-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 25 Feb 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_tx2_nx/</guid>
    </item>

    <item>
      <title>Jetson AGX Xavier Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_xavier/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_xavier.jpg 300w,
               /assets/images/boards/large/jetson_xavier.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_xavier.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>With the NVIDIA Jetson AGX Xavier developer kit, you can easily create and deploy end-to-end AI robotics applications for manufacturing, delivery, retail, agriculture, and more.</p>

<p>Supported by NVIDIA JetPack and DeepStream SDKs, as well as CUDA®, cuDNN, and TensorRT software libraries, the kit provides all the tools you need to get started right away. And because it’s powered by the new NVIDIA Xavier processor, you now have more than 20X the performance and 10X the energy efficiency of its predecessor, the NVIDIA Jetson TX2.</p>

<ul>
  <li>GPU    512-core Volta GPU with Tensor Cores</li>
  <li>CPU    8-core ARM v8.2 64-bit CPU, 8MB L2 + 4MB L3</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Memory    16GB 256-Bit LPDDR4x</td>
          <td>137GB/s</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Storage    32 GB eMMC 5.1</li>
  <li>Connectivity to 802.11ac Wi-Fi and Bluetooth-Enabled Devices</li>
  <li>10/100/1000BASE-T Ethernet</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: (2x) 4Kp60</td>
          <td>HEVC/(2x) 4Kp60</td>
          <td>12-Bit Support</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB-C   2x USB 3.1, DP (Optional), PD (Optional) Close-System Debug and Flashing Support on 1 Port</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>CAN  1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI 2.0, eDP 1.2a, DP 1.4</li>
  <li>Operating Systems  Linux Ubuntu 64-bit v14.04</li>
  <li>PC Card Interface SD/UFS</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/945-82771-0000-000/nvidia">Arrow</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_xavier/</guid>
    </item>

    <item>
      <title>Jetson Xavier NX</title>
      <link>https://circuitpython.org/blinka/jetson_xavier_nx/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/jetson_xavier_nx.jpg 300w,
               /assets/images/boards/large/jetson_xavier_nx.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/jetson_xavier_nx.jpg" alt="Image of Board" loading="lazy">
<p>By NVIDIA</p> <p>Jetson Xavier NX delivers up to 21 TOPS for running modern AI workloads, consumes as little as 10 watts of power, and has a compact form factor smaller than a credit card. It can run modern neural networks in parallel and process data from multiple high-resolution sensors, opening the door for embedded and edge computing devices that demand increased performance but are constrained by size, weight, and power budgets.</p>

<ul>
  <li>GPU    384-core NVIDIA Volta™ GPU with 48 Tensor Cores</li>
  <li>CPU    800/1100 MHz 6-core NVIDIA Carmel ARM®v8.2 64-bit CPU 6MB L2 + 4MB L3</li>
  <li>Memory    8 GB 128-bit LPDDR4x @ 1600 MHz 51.2GB/s</li>
  <li>Storage    16 GB eMMC 5.1</li>
  <li>Power    10/15W</li>
  <li>PCIe    1 x1 + 1x4</li>
  <li>CSI Camera    Up to 6 cameras (36 via virtual channels)</li>
  <li>Video Encode    2x 4K @ 30 (HEVC)</li>
  <li>Video Decode    2x 4K @ 60 (HEVC)</li>
  <li>Display    2 multi-mode DP 1.4/eDP 1.4/HDMI 2.0</li>
  <li>DL Accelerator    2x NVDLA Engines</li>
  <li>Networking    10/100/1000 BASE-T Ethernet</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://developer.nvidia.com/embedded/jetson-xavier-nx">NVIDIA</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_xavier_nx/</guid>
    </item>

    <item>
      <title>Khadas VIM3</title>
      <link>https://circuitpython.org/blinka/khadas_vim3/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/khadas_vim3.jpg 300w,
               /assets/images/boards/large/khadas_vim3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/khadas_vim3.jpg" alt="Image of Board" loading="lazy">
<p>By Khadas</p> <ul>
  <li>High Performance: Amlogic A311D - x4 2.2Ghz Cortex A73, x2 1.8Ghz Cortex A53 12nm SoC fabrication process for low heat 2T2R AC Wi-Fi with RSDB Features Bluetooth 5.0 USB 3.0 Available Gigabit Ethernet with WOL support LPDDR4/X USB-C PD for heavy applications</li>
  <li>Neural Network Accelerator: NPU: Supports a maximum frequency of 800MHz at 5.0 TOPS INT8 inference up to 1536 MAC Internal L2 cache (512KB) and system workspace buffer (1MB) Supports all major deep learning frameworks including TensorFlow and Caffe</li>
  <li>Maker Friendly: Stackable Design Programmable MCU 3 Programmable LEDs (Blue, Red and White) XPWR for external Power button Onboard SPI Flash Khadas TST Khadas KBI</li>
  <li>Business Applications Dual independent displays with GSensor H.264 / H.265 Encoding Supports multi-video decoding up to 4Kx2K@60fps+1x1080P@60fps VIN Power Input</li>
  <li>Rich IO: 40 Pin GPIO Header (USB, I2C, I2S, UART, ADC etc) 8-ch I2S for Microphone Array application (over M.2 Connector) MIPI-DSI MIPI-CSI Designed with GPIO Extender Chip</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://amzn.to/3NAK98d">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 01 Apr 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/khadas_vim3/</guid>
    </item>

    <item>
      <title>AML-S905X-CC (Le Potato)</title>
      <link>https://circuitpython.org/blinka/libre_aml-s905x-cc/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/libre_aml-s905x-cc.jpg 300w,
               /assets/images/boards/large/libre_aml-s905x-cc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/libre_aml-s905x-cc.jpg" alt="Image of Board" loading="lazy">
<p>By Libre Computer</p> <p>Le Potato is our flagship hardware platform with support for the latest Android 9/TV, upstream Linux, u-boot, Kodi, and more. Based on a long term supported SoC family with a proven record of mass deployments by the largest regional content providers, Google, and Amazon, AML-S905X-CC is the perfect development platform for projects that require highly performant ARM Cortex-A class CPUs, secure and non-secure 4K media delivery and playback, Widevine CAS DRM, high reliability, and low power.</p>

<p>Libre Computer is the only solutions provider with key expertise in both hardware design and upstream free-open-source software (FOSS) stack for Amlogic’s GXL SoC family including S805X, S905D, S905W, S905X, and S912. This SoC family features the Amlogic Video Engine 10 (AVE10) capable of handling H.265, H.264, and VP9 streams with HDR metadata making it ideal for 4K digital signage on mainline Linux and the latest Android 9.0 Pie.</p>

<p>Features</p>
<ul>
  <li>Form Factor Compatible with Raspberry Pi® 2/3 Model B/B+</li>
  <li>Quad 64-bit Low Power Cores</li>
  <li>Penta Core 3D GPU with OpenGL ES 2.0</li>
  <li>Amlogic Video Engine (AVE10)
    <ul>
      <li>H.265</li>
      <li>H.264</li>
    </ul>
  </li>
  <li>VP9</li>
  <li>HDMI 2.0 with 4K HDR support</li>
  <li>Up to 2GB DDR3</li>
  <li>Product Family</li>
  <li>AML-S805X-AC</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://amzn.to/3EO1FUg">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 16 Oct 2022 20:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/libre_aml-s905x-cc/</guid>
    </item>

    <item>
      <title>Lichee RV Dock D1</title>
      <link>https://circuitpython.org/blinka/lichee_rv_dock_d1/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lichee_rv_dock_d1.jpg 300w,
               /assets/images/boards/large/lichee_rv_dock_d1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lichee_rv_dock_d1.jpg" alt="Image of Board" loading="lazy">
<p>By Sipeed</p> <p>Lichee RV Dock is a RISC-V Linux development kit. It expands the module’s usable interfaces by providing an HDMI port with support for up to 4K@30fps output, a 40-pin header with GPIO and power switches, among other things, plus headers and connectors that you can use for speakers, microphones, and more. It supports RGB and MIPI screen interfaces with its screen convert board. There is an onboard 2.4G WIFI+BT module, a 2.4G Patch antenna, an IPEX connector, and a USB Type-A host. The highest network speed is up to 30Mbps (with RTL8723DS), and the average network bandwidth is about 20Mbps.</p>

<p>For software, Lichee RV Dock supports Tina Linux, Debian Officially, and also Ubuntu/OpenSUSE, RustSBI community.</p>

<p>The features of high integration, small size, affordable price, and open-source are suitable for developers exploring more interesting Linux applications. No more waiting and soldering, it greatly shortens the developer’s research and development time by just simply connecting the kit to the display devices and input devices such as a keyboard or a mouse(only available on the Debian system).</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/Lichee-RV-Dock-Allwinner-D1-SoC-RISC-V-Linux-dev-kit-High-Integration-Open-Source-p-5380.html">Seeed Studio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/lichee_rv_dock_d1/</guid>
    </item>

    <item>
      <title>LubanCat I.MX6ULL</title>
      <link>https://circuitpython.org/blinka/lubancat_i.mx6ull/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/lubancat_i.mx6ull.jpg 300w,
               /assets/images/boards/large/lubancat_i.mx6ull.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/lubancat_i.mx6ull.jpg" alt="Image of Board" loading="lazy">
<p>By LubanCat</p> <p>Meet the new i.MX6ULL ARM Cortex A7 processor from NXP, it is a high performance and power-efficient processor with a frequency up to 800MHz!</p>

<p>The NPi i.MX6ULL Dev Board is a low power consumption Linux single board computer built around the powerful i.MX6ULL. You would love the onboard 512MB DDR3L and 512MB NAND, not to mention the rich interfaces and I/O resources.</p>

<p>The whole board is made by a core module and a breakout board, and the components are all industrial grade.</p>

<p>The core module is composed of the i.MX6ULL core and 512MB DDR3L, 512MB NAND FLASH(or 8GB eMMC).</p>

<p>The breakout board mainly includes various peripheral interfaces and input and output, IO expansion. Including but not limited to two 100M ethernet port, one USB Host and one USB OTG port, one 24bit RGB LCD Interface, 2x 40 Pin I/O expansion header, etc. Such a wealth of resources will meet your various control needs. All those features make it a perfect solution for industrial control, rail transit, drone control, and audio output, etc.</p>

<p>## Learn More</p>
<ul>
  <li><a href="https://www.seeedstudio.com/NPi-i-MX6ULL-Dev-Board-Industrial-Grade-Linux-SBC-NAND-Version-p-4220.html">Seeed Studio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/lubancat_i.mx6ull/</guid>
    </item>

    <item>
      <title>MCP2221</title>
      <link>https://circuitpython.org/blinka/mcp2221/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/mcp2221.jpg 300w,
               /assets/images/boards/large/mcp2221.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/mcp2221.jpg" alt="Image of Board" loading="lazy">
<p>By Adafruit</p> <p>Wouldn’t it be cool to drive a <a href="https://www.adafruit.com/categories/98">tiny OLED display</a>, read a <a href="https://www.adafruit.com/products/1334">color sensor</a>, or even just flash some LEDs directly from your computer?  Sure you can program an <a href="https://www.adafruit.com/products/50">Arduino</a> or <a href="https://www.adafruit.com/products/2000">Trinket</a> to talk to these devices and your computer, but why can’t your computer just talk to those devices and sensors itself?  Well, now your computer <em>can</em> talk to devices using the Adafruit MCP2221A breakout board!</p>

<p>What can the MCP2221 chip do?  This chip from <a href="https://www.microchip.com/wwwproducts/en/MCP2221A">Microchip</a> is similar to a USB to serial converter chips but adds a GPIO and I2C interface as well. The analog/digital GPIO pins can act as 10-bit analog inputs (ADC) and there’s even a 5-bit DAC output. The I2C interface is great for talking to OLEDs, sensors, PWM drivers, its the most popular interface for small devices. You can use the GPIO to do things like flash LEDs, read switches or buttons, and more. The MCP2221A breakout is like adding a little swiss army knife for serial protocols to your computer!</p>

<p>This chip is powerful and useful to have when you want to use Python (for example) to quickly iterate and test a device that uses I2C or general purpose digital and analog I/O. There’s no firmware to deal with, so you don’t have to deal with how to “send data to and from an Arduino which is then sent to and from” an electronic sensor or display or part.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4471">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/mcp2221/</guid>
    </item>

    <item>
      <title>NanoPi Duo2</title>
      <link>https://circuitpython.org/blinka/nanopi_duo2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nanopi_duo2.jpg 300w,
               /assets/images/boards/large/nanopi_duo2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nanopi_duo2.jpg" alt="Image of Board" loading="lazy">
<p>By FriendlyElec</p> <p>The NanoPi Duo2(“Duo2”) is an ARM board designed and developed by FriendlyELEC for makers and hobbyists. It is only 55 x 25.4mm. It features Allwinner quad-core A7 processor H3, and has 256M/512M DDR3 RAM, onboard WiFi &amp; bluetooth module and an OV5640 camera interface. It works with Linux variants such as Ubuntu Core.</p>

<p>The NanoPi Duo2 is tiny and compact with rich interfaces and ports. It takes power input from its MicroUSB port and can be booted from a Micro SD card. It works with general bread-boards. Interface pins such as USB, SPI, UART, I2C, PWM, IR, audio input &amp; output and Fast Ethernet etc are populated.</p>

<p>The NanoPi Duo2 supports software utilities such as WiringNP and Python etc. These are all open source. It is suited for various IoT applications.</p>

<ul>
  <li>CPU: Allwinner H3, Quad-core Cortex-A7 Up to 1.2GHz</li>
  <li>DDR3 RAM: 512M</li>
  <li>Connectivity: 10/100M Ethernet</li>
  <li>WiFi: 802.11b/g/n</li>
  <li>Bluetooth: Bluetooth V4.0 of 1, 2 and 3 Mbps.</li>
  <li>Camera: OV5640</li>
  <li>Key: GPIO Key</li>
  <li>USB Host: 2.54mm pin x2, exposed in 2.54mm pitch pin header</li>
  <li>MicroSD Slot x 1</li>
  <li>MicroUSB: OTG and power input</li>
  <li>Debug Serial Interface: exposed in 2.54mm pitch pin header</li>
  <li>Audio input/output Interface: exposed in 2.54mm pitch pin header</li>
  <li>GPIO1: 2.54mm spacing 16pin. It includes UART, SPI, I2C, Audio etc</li>
  <li>GPIO2: 2.54mm spacing 16pin. It includes USB,10/100M Ethernet, IO etc</li>
  <li>PCB Dimension: 25.4 x 55mm</li>
  <li>Power Supply: DC 5V/2A</li>
  <li>Temperature measuring range: -20℃ to 70℃</li>
  <li>OS/Software: U-boot，Linux-4.14 / Linux-3.4, Ubuntu 16.04.2 LTS (Xenial)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.friendlyarm.com/index.php?route=product/product&amp;product_id=244">FriendlyElec</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 05 Feb 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/nanopi_duo2/</guid>
    </item>

    <item>
      <title>NanoPi NEO Air</title>
      <link>https://circuitpython.org/blinka/nanopi_neo_air/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nanopi_neo_air.jpg 300w,
               /assets/images/boards/large/nanopi_neo_air.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nanopi_neo_air.jpg" alt="Image of Board" loading="lazy">
<p>By FriendlyElec</p> <p>LTS - long term support, We will not make any changes to this model and will provide support as long as possible</p>

<ul>
  <li>CPU: Allwinner H3, Quad-core Cortex-A7 Up to 1.2GHz</li>
  <li>RAM: 512MB DDR3 RAM</li>
  <li>Storage: 8GB eMMC</li>
  <li>WiFi: 802.11b/g/n</li>
  <li>Bluetooth: 4.0 dual mode</li>
  <li>MicroSD Slot x 1</li>
  <li>GPIO: 2.54mm pitch 24pin. It includes UART, SPI, I2C, IO etc</li>
  <li>PCB Size: 40 x 40mm</li>
  <li>Power Supply: DC 5V/2A</li>
  <li>OS/Software: u-boot, UbuntuCore</li>
  <li>Weight: 7.5g(WITHOUT Pin-headers); 9.7g(WITH Pin-headers)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.friendlyarm.com/index.php?route=product/product&amp;product_id=151">FriendlyElec</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 20 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/nanopi_neo_air/</guid>
    </item>

    <item>
      <title>NanoPi NEO</title>
      <link>https://circuitpython.org/blinka/nanopi_neo_h3/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/nanopi_neo.jpg 300w,
               /assets/images/boards/large/nanopi_neo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/nanopi_neo.jpg" alt="Image of Board" loading="lazy">
<p>By FriendlyElec</p> <p>LTS - long term support, We will not make any changes to this model and will provide support as long as possible</p>

<ul>
  <li>CPU: Allwinner H3, Quad-core Cortex-A7 Up to 1.2GHz</li>
  <li>DDR3 RAM: 256MB/512MB</li>
  <li>Connectivity: 10/100M Ethernet</li>
  <li>USB Host: Type-A x 1, 2.54 mm pin x 2</li>
  <li>MicroSD Slot x 1</li>
  <li>MicroUSB: for data transmission and power input</li>
  <li>Debug Serial Port: 4Pin, 2.54 mm pitch pin header</li>
  <li>GPIO: 2.54mm pitch 36pin. It includes UART, SPI, I2C, IO etc</li>
  <li>PCB Dimension: 40 x 40 mm</li>
  <li>Power Supply: DC 5V/2A</li>
  <li>OS/Software: u-boot and UbuntuCore</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.friendlyarm.com/index.php?route=product/product&amp;path=69&amp;product_id=132">FriendlyElec</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/nanopi_neo_h3/</guid>
    </item>

    <item>
      <title>OSD32MP1-RED</title>
      <link>https://circuitpython.org/blinka/octavo_osd32mp1_brk/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/octavo_osd32mp1_brk.jpg 300w,
               /assets/images/boards/large/octavo_osd32mp1_brk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/octavo_osd32mp1_brk.jpg" alt="Image of Board" loading="lazy">
<p>By Octavo Systems</p> <p>The OSD32MP1-BRK is a small flexible prototyping platform for the <a href="https://www.st.com/en/microcontrollers-microprocessors/stm32mp1-series.html">STM32MP1</a> based SiP, the <a href="https://octavosystems.com/octavo_products/osd32mp15x/">OSD32MP15x</a>. At only 3in X 1.8in (75mm X 46mm), it provides easy access to the I/O of the STM32MP1 through a set of breadboard compatible headers. The OSD32MP1-BRK allows developers to quickly build a proof of concept that more closely resembles their actual system without the need to build their own custom hardware.</p>

<p>The OSD32MP1-BRK features the OSD32MP15x System in Package, a microSD slot, 32KHz crystal, a microUSB client port, and two 2×30 100 mill headers. The headers give access to 106 I/O on the STM32MP1 integrated into the OSD32MP15x SiP. It uses a 4 Layer PCB with low cost design rules and has no back side components.</p>

<p>Its minimal overhead and access to a wide range of I/O make the OSD32MP1-BRK the perfect platform for any designer looking for complete flexibility as they prototype their design.</p>

<ul>
  <li>Small Form Factor
    <ul>
      <li>Only 3in X 1.8in (75mm X 46mm)</li>
    </ul>
  </li>
  <li>Access to 106 I/O
    <ul>
      <li>two 2×30 100mil (2.54mm) Headers</li>
      <li>Maximum flexibility to prototype designs</li>
      <li>Breadboard Compatible</li>
    </ul>
  </li>
  <li>OSD32MP157C-512M-BAA</li>
  <li>STM32MP157C Dual Arm® Cortex® A7 + M4</li>
  <li>512MB DDR3 Memory</li>
  <li>STPMIC1A Power Management</li>
  <li>EEPROM</li>
  <li>Oscillator</li>
  <li>Passives</li>
  <li>µUSB</li>
  <li>STLink*</li>
  <li>UART</li>
  <li>µSD Card</li>
  <li>32KHz Crystal</li>
  <li>4 Layer Design</li>
  <li>No Back Side Components</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/en/products/detail/octavo-systems-llc/OSD32MP1-BRK/12144788">Digikey</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/octavo_osd32mp1_brk/</guid>
    </item>

    <item>
      <title>OSD32MP1-RED</title>
      <link>https://circuitpython.org/blinka/octavo_osd32mp1_red/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/octavo_osd32mp1_red.jpg 300w,
               /assets/images/boards/large/octavo_osd32mp1_red.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/octavo_osd32mp1_red.jpg" alt="Image of Board" loading="lazy">
<p>By Octavo Systems</p> <p>The OSD32MP1-RED is a full featured Reference, Evaluation and Development platform for the <a href="https://www.st.com/en/microcontrollers-microprocessors/stm32mp1-series.html">STM32MP1</a> based SiP, the <a href="https://octavosystems.com/octavo_products/osd32mp15x/">OSD32MP15x</a>. It provides access to a number of standard communication interfaces like WiFi and Bluetooth, 1Gb Ethernet, and CAN. It supports HDMI or DSI displays and has a connector for a camera. The OSD32MP1-RED expands easily by providing connectors that are compatible with Raspberry Pi, MikroElektronika mikroBUS™ Click, and STMicroelectronics Motor Control Header.</p>

<p>The on board eMMC comes preloaded with an Opensource Linux Distribution allowing you to begin development straight out of the box.</p>

<p>With its communication interfaces, peripherals, and expansion capabilities, the OSD32MP1-RED is a perfect platform for quickly developing IOT, high-end HMI, or real time control applications.</p>

<ul>
  <li>Full Featured Reference, Evaluation, Development Platform</li>
  <li>OSD32MP157C-512M-BAA</li>
  <li>STM32MP157C Dual Arm® Cortex® A7 + M4</li>
  <li>512MB DDR3 Memory</li>
  <li>STPMIC1A Power Management</li>
  <li>EEPROM</li>
  <li>Oscillator</li>
  <li>Passives</li>
  <li>Connectivity
    <ul>
      <li>WiFi (IEEE802.11b/g/n) / Bluetooth® v5.1 (BR/EDR/BLE)</li>
      <li>10/100/1000 Ethernet</li>
      <li>CAN FD</li>
      <li>USB Host</li>
      <li>USB-C OTG</li>
      <li>UART</li>
      <li>JTAG (STLink)</li>
    </ul>
  </li>
  <li>Memory
    <ul>
      <li>µSD Card</li>
      <li>eMMC</li>
    </ul>
  </li>
  <li>Display
    <ul>
      <li>HDMI</li>
      <li>DSI</li>
    </ul>
  </li>
  <li>Camera</li>
  <li>Expansion
    <ul>
      <li>Raspberry Pi Compatible Header</li>
      <li>MikroElektronika Click Header</li>
      <li>Motor Control Header</li>
    </ul>
  </li>
  <li>4 Layer Design</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/en/products/detail/octavo-systems-llc/OSD32MP1-RED/13575366">Digikey</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 06 Dec 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/octavo_osd32mp1_red/</guid>
    </item>

    <item>
      <title>Odroid C2</title>
      <link>https://circuitpython.org/blinka/odroid_c2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_c2.jpg 300w,
               /assets/images/boards/large/odroid_c2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_c2.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>The ODROID-C2 is a 64-bit quad-core single board computer(SBC) that is one of the most cost-effective 64bit development boards available in the ARM world. It can function as a home theater set-top box, a general purpose computer for web browsing, gaming and socializing, a compact tool for college or office work, a prototyping device for hardware tinkering, a controller for home automation, a workstation for software development, and much more.</p>

<p>Some of the modern operating systems that run on the ODROID-C2 are Ubuntu, Android, ARCHLinux, Debian, with thousands of free open-source software packages available. The ODROID-C2 is an ARM device — the most advanced architecture for mobile devices and embedded 64-bit computing. The ARM processor’s small size, reduced complexity and low power consumption makes it very suitable for miniaturized devices such as wearables and embedded controllers.</p>

<ul>
  <li>Amlogic S905 ARM Cortex-A53(ARMv8) 1.5Ghz quad core CPUs</li>
  <li>Mali-450 GPU</li>
  <li>Supports OpenGL ES 2.0 / 1.1</li>
  <li>3 Pixel-processors</li>
  <li>2 Vertex shader processors</li>
  <li>2GB DDR3 SDRAM</li>
  <li>Gigabit Ethernet</li>
  <li>HDMI 2.0 4K/60Hz display</li>
  <li>H.265 4K/60FPS and H.264 4K/30FPS capable VPU</li>
  <li>40pin GPIOs + 7pin I2S</li>
  <li>eMMC5.0 HS400 Flash Storage slot</li>
  <li>UHS-1 SDR50 MicroSD Card slot</li>
  <li>USB 2.0 Host x 4</li>
  <li>USB OTG x 1 (power + data capable)</li>
  <li>Infrared(IR) Receiver</li>
  <li>Ubuntu 16.04 or Android 6.0 Marshmallow based on Kernel 3.14LTS</li>
  <li>Armbian Support</li>
  <li>Guaranteed production of C2 to the end of 2019</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-c2/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_c2/</guid>
    </item>

    <item>
      <title>Odroid C4</title>
      <link>https://circuitpython.org/blinka/odroid_c4/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_c4.jpg 300w,
               /assets/images/boards/large/odroid_c4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_c4.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>ODROID-C4 is a new generation single board computer that is more energy efficient and faster performing than ODROID-C2 which was introduced over four years ago as the world’s first affordable ARM 64bit computer.</p>

<p>The main CPU of the ODROID-C4 is built with a quad-core Cortex-A55 cluster with a new generation Mali-G31 GPU. The A55 cores run at 2.0Ghz without thermal throttling using the stock heat sink allowing a robust and quiet computer. The CPU multi-core performance is around 40% faster, and the system DRAM performance is 50% faster than the ODROID-C2.</p>

<ul>
  <li>Amlogic S905X3 12nm Processor</li>
  <li>Mali-G31 MP2 GPU with 4 x Execution Engines (650Mhz)</li>
  <li>DDR4 4GiB with 32-bit bus width</li>
  <li>1x eMMC connector (8/16/32/64GiB are available)</li>
  <li>1x Micro SD slot (DS/HS mode up to UHS-I SDR104)</li>
  <li>1 x GbE LAN ports (RJ45, supports 10/100/1000 Mbps)</li>
  <li>1 x HDMI digital output</li>
  <li>1 x Optional SPDIF optical output</li>
  <li>40pin GPIOs + 7pin I2S</li>
  <li>1 x Debug serial console (UART)</li>
  <li>4 x USB 3.0 Host ports</li>
  <li>1 x USB 2.0 OTG port for Host or Device mode. (No power input)</li>
  <li>IR receiver for remote controller</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-c4/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_c4/</guid>
    </item>

    <item>
      <title>Odroid M1</title>
      <link>https://circuitpython.org/blinka/odroid_m1/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_m1.jpg 300w,
               /assets/images/boards/large/odroid_m1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_m1.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>The ODROID-M1 is a single board computer with a wide range of useful peripherals developed for use in a variety of embedded system applications. To achieve this goal, we have developed various hardware accessories and device driver software over the past 10 months. In addition, RK3568B2, the core brain of ODROID-M1, is considered suitable for embedded application use as the SoC manufacturer (Rockchip) guarantees supply for the next 15 years. Therefore, we expect we can supply the ODROID-M1 boards to our important B2B customers until the year 2036 or beyond.</p>

<p>Note that RK3568B2 is a slightly modified version of the RK3568 to overcome the IC supply chain problem these days. The previous RK3568 metal-can type packaging lead time is much longer than the more common plastic package of the RK3568B2.</p>

<p>Let’s take a look at the main features and peripherals of ODROID-M1.</p>

<ul>
  <li>Rockchip RK3568B2 CPU</li>
  <li>LPDDR4 RAM</li>
  <li>1 x Micro USB2.0 Device only</li>
  <li>1 x RJ45 Ethernet Port (10/100/1000)</li>
  <li>1 x HDMI 2.0</li>
  <li>2 x USB 2.0</li>
  <li>2 x USB 3.0</li>
  <li>1 x DC Power Jack</li>
  <li>1 x M.2 NVMe M-Key PCIe3.0 2-Lane</li>
  <li>40 x GPIO Pins</li>
  <li>1 x MIPI CSI 2Lane</li>
  <li>1 x MIPI DSI 4Lane</li>
  <li>1 x 3.5mm Headphone Jack</li>
  <li>1 x Mono Speaker Output (1.3W at 8Ω load)</li>
  <li>1 x SPI recovery Switch</li>
  <li>1 x SPI Flash 16MiB</li>
  <li>1 x eMMC Module Socket</li>
  <li>1 x IR Receiver</li>
  <li>1 x RTC Backup Battery Holder</li>
  <li>1 x Reset jumper 1 x Power jumper</li>
  <li>1 x Micro SD Slot</li>
  <li>1 x SATA3</li>
  <li>1 x SATA Power (5volt only)</li>
  <li>1 x UART for System Console</li>
  <li>2 x System LED Indicators</li>
  <li>1 x M.2 LED Indicator</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-m1-with-4gbyte-ram/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 27 Nov 2022 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_m1/</guid>
    </item>

    <item>
      <title>Odroid N2</title>
      <link>https://circuitpython.org/blinka/odroid_n2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_n2.jpg 300w,
               /assets/images/boards/large/odroid_n2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_n2.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>ODROID-N2 is a new generation single board computer that is more powerful, more stable, and faster performing than N1.
The main CPU of the N2 is based on big.Little architecture which integrates a quad-core ARM Cortex-A73 CPU cluster and a dual core Cortex-A53 cluster with a new generation Mali-G52 GPU.
Thanks to the modern 12nm silicon technology, the A73 cores runs at 1.8Ghz without thermal throttling using the stock metal-housing heatsink allowing a robust and quiet computer.
The CPU multi-core performance is around 20% faster and the GPU is 10% faster than the N1. The N2’s DDR4 RAM is running at 1320Mhz with 1.2volt low power consumption.
The large metal housing heatsink is designed to optimize the CPU and RAM heat dissipation and minimize throttling. The CPU is placed on the bottom side of the PCB to establish great thermal characteristics.</p>

<ul>
  <li>Amlogic S922X ARM Cortex-A73(ARMv8-A) 1.8Ghz quad core CPU</li>
  <li>ARM Cortex-A53(ARMv8) 1.9Ghz dual core CPU</li>
  <li>Mali-G52 GPU</li>
  <li>Supports OpenGL ES 3.2 / 3.1 / 3.0 / 2.0 / 1.1</li>
  <li>2GB or 4GB DDR4 SDRAM</li>
  <li>Gigabit Ethernet</li>
  <li>HDMI 2.0 4K/60Hz display</li>
  <li>Composite Video</li>
  <li>40pin GPIO Port</li>
  <li>eMMC5.0 HS400 Flash Storage slot</li>
  <li>UHS-1 SDR50 MicroSD Card slot</li>
  <li>USB 3.0 Host x 4</li>
  <li>USB 2.0 OTG x 1 (power + data capable)</li>
  <li>Infrared(IR) Receiver</li>
  <li>Armbian Support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-n2-with-2gbyte-ram/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_n2/</guid>
    </item>

    <item>
      <title>Odroid XU4</title>
      <link>https://circuitpython.org/blinka/odroid_xu4/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_xu4.jpg 300w,
               /assets/images/boards/large/odroid_xu4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_xu4.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>ODROID-XU4 is powered by ARM® big.LITTLE™ technology, the Heterogeneous Multi-Processing (HMP) solution.</p>

<p>ODROID-XU4 is a new generation of computing device with more powerful, more energy-efficient hardware and a smaller form factor. Offering open source support, the board can run various flavors of Linux, including the latest Ubuntu 16.04 and Android 4.4 KitKat, 5.0 Lollipop and 7.1 Nougat.
By implementing the eMMC 5.0, USB 3.0 and Gigabit Ethernet interfaces, the ODROID-XU4 boasts amazing data transfer speeds, a feature that is increasingly required to support advanced processing power on ARM devices.
This allows users to truly experience an upgrade in computing, especially with faster booting, web browsing, networking, and 3D games.</p>

<ul>
  <li>Samsung Exynos5422 Cortex™-A15 2Ghz and Cortex™-A7 Octa core CPUs</li>
  <li>Mali-T628 MP6(OpenGL ES 3.1/2.0/1.1 and OpenCL 1.2 Full profile)</li>
  <li>2Gbyte LPDDR3 RAM PoP stacked</li>
  <li>eMMC5.0 HS400 Flash Storage</li>
  <li>2 x USB 3.0 Host, 1 x USB 2.0 Host</li>
  <li>Gigabit Ethernet port</li>
  <li>HDMI 1.4a for display</li>
  <li>Size : 83 x 58 x 20 mm approx.(excluding cooler)</li>
  <li>Power: 5V/4A input</li>
  <li>Linux Kernel 4.14 LTS</li>
  <li>We guarantee the production of XU4 to year 2021, but expect to continue production long after.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-xu4-special-price/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 29 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_xu4/</guid>
    </item>

    <item>
      <title>Odroid XU4Q</title>
      <link>https://circuitpython.org/blinka/odroid_xu4q/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odroid_xu4q.jpg 300w,
               /assets/images/boards/large/odroid_xu4q.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odroid_xu4q.jpg" alt="Image of Board" loading="lazy">
<p>By Hardkernel co., Ltd.</p> <p>ODROID-XU4Q
is powered by ARM® big.LITTLE™ technology, the Heterogeneous Multi-Processing (HMP) solution.</p>

<p>The ODROID-XU4Q is the same board as the ODROID-XU4 but with a large heatsink instead of a fan which makes it quiet.</p>

<p>ODROID-XU4 is a new generation of computing device with more powerful, more energy-efficient hardware and a smaller form factor. Offering open source support, the board can run various flavors of Linux, including the latest Ubuntu 16.04 and Android 4.4 KitKat, 5.0 Lollipop and 7.1 Nougat.
By implementing the eMMC 5.0, USB 3.0 and Gigabit Ethernet interfaces, the ODROID-XU4 boasts amazing data transfer speeds, a feature that is increasingly required to support advanced processing power on ARM devices.
This allows users to truly experience an upgrade in computing, especially with faster booting, web browsing, networking, and 3D games.</p>

<ul>
  <li>Samsung Exynos5422 Cortex™-A15 2Ghz and Cortex™-A7 Octa core CPUs</li>
  <li>Mali-T628 MP6(OpenGL ES 3.1/2.0/1.1 and OpenCL 1.2 Full profile)</li>
  <li>2Gbyte LPDDR3 RAM PoP stacked</li>
  <li>eMMC5.0 HS400 Flash Storage</li>
  <li>2 x USB 3.0 Host, 1 x USB 2.0 Host</li>
  <li>Gigabit Ethernet port</li>
  <li>HDMI 1.4a for display</li>
  <li>Size : 83 x 58 x 20 mm approx.(excluding cooler)</li>
  <li>Power: 5V/4A input</li>
  <li>Linux Kernel 4.14 LTS</li>
  <li>We guarantee the production of XU4 to year 2021, but expect to continue production long after.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-xu4-special-price/">Hardkernel</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 29 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_xu4q/</guid>
    </item>

    <item>
      <title>ODYSSEY - X86J4105</title>
      <link>https://circuitpython.org/blinka/odyssey_x86j4105/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/odyssey_x86j4105.jpg 300w,
               /assets/images/boards/large/odyssey_x86j4105.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/odyssey_x86j4105.jpg" alt="Image of Board" loading="lazy">
<p>By SeeedStudio</p> <p>Edge Computing devices are playing an increasingly important role in the field of IoT. Nowadays, a computer is not just a big rectangular black box under the desk, or a small portable device working on your knees. Computers are ubiquitous devices that span calculating, communicating, and data storage. Based on this definition, here we would like to introduce our new product – the ODYSSEY - X86J4105.</p>

<p>ODYSSEY is a series of SBC (Single Board Computer), allowing you to build Edge Computing applications with ease. The ODYSSEY - X86J4105,  based on Intel Celeron J4105, is a Quad-Core 1.5GHz CPU that bursts up to 2.5GHz. It includes all the powerful features of Mini PC such as including an 8GB LPDDR4 RAM, 64GB eMMC Storage(optional), onboard Wi-Fi/BLE, Dual Gigabyte Ethernet Ports, Audio Input and Output, USB Ports, HDMI, SATA Connectors and PCIe, however, within a cost-effective price. With simple connections to Mouse, Keyboard and Monitor to ODYSSEY - X86J4105, you will get a Desktop Mini PC right away. With eMMC versions, you even have the Windows 10 Enterprise pre-installed!</p>

<p>Just simply connect to a mouse, a keyboard and a monitor with the ODYSSEY – X86J4105, you will get a powerful Desktop Mini PC that can run Windows and Linux OS.</p>

<ul>
  <li>Intel® Celeron® J4105, Quad-Core 1.5-2.5GHZ</li>
  <li>Dual-Band Frequency 2.4GHz/5GHz WiFi</li>
  <li>Intel® UHD Graphics 600</li>
  <li>Dual Gigabit Ethernet</li>
  <li>Integrated Arduino Coprocessor ATSAMD21 ARM® Cortex®-M0+</li>
  <li>Raspberry Pi 40-Pin Compatible</li>
  <li>2 x M.2 PCIe (B Key and M Key)</li>
  <li>Support Windows 10 &amp; Linux OS</li>
  <li>Compatible with Grove Ecosystem</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/ODYSSEY-X86J4105800-p-4445.html">SeeedStudio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 27 Nov 2022 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/odyssey_x86j4105/</guid>
    </item>

    <item>
      <title>Onion Omega2+</title>
      <link>https://circuitpython.org/blinka/onion_omega2plus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/onion_omega2plus.jpg 300w,
               /assets/images/boards/large/onion_omega2plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/onion_omega2plus.jpg" alt="Image of Board" loading="lazy">
<p>By Onion Corporation</p> <p>Ever wanted your own Linux-based IoT computer? A small one, that can be battery powered? The Onion Omega2 is sort of in-between a microcontroller (like an Arduino/CircuitPython/MakeCode running chip) and a full-fledged microcomputer (like Raspbery Pi). What you get is a bite-sized development board that combines the power-efficiency of the Arduino and the flexibility of the Raspberry Pi!</p>

<p>So, for example, it runs Linux, but isn’t going to replace your desktop computer. It’s low power and has a static filesystem, but still requires some time to boot up. It’s based on the MediaTek MT7688, a WiFi SoC that was initially designed for devices like WiFi routers or complex IoT devices. It comes with a variant of OpenWRT (nicknamed Onion OS) that is a slimmed down version of Linux. It’s not going to run node.js or minecraft but it is Linux. So, you get WiFi built in, and a full TCP/IP stack with SSL/TLS with all the scripting/programming language support that you expect.</p>

<p>Unlike a Raspberry Pi, you don’t get a desktop or even a console on HDMI. Instead, you use a serial connection/ssh and the command line, or the simplified webpage interface to program it. So it’s good if you have a bit of experience with those things!</p>

<p>Where it excels is as a physical computing platform, with hardware and WiFi. Wanna know how to blink an LED, or even multiple (!) LEDs? You can do that! You’ll be able to read switches and use shift registers. Blinking text? No problem! A 7-Segment display and an LCD screen are included! The Maker Kit even comes with relay, PWM/servo and OLED add-ons so you can have a display and robotics interfacing. Comes with all the fixins’ to get comfortable with IoT and programming languages, including Python, C++, Node js, php, Bash, Ruby, Perl, Lua, G, and more!</p>

<p>This maker kit has everything you need to fully build and prototype just about any kind of project you can think of with Onion Omega2+. Once you have your project or product well-developed you can then purchase individual Omega2’s and add-on boards from Onion.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3808">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 22 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/onion_omega2plus/</guid>
    </item>

    <item>
      <title>Orange Pi 2</title>
      <link>https://circuitpython.org/blinka/orange_pi_2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_2.jpg 300w,
               /assets/images/boards/large/orange_pi_2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_2.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi 2 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>DC input can supply power, but USB OTG input don’t supply power</li>
  <li>Four USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>Recovery Button(SW2)</li>
  <li>UBoot Button(SW3)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian, Rasberry Pi Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/store/1553371">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 11 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_2/</guid>
    </item>

    <item>
      <title>Orange Pi 3</title>
      <link>https://circuitpython.org/blinka/orange_pi_3/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_3.jpg 300w,
               /assets/images/boards/large/orange_pi_3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_3.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi 3 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<h3 id="hardware-specification">Hardware specification</h3>
<ul>
  <li>H6 Quad-core 64-bit 1.8GHZ ARM Cortex™-A53</li>
  <li>High-performance multi-core GPU Mali T720</li>
  <li>OpenGL ES3.1/3.0/2.0/1.1</li>
  <li>Microsoft DirectX 11 FL9_3</li>
  <li>ASTC(Adaptive Scalable Texture Compression)</li>
  <li>Floating point operation greater than 70 GFLOPS</li>
  <li>AP6256, IEEE 802.11 a/b/g/n/ac, BT5.0</li>
  <li>10/100M/1000M , ethernet RJ45</li>
  <li>RTL8211</li>
  <li>MIC</li>
  <li>HDMI 2.0a and 3.5 mm AV Jack</li>
  <li>HDMI 2.0a and CVBS</li>
  <li>H265/HEVC Main/Main10 profile@Level5.2 High-tier ;4K@60fps, up to 6Kx4K@30fps</li>
  <li>H264/AVC BP/MP/HP@level5.1, MVC, 4K@30fps</li>
  <li>VP9，Profile 0/2, 4K@30fps</li>
  <li>AVS+/AVS JIZHUN profile@level 6.0, 1080P@60fps</li>
  <li>Supports RC mode</li>
  <li>Supports x1 Gen2(5.0Gbps) lane</li>
  <li>Complies with PCI Express Base 2.0 Specification</li>
  <li>DC input，MicroUSB (OTG)</li>
  <li>AXP805</li>
  <li>1<em>USB 2.0 Host, 1</em>USB OTG 2.0</li>
  <li>4*USB 3.0 Host</li>
  <li>26 Pin GPIO</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://pt.aliexpress.com/item/1005001804159295.html">Aliexpress</a></li>
  <li><a href="https://amzn.to/3qGAtOM">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jan 2022 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_3/</guid>
    </item>

    <item>
      <title>Orange Pi 4</title>
      <link>https://circuitpython.org/blinka/orange_pi_4/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_4.jpg 300w,
               /assets/images/boards/large/orange_pi_4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_4.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi 4 is an open-source single-board computer with dual-band wireless WiFi and Bluetooth 5.0. It is highly compact with a dimension of 56 x 91mm.</p>

<h3 id="hardware-specification">Hardware specification</h3>
<ul>
  <li>Rockchip RK3399 (28nm HKMG process)</li>
  <li>6-core ARM® 64-bit processor, main frequency speeds up to 2.0GHz</li>
  <li>Based on the large and small size core architecture of big.LITTLE</li>
  <li>Dual-core Cortex-A72 (large core) + Quad-core Cortex-A53 (small core)</li>
  <li>Mali-T864 GPU</li>
  <li>Supports OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1,OpenCL, DX11, support for AFBC</li>
  <li>RK808 PMU</li>
  <li>Dual 4GB LPDDR4 + 16GB EMMC Flash</li>
  <li>Dual 4GB LPDDR4 +EMMC Flash (Default Empty)</li>
  <li>AP6256, IEEE 802.11 a/b/g/n/ac, BT5.0</li>
  <li>10/100/1000Mbps Ethernet (Realtek RTL8211E)</li>
  <li>Output: 3.5mm Jack and HDMI2.0a Input: MIC</li>
  <li>1 x HDMI 2.0 (Type-A), Supports 4K@60fps output</li>
  <li>1 x DP 1.2 (Display Port), Supports 4K@60fps output</li>
  <li>Supports Dual MIPI-DSI （4 lines per channel</li>
  <li>2 x MIPI-CSI Camera connector (MIPI_RX0, MIPI_TX1/RX1)</li>
  <li>2 x USB2.0 HOST，1x USB3.0 HOST, 1 x USB3.0 Type-C</li>
  <li>Support RTC, on-board battery backup interface</li>
  <li>3 pins Debug UART</li>
  <li>GPIO1 40 pins（1 x I2S, 2 x I2C, 1 x SPI/UART, 8 x GPIO</li>
  <li>GPIO2 24pin PCIE port</li>
  <li>Upgrade Key &amp; Reset Key</li>
  <li>DC 5V/3A TYPE-C 5V/3A</li>
  <li>Power led &amp; Status led</li>
  <li>Android 8.1, Ubuntu 16.04, Ubuntu 18.04, Debian 9</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://amzn.to/3ypCBiG">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_4/</guid>
    </item>

    <item>
      <title>Orange Pi 4 LTS</title>
      <link>https://circuitpython.org/blinka/orange_pi_4_lts/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_4_lts.jpg 300w,
               /assets/images/boards/large/orange_pi_4_lts.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_4_lts.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi 4 LTS is an open-source single-board computer with dual-band wireless WiFi and Bluetooth 5.0. It is highly compact with a dimension of 56 x 91mm.</p>

<p>Orange Pi 4 LTS uses the Rockchip RK3399(28nm HKMG Process), and has 3 GB /4GB LPDDR4 SDRAM, 16GB EMMC Flash（option）. It can run Android 8.1,Ubuntu16.04,Ubuntu18.04,Debian9. Orange Pi 4 LTS offers a range of different ports, including HDMI output, 26pin headers, LCD connector, Gbps Ethernet port, 2<em>USB 2.0, 1</em>USB 3.0, 1*USB 3.0 TYPE-C, mini PCIE connector etc. It is powered through DC and Type-C. It is a good choice for applications that need strong networking perfomance.</p>

<h3 id="hardware-specification">Hardware specification</h3>
<ul>
  <li>Rockchip RK3399 (4GB) or Rockchip RK3399-T(3GB)</li>
  <li>Based on the large and small size of big.LITTLE core architecture:Dual-core Cortex-A72 (large core)+ Quad-core Cortex-A53(small core)</li>
  <li>6-core ARMR64-bit processor ,main frequency speeds up to 1.6GHz(3GB)/1.8 GHz(4GB)</li>
  <li>High-performance Multi-core Mali-T860 GPU</li>
  <li>Supports OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1, OpenCL, DX11</li>
  <li>Support for AFBC</li>
  <li>RK808 PMU</li>
  <li>3 GB /4GB LPDDR4</li>
  <li>16GB EMMC Flash (option)</li>
  <li>MicroSD (TF) Card Slot</li>
  <li>Support 10/100M/1000M Ethernet (YT8531C)</li>
  <li>CDW.20U5622-00</li>
  <li>Support IEEE 802.11 a/b/g/n/ac, 2T2R • Support BT 5.0</li>
  <li>HDMI 2.0,Supports 4K@60fps output</li>
  <li>1* DP 1.2(Display Port), Supports 4K@60fps output</li>
  <li>Supports Dual MIPl-DSI (4 lines Per Channel)</li>
  <li>Output: 3.5mm Jack and HDMI2.0a</li>
  <li>lnput: MIC</li>
  <li>2 * MIPI-CSl Camera Connector (MIPI_RXO、MIPI_TX1/RX1)</li>
  <li>2 * USB2.0 ,1*USB3.0,1 * USB3.0 Type-C</li>
  <li>3 pins Debug UART</li>
  <li>GPIO1 26 pins</li>
  <li>Support Mini PCIe port</li>
  <li>Upgrade Key &amp; Reset Key</li>
  <li>DC 5V/3A or 5V/4A, TYPE-C 5V/4A</li>
  <li>Power led &amp; Status led</li>
  <li>Android, Ubuntu, Debian</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.us/item/3256803525557239.html">Aliexpress</a></li>
  <li><a href="https://amzn.to/3fPtK3l">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_4_lts/</guid>
    </item>

    <item>
      <title>Orange Pi Lite</title>
      <link>https://circuitpython.org/blinka/orange_pi_lite/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_lite.png 300w,
               /assets/images/boards/large/orange_pi_lite.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_lite.png" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Lite？
It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Lite?
You can use it to build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi is open source</p>

<p>Who’s it for?
Orange Pi Lite is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>WiFi with external antenna</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Two USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header.</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32662738571.html?spm=a2g0o.productlist.0.0.756017c14GjaGI&amp;algo_pvid=eb42f805-f4da-4d5b-8e7d-a95ba887558d&amp;algo_expid=eb42f805-f4da-4d5b-8e7d-a95ba887558d-0&amp;btsid=15fd8f3d-5a4c-41da-9cda-329a4cc9f037&amp;ws_ab_test=searchweb0_0,searchweb201602_5,searchweb201603_53">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_lite/</guid>
    </item>

    <item>
      <title>Orange Pi One</title>
      <link>https://circuitpython.org/blinka/orange_pi_one/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_one.png 300w,
               /assets/images/boards/large/orange_pi_one.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_one.png" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi One？ It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 512MB DDR3 SDRAM</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>One USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32603308880.html?spm=2114.12010612.8148356.1.71126d5axQJcvl">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_one/</guid>
    </item>

    <item>
      <title>Orange Pi PC</title>
      <link>https://circuitpython.org/blinka/orange_pi_pc/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_pc.jpg 300w,
               /assets/images/boards/large/orange_pi_pc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_pc.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi PC？It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 1GB DDR3 SDRAM.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/store/product/Orange-Pi-PC-linux-and-android-mini-PC-Beyond-Raspberry-Pi-2/1553371_32448079125.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_pc/</guid>
    </item>

    <item>
      <title>Orange Pi PC Plus</title>
      <link>https://circuitpython.org/blinka/orange_pi_pc_plus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_pc_plus.jpg 300w,
               /assets/images/boards/large/orange_pi_pc_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_pc_plus.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi PC Plus？</p>

<p>It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 1GB DDR3 SDRAM.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>8GB EMMC Flash</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>DC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32670775037.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_pc_plus/</guid>
    </item>

    <item>
      <title>Orange Pi Plus 2E</title>
      <link>https://circuitpython.org/blinka/orange_pi_plus_2e/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_plus_2e.png 300w,
               /assets/images/boards/large/orange_pi_plus_2e.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_plus_2e.png" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Plus 2E？
It’s an open-source single-board computer. It can run Android 4.4 , Ubuntu, Debian Image, it uses the AllWinner H3 SoC, and has 2GB DDR3 SDRAM</p>

<p>What can I do with Orange Pi Plus 2E?
Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Plus 2E is open source</p>

<p>Who’s it for?
Orange Pi Plus 2E is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>2GB DDR3 (shared with GPU)</li>
  <li>16GB EMMC Flash</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>WiFi - Realtek RTL8189ETV, IEEE 802.11 b/g/n</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4), Recovery Button(SW3), Uboot Button(SW2)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32665196281.html?spm=2114.12010612.8148356.1.382d5e2771I2wb">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_plus_2e/</guid>
    </item>

    <item>
      <title>Orange Pi R1</title>
      <link>https://circuitpython.org/blinka/orange_pi_r1/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_r1.jpg 300w,
               /assets/images/boards/large/orange_pi_r1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_r1.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi R1？It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H2 SoC, and has 256MB DDR3 SDRAM.</p>

<ul>
  <li>H2 Quad-core 32-bit Cortex-A7</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>256MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(16MB)</li>
  <li>100M Ethernet 1 RJ45 (onboard 100Mbps)</li>
  <li>100M Ethernet 2 RJ45 (RTL8152B)</li>
  <li>Onboard Wifi + Bluetooth</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>Supports external board via 13 pins</li>
  <li>USB OTG can supply power</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power Button(SW602)</li>
  <li>26 Pin Header</li>
  <li>13 Pin Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android4.4, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/Orange-Pi-R1-H2-256MB-Quad-Core-Cortex-A7-Open-source-development-board-beyond-Raspberry-Pi/32827494728.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_r1/</guid>
    </item>

    <item>
      <title>Orange Pi Zero</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_zero.jpg 300w,
               /assets/images/boards/large/orange_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi Zero is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H2 Quad-core 32-bit Cortex-A7</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>256MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(16MB)</li>
  <li>100M Ethernet RJ45 (onboard 100Mbps)</li>
  <li>Onboard Wifi + Bluetooth</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>Supports external board via 13 pins</li>
  <li>USB 2.0 HOST and one USB 2.0 OTG</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power Button(SW602)</li>
  <li>26 Pin Header</li>
  <li>13 Pin Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android4.4, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/4000049806939.html?spm=2114.12010612.8148356.1.7a5b1debQdbkLe">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero/</guid>
    </item>

    <item>
      <title>Orange Pi Zero2</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_zero.jpg 300w,
               /assets/images/boards/large/orange_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi Zero2 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>Allwinner H616 64-bit high-performance Quad-core Cortex-A53 processor</li>
  <li>Mali G31 MP2</li>
  <li>Supports OpenGL ES 1.0/2.0/3.2, OpenCL 2.0</li>
  <li>512 MB/1 GB DDR3 (Shared with GPU)</li>
  <li>TF card slot</li>
  <li>2 MB SPI Flash</li>
  <li>Support 1000M/100M/10M Ethernet</li>
  <li>Onboard Wifi + Bluetooth</li>
  <li>AW859A Chip</li>
  <li>Support IEEE 802.11 a/b/g/n/ac</li>
  <li>Support BT5.0</li>
  <li>USB-C interface 5 V/2 A input</li>
  <li>3*USB 2.0 HOST (Two of them are via 13pin interface board)</li>
  <li>UART-TX, UART-RX and GND</li>
  <li>Power Button(SW602)</li>
  <li>26pin header with I2C, SPI, UART and multiple GPIO ports</li>
  <li>13pin header with 2*USB Host, IR pin, Tv-out, AUDIO (no MIC) and 3 GPIO ports</li>
  <li>Power led &amp; Status led</li>
  <li>Android 4.4, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.amazon.com/dp/B08M9MWZCQ">Amazon</a></li>
  <li><a href="https://www.aliexpress.com/item/1005001652164182.html">Aliexpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 08 Feb 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero2/</guid>
    </item>

    <item>
      <title>Orange Pi Zero Plus</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero_plus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_zero_plus.jpg 300w,
               /assets/images/boards/large/orange_pi_zero_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_zero_plus.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Zero Plus？</p>

<p>It’s an open-source single-board computer. It can run Android 5.1, Ubuntu, Debian image. It uses the AllWinner H5 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Zero Plus?</p>

<p>Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Zero Plus is open source</p>

<p>Who’s it for?</p>

<p>Orange Pi Zero Plus is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H5 Quad-core Cortex-A53</li>
  <li>H5 Mali450 GPU</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(2MB)</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>1000M/100M/10M Ethernet RJ45</li>
  <li>Supports external board via 13pins</li>
  <li>USB OTG can supply power</li>
  <li>UART, ground</li>
  <li>One USB 2.0 HOST, One USB 2.0 OTG</li>
  <li>Power Button(SW602)</li>
  <li>26 Pins Header, compatible with Raspberry Pi B+</li>
  <li>13 Pins Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android5.1, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32828347476.html">AliExpress</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 14 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero_plus/</guid>
    </item>

    <item>
      <title>Orange Pi Zero Plus2 (H5 Version)</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero_plus2_h5/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/orange_pi_zero_plus2_h5.jpg 300w,
               /assets/images/boards/large/orange_pi_zero_plus2_h5.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/orange_pi_zero_plus2_h5.jpg" alt="Image of Board" loading="lazy">
<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Zero Plus2？</p>

<p>It’s an open-source single-board computer. It can run Android 4.4(H3 version)/Android 5.1(H5 version) , Ubuntu, Debian, it uses the AllWinner H3/H5 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Zero Plus2?</p>

<p>Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Zero Plus2 is open source</p>

<p>Who’s it for?
Orange Pi Zero Plus2 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H5 Quad-core Cortex-A53</li>
  <li>H3 Quad-core Cortex-A7</li>
  <li>H5 Mali450 GPU</li>
  <li>H3 Mali400MP2 GPU</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>AP6212, IEEE 802.11 b/g/n, BT4.2</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>USB OTG can supply power</li>
  <li>UART, ground</li>
  <li>Power Button</li>
  <li>26 Pins Header, compatible with Raspberry Pi B+</li>
  <li>13 Pins Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android Ubuntu, Debian, Raspbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newegg.com/p/285-002U-00005">Newegg</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 02 Nov 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero_plus2_h5/</guid>
    </item>

    <item>
      <title>Pine A64+</title>
      <link>https://circuitpython.org/blinka/pine64/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pine64.png 300w,
               /assets/images/boards/large/pine64.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pine64.png" alt="Image of Board" loading="lazy">
<p>By Pine64</p> <p>The PINE A64 (+) is the first pine64.org Single Board Computer powered by Allwinner’s A64 Quad-Core ARM Cortex A53 64-Bit SOC. There are many Operating Systems available for the PINE A64 (+) created by the open source community and various partner projects. Currently the majority of Linux distributions for the PINE A64 are using mainline Linux but there are a number of BSP-based distribution and / or legacy systems that you can download too.</p>

<p>Apart from Linux, you also have a choice of a selection of *BSDs, Android, Remix OS and Windows IoT.</p>

<ul>
  <li>Allwinner A64 Quad Core SOC with Mali 400 MP2 GPU</li>
  <li>DDR3 RAM (up to 2GB)</li>
  <li>Gigabit Ethernet</li>
  <li>Micro SD</li>
  <li>HD Digital Video Out</li>
  <li>2x USB 2.0 Host</li>
  <li>Euler Bus</li>
  <li>Expansion Bus</li>
  <li>PI-2 Bus</li>
  <li>Touch Panel Port (TP)</li>
  <li>Display Serial Interface (DSI) Port</li>
  <li>IR R/X Port</li>
  <li>Real Time Clock Port (RTC)</li>
  <li>Lithium Battery Port</li>
  <li>CMOS Sensor Interface Port</li>
  <li>Optional 802.11GBN + BT 4.0 module expansion module</li>
  <li>Headphone Jack</li>
  <li>Micro USB Power (5V 2A) Port</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.pine64.org/?product=pine-a64-board-2gb">pine64 2GB</a></li>
  <li><a href="https://store.pine64.org/?product=pine-a64-board-1gb">pine64 1GB</a></li>
  <li><a href="https://store.pine64.org/?product=pine-a64-board">pine64 512MB</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 09 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/pine64/</guid>
    </item>

    <item>
      <title>PINE H64</title>
      <link>https://circuitpython.org/blinka/pine_h64/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pine_h64.jpg 300w,
               /assets/images/boards/large/pine_h64.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pine_h64.jpg" alt="Image of Board" loading="lazy">
<p>By Pine64</p> <p>PINE H64 is latest Single Board Computer by Pine64. Its powered by an Allwinner “H6” Quad-Core ARM Cortex A53 64-Bit Processor with MALI T-722 GPU. The PINE H64 is equipped with up-to 3GB LPDDR3 PC-1600 system memory and 128Mb SPI boot Flash. There is also an optional eMMC module (up to 128GB) and microSD slot for booting. The board is equipped with an onboard build-in 11n Wifi/BT, 1x USB 3.0 Host, 2x USB 2.0 Host, Gigabit Ethernet, PI-2 GPIO Bus, Euler GPIO Bus as well as many other peripheral device interface such as UART, SPI, I2C, for makers to integrate with sensors and other peripherals.</p>

<ul>
  <li>Allwinner H6 Quad-Core SOC with Mali T-722 MP2</li>
  <li>LPDDR3 RAM (up to 3GB)</li>
  <li>Gigabit Ethernet</li>
  <li>Micro SD Slot</li>
  <li>eMMC Module Slot</li>
  <li>SPI Flash 128Mbit</li>
  <li>4K Digital Video Out</li>
  <li>2x USB 2.0 Host</li>
  <li>1x USB 3.0 Host</li>
  <li>PI-2 Bus</li>
  <li>IR R/X Port</li>
  <li>Real Time Clock Port (RTC)</li>
  <li>A/V Jack</li>
  <li>Integrated WiFi 802.11n / BT 4.0</li>
  <li>Power, Reset and Recovery buttons</li>
  <li>3.5mm Barrel Power (5V 3A) Port</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://pine64.com/product/pine-h64-model-b-2gb-single-board-computer">pine64 2GB</a></li>
  <li><a href="https://pine64.com/product/pine-h64-model-b-3gb-single-board-computer/">pine64 3GB</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 01 Nov 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/pine_h64/</guid>
    </item>

    <item>
      <title>PocketBeagle</title>
      <link>https://circuitpython.org/blinka/pocketbeagle/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pocketbeagle.jpg 300w,
               /assets/images/boards/large/pocketbeagle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pocketbeagle.jpg" alt="Image of Board" loading="lazy">
<p>By BeagleBoard</p> <p>Want a powerful 1GHz AM3358 powered Linux single board that’s ultra-tiny and open-source? PocketBeagle offers a wealth of computer power in a small footprint (pawprint?). This board is just like the BeagleBone Black but small enough to fit in your wallet. It has a fully-integrated chip that combines the processor and RAM all on one chip, so it’s super small. Despite the compact shape, there are 72 total breakout pads, a microSD card slot for your filesystem and OS, and a native USB connection</p>

<p>Compared to other single board Linux computers, what differentiates the BeagleBone is that it has multiple I2C, SPI and UART peripherals (many boards only have one of each), built in hardware PWMs, analog inputs, and two separate 200MHz microcontroller system called the PRU that can handle real-time tasks like displaying to RGB matrix displays or NeoPixels.</p>

<p>It’s not too much larger than our Feathers, but comes with 72 expansion pin headers, high-speed USB, 8 analog pins, 44 digital I/Os, and plenty of digital interface peripherals.</p>

<p>You can also add a USB host connection by wiring a USB A socket to the broken out USB host connections labeled VI, D+, D-, ID and GND. Then plug in any USB Ethernet, Bluetooth, and Wi-Fi device with available Linux drivers.</p>

<ul>
  <li>Processor: Octavo Systems OSD3358 1GHz ARM® Cortex-A8</li>
  <li>512MB DDR3 RAM integrated</li>
  <li>Integrated power management</li>
  <li>2×32-bit 200-MHz programmable real-time units (PRUs)</li>
  <li>ARM Cortex-M3</li>
  <li>Based on new Octavo Systems OSD3358-SM 21mm x 21mm system-in-package that includes 512MB DDR3 RAM, 1-GHz ARM Cortex-A8 CPU, 2x 200-MHz PRUs, ARM Cortex-M3, 3D accelerator, power/battery management and EEPROM</li>
  <li>72 expansion pin headers with power and battery I/Os, high-speed USB, 8 analog inputs, 44 digital I/Os and numerous digital interface peripherals</li>
  <li>microUSB host/client and microSD connectors</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4179">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/pocketbeagle/</guid>
    </item>

    <item>
      <title>Pyboard</title>
      <link>https://circuitpython.org/blinka/pyboard_v11/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/pyboard_v11.jpg 300w,
               /assets/images/boards/large/pyboard_v11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/pyboard_v11.jpg" alt="Image of Board" loading="lazy">
<p>By Damien George</p> <p>The pyboard is a compact and powerful electronics development board that runs MicroPython. It connects to your PC over USB, giving you a USB flash drive to save your Python scripts, and a serial Python prompt (a REPL) for instant programming. Requires a micro USB cable, and will work with Windows, Mac and Linux.</p>

<p>There are 3 main ways to control the pyboard:</p>

<ul>
  <li><strong>REPL:</strong> Connecting to your PC via USB, the board appears as a USB virtual comms port (CDC VCP) and you can use any serial program to connect and get a Python REPL prompt. This allows you to instantly type and execute Python commands, just like you would when running Python on your PC. You can also redirect the REPL to any of the UARTs on the pyboard.</li>
  <li><strong>Remote script:</strong> You can change from REPL to raw REPL mode by sending ctrl-A, and then in raw REPL mode you can send an arbitrary Python script to the board for it to execute immediately. A Python script is available which makes using this mode very simple: you just run python pyboard.py script_to_run.py and this will execute script_to_run.py on the pyboard, returning any output.</li>
  <li><strong>From file:</strong> The pyboard has a small, built-in filesystem which lives in part of the flash memory of the microcontroller. It also has an SD card slot if you want to extend the available storage. When you connect the pyboard to your PC, it appears as a USB flash storage device and you can access (mount) the internal filesystem and the SD card this way. If you copy a Python script to the filesystem and call it main.py then the board will execute this script when it starts up. This way you can run scripts without being connected to a PC.</li>
</ul>

<p><strong>Main features of the hardware:</strong></p>
<ul>
  <li>STM32F405RG microcontroller</li>
  <li>168 MHz Cortex M4 CPU with hardware floating point</li>
  <li>1024KiB flash ROM and 192KiB RAM</li>
  <li>Micro USB connector for power and serial communication</li>
  <li>Micro SD card slot, supporting standard and high capacity SD cards</li>
  <li>3-axis accelerometer (MMA7660)</li>
  <li>Real time clock with optional battery backup</li>
  <li>24 GPIO on left and right edges and 5 GPIO on bottom row, plus LED and switch GPIO available on bottom row</li>
  <li>3x 12-bit analog to digital converters, available on 16 pins, 4 with analog ground shielding</li>
  <li>2x 12-bit digital to analog (DAC) converters, available on pins X5 and X6</li>
  <li>4 LEDs (red, green, yellow and blue)</li>
  <li>1 reset and 1 user switch</li>
  <li>On-board 3.3V LDO voltage regulator, capable of supplying up to 300mA, input voltage range 3.6V to 10V</li>
  <li>DFU bootloader in ROM for easy upgrading of firmware</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2390">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 May 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/pyboard_v11/</guid>
    </item>

    <item>
      <title>Radxa Zero</title>
      <link>https://circuitpython.org/blinka/radxa_zero/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/radxa_zero.jpg 300w,
               /assets/images/boards/large/radxa_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/radxa_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Radxa</p> <p>Radxa Zero is an ultra thin SBC in small form factor with powerful performance based on Amlogic S905Y2. It can run Android and selected Linux distributions.</p>

<p>Radxa Zero features a quad core 64-bit ARM processor, up to 4GB 32bit LPDDR4 memory, HDMI output at 4K@60, WiFi and Bluetooth connectivity, USB 3.0, and 40-pin GPIO header. Additionally, the power port can also be used for USB 2.0 OTG to connect more peripheral.</p>

<h2 id="technical-details">Technical details</h2>
<ul>
  <li>Size 66mm x 30mm</li>
  <li>Amlogic S905Y2 64bit quad core processor</li>
  <li>Quad Cortex-A53, frequency 1.8Ghz, 12nm</li>
  <li>Mali G31 MP2 GPU, supports OpenGL ES 1.1 /2.0 /3.1 /3.2, Vulkan 1.1, Open CL 1.1 1.2, 2.0 Full Profile</li>
  <li>64bit dual channel LPDDR4@3200Mb/s, 1GB/ 2GB or 4GB</li>
  <li>Wifi/BT with external antenna support</li>
  <li>WIFI4/BLE4 and WIFI4/BLE5 available for different models!</li>
  <li>soldered high performance eMMC 5.1 with capacities of 8GB/ 16GB</li>
  <li>uSD slot supports up to 128G uSD card</li>
  <li>HDMI 2.1, 4K@60 HDR</li>
  <li>HD codec H265/VP9 decode 4Kx2K@60</li>
  <li>USB 3.0 Type-C HOST x1</li>
  <li>USB 2.0 Type-C OTG x1</li>
  <li>Network (depending on the model)
    <ul>
      <li>Wireless 802.11 abgn wifi 2,4GHz, Bluetooth 4.2</li>
      <li>Wireless 802.11 ac wifi 2,4/5GHz, Bluetooth 5.0</li>
    </ul>
  </li>
  <li>IO 40-pin expansion header (depending on the model):
    <ul>
      <li>1 x UART</li>
      <li>2 x SPI bus</li>
      <li>2 x I2C bus</li>
      <li>1 x PCM/I2S</li>
      <li>1 x SPDIF</li>
      <li>1 x PWM</li>
      <li>1 x ADC</li>
      <li>6 x GPIO</li>
      <li>2 x 5V DC power in</li>
      <li>2 x 3.3V power pin</li>
    </ul>
  </li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://wiki.radxa.com/Zero/getting_started">Radxa Zero - Getting Started</a>
    <h2 id="purchase">Purchase</h2>
  </li>
  <li><a href="https://shop.allnetchina.cn/products/copy-of-radxa-zero">ALLNET.CHINA</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/radxa_zero.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 02 Jun 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/radxa_zero/</guid>
    </item>

    <item>
      <title>Pi 1 Model A</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1a/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_1a.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1a.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_1a.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi 1 Model A is the original Model A.  In November 2014 It was superseded by the Raspberry Pi 1 Model A+</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>256MB RAM</li>
  <li>26-pin GPIO header</li>
  <li>Separate Composite Video Output</li>
  <li>1 USB 2.0 port</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Stereo audio output port</li>
  <li>Full-size SD port for loading your operating system and storing data</li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1a/</guid>
    </item>

    <item>
      <title>Pi 1 Model A+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1aplus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_1aplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1aplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_1aplus.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Model A+ is the low-cost variant of the Raspberry Pi. It replaced the original Model A in November 2014.</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>1 USB 2.0 port</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/raspberry-pi-1-model-a-plus/">Raspberry Pi</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1aplus/</guid>
    </item>

    <item>
      <title>Pi 1 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1b/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_1b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_1b.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Model B was the original Raspberry Pi Model B and consisted of two revisions.  In July 2014 It was superseded by the Raspberry Pi 1 Model B+</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>26-pin GPIO header</li>
  <li>Separate Composite Video Output</li>
  <li>2 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Stereo audio output port</li>
  <li>Full-size SD port for loading your operating system and storing data</li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1b/</guid>
    </item>

    <item>
      <title>Pi 1 Model B+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1bplus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_1bplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1bplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_1bplus.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Model B+ is the final revision of the original Raspberry Pi. It replaced the Model B in July 2014 and was superseded by the Raspberry Pi 2 Model B</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>4 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/1914">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1bplus/</guid>
    </item>

    <item>
      <title>Pi 2 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_2b/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_2b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_2b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_2b.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>Didn’t think the Raspberry Pi could get any better? You’re in for a big surprise! The Raspberry Pi 2 Model B is out and it’s amazing! With an upgraded ARM Cortex-A53 quad-core processor, Dual Core VideoCore IV Multimedia coprocessor, and a full Gigabyte of RAM, this pocket computer has moved from being a ‘toy’ to a real desktop PC!</p>

<p>The Raspberry Pi 2 Model B is the second-generation Raspberry Pi. It replaced the original Raspberry Pi 1 Model B+ in February 2015.</p>

<ul>
  <li>A 900MHz quad-core ARM Cortex-A7 CPU</li>
  <li>1GB RAM</li>
  <li>100 Base Ethernet</li>
  <li>4 USB ports</li>
  <li>40 GPIO pins</li>
  <li>Full HDMI port</li>
  <li>Combined 3.5mm audio jack and composite video</li>
  <li>Camera interface (CSI)</li>
  <li>Display interface (DSI)</li>
  <li>Micro SD card slot</li>
  <li>VideoCore IV 3D graphics core</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/raspberry-pi-2-model-b/">Raspberry Pi</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_2b/</guid>
    </item>

    <item>
      <title>Pi 3 Model A+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3aplus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_3aplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3aplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_3aplus.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi 3 Model A+ is the latest board for the minimalist Pi fan. Like the Raspberry Pi 3 Model B+, it boasts a 64-bit quad core processor running at 1.4 GHz, dual-band 2.4 GHz and 5 GHz wireless LAN, and Bluetooth 4.3/BLE. This low-cost Pi uses the same processor as the model 3 B+, but does away with the Ethernet jack and three of the USB ports. It’s still compatible with all Pi operating systems and software, and has the exact same 40 pin GPIO connector and camera/display sockets, so any HATs or Pi Plates or other things that plug into the model B+ will work just the same.</p>

<ul>
  <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li>
  <li>512MB LPDDR2 SDRAM</li>
  <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2/BLE</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>Single USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi Camera Module</li>
  <li>DSI display port for connecting a Raspberry Pi Touch Display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2.5A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4027">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3aplus/</guid>
    </item>

    <item>
      <title>Pi 3 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3b/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_3b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_3b.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>Did you really think the Raspberry Pi would stop getting better? At this point, we sound like a broken record, extolling on the new Pi’s myriad improvements like we’re surprised that the folks at the Raspberry Pi Foundation are continuously making their flagship board better.  Still, we’ll say it again - the Raspberry Pi team have outdone themselves. The Raspberry Pi 3 Model B is out and it is AMAZING.</p>

<ul>
  <li>Quad Core 1.2GHz Broadcom BCM2837 64bit CPU</li>
  <li>1GB RAM</li>
  <li>BCM43438 wireless LAN and Bluetooth Low Energy (BLE) on board</li>
  <li>100 Base Ethernet</li>
  <li>40-pin extended GPIO</li>
  <li>4 USB 2 ports</li>
  <li>4 Pole stereo output and composite video port</li>
  <li>Full size HDMI</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>Upgraded switched Micro USB power source up to 2.5A</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3055">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3b/</guid>
    </item>

    <item>
      <title>Pi 3 Model B+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3bplus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_3bplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3bplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_3bplus.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi 3 Model B+ is the most popular Raspberry Pi computer made, and the Pi Foundation knows you can always make a good thing better! And what could make the Pi 3 better? How about a faster processor, 5 GHz WiFi, and updated Ethernet chip with PoE capability? Good guess - that’s exactly what they did!</p>

<p>The Raspberry Pi 3 Model B+ is the latest product in the Raspberry Pi 3 range, boasting an updated 64-bit quad core processor running at 1.4GHz with built-in metal heatsink, dual-band 2.4GHz and 5GHz wireless LAN, faster (300 mbps) Ethernet, and PoE capability via a separate PoE HAT.</p>

<ul>
  <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li>
  <li>1GB LPDDR2 SDRAM</li>
  <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2, BLE</li>
  <li>Gigabit Ethernet over USB 2.0 (maximum throughput 300 Mbps)</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>4 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2.5A DC power input</li>
  <li>Power-over-Ethernet (PoE) support (requires separate PoE HAT)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3775">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3bplus/</guid>
    </item>

    <item>
      <title>Pi 400 Desktop</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_400/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_400.jpg 300w,
               /assets/images/boards/large/raspberry_pi_400.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_400.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>Raspberry Pi 400 is your complete personal computer, built into a compact keyboard. Featuring a quad-core 64-bit processor, 4GB of RAM, wireless networking, dual-display output, and 4K video playback, as well as a 40-pin GPIO header, it’s the most powerful and easy-to-use Raspberry Pi computer yet.</p>

<ul>
  <li>Broadcom BCM2711 quad-core Cortex-A72 (ARM v8) 64-bit SoC @ 1.8GHz</li>
  <li>4GB LPDDR4-3200</li>
  <li>Dual-band (2.4GHz and 5.0GHz) IEEE 802.11b/g/n/ac wireless LAN</li>
  <li>Bluetooth 5.0, BLE</li>
  <li>Gigabit Ethernet</li>
  <li>2 × USB 3.0 and 1 × USB 2.0 ports</li>
  <li>Horizontal 40-pin GPIO header</li>
  <li>2 × micro HDMI ports (supports up to 4Kp60)</li>
  <li>H.265 (4Kp60 decode); H.264 (1080p60 decode, 1080p30 encode); OpenGL ES 3.0 graphics</li>
  <li>MicroSD card slot for operating system and data storage</li>
  <li>78- or 79-key compact keyboard (depending on regional variant)</li>
  <li>5V DC via USB connector</li>
  <li>Operating temperature: 0°C to +50°C ambient</li>
  <li>Maximum dimensions 286 mm × 122 mm × 23 mm</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4796">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 02 Nov 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_400/</guid>
    </item>

    <item>
      <title>Pi 4 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_4b/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_4b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_4b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_4b.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi 4 Model B is the newest Raspberry Pi computer made, and the Pi Foundation knows you can always make a good thing better! And what could make the Pi 4 better than the 3? How about a faster processor, USB 3.0 ports, and updated Gigabit Ethernet chip with PoE capability? Good guess - that’s exactly what they did!</p>

<p>The Raspberry Pi 4 is the latest product in the Raspberry Pi range, boasting an updated 64-bit quad core processor running at 1.4GHz with built-in metal heatsink, USB 3 ports, dual-band 2.4GHz and 5GHz wireless LAN, faster (300 mbps) Ethernet, and PoE capability via a separate PoE HAT.</p>

<ul>
  <li>Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li>
  <li>1GB, 2GB or 4GB LPDDR4-2400 SDRAM (depending on model)</li>
  <li>2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE</li>
  <li>Gigabit Ethernet</li>
  <li>2 USB 3.0 ports; 2 USB 2.0 ports.</li>
  <li>Raspberry Pi standard 40 pin GPIO header (fully backwards compatible with previous boards)</li>
  <li>2 × micro-HDMI ports (up to 4kp60 supported)</li>
  <li>2-lane MIPI DSI display port</li>
  <li>2-lane MIPI CSI camera port</li>
  <li>4-pole stereo audio and composite video port</li>
  <li>H.265 (4kp60 decode), H264 (1080p60 decode, 1080p30 encode)</li>
  <li>OpenGL ES 3.0 graphics</li>
  <li>Micro-SD card slot for loading operating system and data storage</li>
  <li>5V DC via USB-C connector (minimum 3A)</li>
  <li>5V DC via GPIO header (minimum 3A)</li>
  <li>Power over Ethernet (PoE) enabled (requires separate PoE HAT)</li>
  <li>Operating temperature: 0 – 50 degrees C ambient</li>
  <li>A good quality 2.5A power supply can be used if downstream USB peripherals consume less than 500mA in total.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4295">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_4b/</guid>
    </item>

    <item>
      <title>Compute Module 1</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm1/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm1.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm1.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application.</p>

<p>The Compute Module contains the guts of a Raspberry Pi (the BCM2835 processor and 512MB RAM) as well as a 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). This is all integrated on to a small 67.6x30mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2835 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the module, we provide an open-source breakout board with a single module in an affordable development kit.</p>

<p>The original Compute Module was replaced by CM3 in January 2017 but is compatible with the new Compute Module IO Board V3, and remains available for sale.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm1/</guid>
    </item>

    <item>
      <title>Compute Module 3</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm3.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm3.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Compute Module 3 contains the guts of a Raspberry Pi 3 (the BCM2837 processor and 1GB RAM) as well as an optional 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the Module, we provide an open-source breakout board with a single Module in an affordable development kit.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3/</guid>
    </item>

    <item>
      <title>Compute Module 3 Lite</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3lite/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm3lite.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm3lite.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Compute Module 3 contains the guts of a Raspberry Pi 3 (the BCM2837 processor and 1GB RAM) as well as an optional 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the Module, we provide an open-source breakout board with a single Module in an affordable development kit.</p>

<p>The Compute Modules 3 Lite brings the SD card interface to the Module pins so a user can wire this up to an eMMC or SD card of their choice.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3lite/</guid>
    </item>

    <item>
      <title>Compute Module 3+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3plus/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm3plus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm3plus.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application. CM3+ (Compute Module 3+) is the Raspberry Pi 3 B+-based revision of the original Compute Module. The big update to the CM3+ compared to the CM3 series is more eMMC Flash memory and the new heat spreader on the main processor which will let it run at full speed much faster without overheating.</p>

<p>The Compute Module contains the guts of a Raspberry Pi 3 B+ (the BCM2837B0 processor and 1GB RAM) as well as a 8GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 B+ has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31.1mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory).</p>

<p>The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837B0 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as the Pi Foundation has put all the tricky bits onto the Module itself.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4094">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3plus/</guid>
    </item>

    <item>
      <title>Compute Module 3+ Lite</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3pluslite/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_cm3pluslite.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3pluslite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_cm3pluslite.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application. CM3+ (Compute Module 3+ Lite) is the Raspberry Pi 3 B+-based revision of the original Compute Module. The big update to the CM3+ compared to the CM3 series is the new heat spreader on the main processor which will let it run at full speed much faster without overheating.</p>

<p>The Compute Module contains the guts of a Raspberry Pi 3 B+ (the BCM2837B0 processor and 1GB RAM). The Lite version does not come with on-module eMMC flash found on the Compute Module 3+. It also does not contain the WiFi/Bluetooth chipset that comes with the Pi 3 B+.</p>

<p>The Pi 3 B+ has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31.1mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory).</p>

<p>This version is intended for users who will be adding and using an SD card interface on the interface board.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4093">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3pluslite/</guid>
    </item>

    <item>
      <title>Compute Module 4 IO Board</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm4io/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberrypi_cm4io.jpg 300w,
               /assets/images/boards/large/raspberrypi_cm4io.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberrypi_cm4io.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>Compute Module 4</p>

<p>The power of Raspberry Pi 4 in a compact form factor for deeply embedded applications. Raspberry Pi Compute Module 4 incorporates a quad-core ARM Cortex-A72 processor, dual video output, and a wide selection of other interfaces. Available in 32 variants, with a range of RAM and eMMC Flash options, and with or without wireless connectivity.</p>

<ul>
  <li>Broadcom BCM2711 quad-core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li>
  <li>H.265 (HEVC) (up to 4Kp60 decode), H.264 (up to 1080p60 decode, 1080p30 encode)</li>
  <li>OpenGL ES 3.0 graphics</li>
  <li>Options for 1GB, 2GB, 4GB or 8GB LPDDR4-3200 SDRAM (depending on variant)</li>
  <li>Options for 0GB (“Lite”), 8GB, 16GB or 32GB eMMC Flash memory (depending on variant)</li>
  <li>Option for fully certified radio module:</li>
  <li>2.4 GHz, 5.0 GHz IEEE 802.11 b/g/n/ac wireless;</li>
  <li>Bluetooth 5.0, BLE;</li>
  <li>On-board electronic switch to select either external or PCB trace antenna</li>
</ul>

<p>Compute Module 4 IO Board</p>

<p>Exposing every interface from Raspberry Pi Compute Module 4, the Compute Module 4 IO Board provides a development platform and reference base-board design for our most powerful Compute Module yet.</p>

<ul>
  <li>External power connector (+12V, +5V)</li>
  <li>2 x full-size HDMI 2.0 connectors</li>
  <li>2 x USB 2.0 connectors, with header for two additional connectors</li>
  <li>Gigabit Ethernet RJ45 with PoE support</li>
  <li>Micro USB socket for updating Compute Module 4</li>
  <li>MicroSD card socket for Compute Module 4 Lite (without eMMC) variants</li>
  <li>PCIe Gen 2 x1 socket</li>
  <li>Standard fan connector</li>
  <li>2 x MIPI DSI display FPC connectors (22-pin 0.5 mm pitch cable)</li>
  <li>2 x MIPI CSI-2 camera FPC connectors (22-pin 0.5 mm pitch cable)</li>
  <li>Standard Raspberry Pi HAT connectors</li>
  <li>Real-time clock with battery socket and ability to wake Compute Module 4</li>
  <li>Various jumpers to disable specific features, e.g. wireless connectivity, EEPROM writing</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4782">Adafruit - CM4</a></li>
  <li><a href="https://www.adafruit.com/product/4787">Adafruit - IO Board</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 09 Dec 2020 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm4io/</guid>
    </item>

    <item>
      <title>Pico</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_pico/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_pico.jpg 300w,
               /assets/images/boards/large/raspberry_pi_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_pico.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>The Raspberry Pi foundation changed single-board computing when they released the Raspberry Pi computer, now they’re ready to do the same for microcontrollers with the release of the brand new <strong>Raspberry Pi Pico</strong>. This low-cost microcontroller board features a powerful new chip, the <strong>RP2040</strong>, and all the fixin’s to get started with embedded electronics projects at a stress-free price.</p>

<p>The Pico is 0.825” x 2” and can have headers soldered in for use in a breadboard or perfboard, or can be soldered directly onto a PCB with the castellated pads. There’s 20 pads on each side, with groups of general purpose input-and-output (GPIO) pins interleaved with plenty of ground pins. All of the GPIO pins are 3.3V logic, and are not 5V-safe so stick to 3V! You get a total of 25 GPIO pins (technically there are 26 but IO #15 has a special purpose and should not be used by projects), 3 of those can be analog inputs (the chip has 4 ADC but one is not broken out). There are no true analog output (DAC) pins.</p>

<p>On the slim green board is minimal circuitry to get you going: A 5V to 3.3V power supply converter, single green LED on GP25, boot select button, RP2040 chip with dual-core Cortex M0, 2 MegaBytes of QSPI flash storage, and crystal.</p>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader.</strong> What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use a PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>At the time of launch, there is no Arduino core support for this board. There is <a href="https://github.com/raspberrypi/pico-sdk">great C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a CircuitPython port!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think its the easiest way to get started</a> and it has support with most our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built in FLASH memory. Instead that is provided by the external QSPI flash chip. On this board there is 2MB, which is shared between the program its running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals</li>
  <li>2 UARTs</li>
  <li>2 SPI controllers</li>
  <li>2 I2C controllers</li>
  <li>16 PWM channels</li>
  <li>USB 1.1 controller and PHY, with host and device support</li>
  <li>8 PIO state machines</li>
</ul>

<p><a href="https://raspberrypi.org/documentation/pico/getting-started/">Click here for the Raspberry Pi documentation.</a>
<a href="https://learn.adafruit.com/circuitpython-libraries-on-micropython-using-the-raspberry-pi-pico">Click here for CircuitPython Libraries on MicroPython using the Raspberry Pi Pico.</a>
<a href="https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico">Click here for CircuitPython Libraries on any Computer with Raspberry Pi Pico.</a></p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4883">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 20 May 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_pico/</guid>
    </item>

    <item>
      <title>Zero</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_zero/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zero.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zero.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>At first glance, the Pi Zero isn’t much.  It just looks like a slimmed down version of the Raspberry Pi we know and love.  But when we started to think of the possibilities - and what a well-chosen set of accessories could add - we realized the appeal.  And then we saw the price…could it be true? Yes!</p>

<p>This is the slimmest, most pared down Raspberry Pi to date.  It’s kind of like the little cousin to the Pi 2 - with just a micro SD card slot, a mini HDMI port, two micro USB ports (one for power, one for USB), and 512MB of RAM. It has a single-core 1 GHz processor chip, similar to the Pi A+ and B+.</p>

<ul>
  <li>1GHz single-core CPU</li>
  <li>512MB RAM</li>
  <li>Mini HDMI port</li>
  <li>Micro USB OTG port</li>
  <li>Micro USB power</li>
  <li>HAT-compatible 40-pin header</li>
  <li>Composite video and reset headers</li>
  <li>CSI camera connector (v1.3 only)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2885">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_zero/</guid>
    </item>

    <item>
      <title>Zero 2 W</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_zero_2_w/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zero_2_w.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero_2_w.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zero_2_w.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p><strong>Raspberry Pi Zero 2 W</strong> is the latest product in Raspberry Pi’s most affordable range of single-board computers. The successor to the breakthrough Raspberry Pi Zero W, <strong>Raspberry Pi Zero 2 W</strong> is a form factor–compatible drop-in replacement for the original board.</p>

<p>The board incorporates a quad-core 64-bit Arm Cortex-A53 CPU, clocked at 1GHz. At its heart is a Raspberry Pi RP3A0 system-in-package (SiP), integrating a Broadcom BCM2710A1 die with 512MB of LPDDR2 SDRAM. The upgraded processor provides Raspberry Pi Zero 2 W with 40% more single-threaded performance, and five times more multi-threaded performance, than the original single-core Raspberry Pi Zero. Raspberry Pi Zero 2 W offers 2.4GHz 802.11 b/g/n wireless LAN and Bluetooth 4.2, along with support for Bluetooth Low Energy (BLE), and modular compliance certification.</p>

<p>The board has a microSD card slot, a CSI-2 camera connector, a USB On-The-Go (OTG) port, and an unpopulated footprint for a HAT-compatible 40-pin GPIO header. It is powered via a micro USB socket. Video output is via a mini HDMI port; composite video output can easily be made available via test points, if needed. Sharing the same form factor as the original Raspberry Pi Zero, Raspberry Pi Zero 2 W fits inside most existing Raspberry Pi Zero cases.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/5291">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 01 Nov 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_zero_2_w/</guid>
    </item>

    <item>
      <title>Zero W</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_zerow/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/raspberry_pi_zerow.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zerow.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/raspberry_pi_zerow.jpg" alt="Image of Board" loading="lazy">
<p>By Raspberry Pi</p> <p>If you didn’t think that the Raspberry Pi Zero could possibly get any better, then boy do we have a pleasant surprise for you! The new Raspberry Pi Zero W offers all the benefits of the Pi Zero v1.3, but with one big difference – built-in WiFi!</p>

<p>More specifically, this giant upgrade is the addition of a BCM43143 WiFi chip BUILT-IN to your Raspberry Pi Zero – just like the Pi 3! No more pesky WiFi adapters - this Pi is WiFi ready. There’s also Bluetooth Low Energy (BLE) on board making the Pi an excellent IoT solution (BLE support is still in the works, software-wise).</p>

<ul>
  <li>1GHz, single-core CPU</li>
  <li>512MB RAM</li>
  <li>Mini HDMI and USB On-The-Go ports</li>
  <li>Micro USB power</li>
  <li>HAT-compatible 40-pin header</li>
  <li>Composite video and reset headers</li>
  <li>CSI camera connector</li>
  <li>802.11 b/g/n wireless LAN</li>
  <li>Bluetooth 4.1</li>
  <li>Bluetooth Low Energy (BLE)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3400">Adafruit</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_zerow/</guid>
    </item>

    <item>
      <title>Rock Pi 4C</title>
      <link>https://circuitpython.org/blinka/rock_pi_4c/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/rock_pi_4c.jpg 300w,
               /assets/images/boards/large/rock_pi_4c.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/rock_pi_4c.jpg" alt="Image of Board" loading="lazy">
<p>By Radxa Limited</p> <ul>
  <li>Powerful Rockchip RK3399 64-bit Hexa-core processor for better multithread application performance</li>
  <li>Mali T860MP4 Quad-core GPU for AI capabilities</li>
  <li>Better IO performance with multiple storage options</li>
  <li>Faster wireless connectivity with 2.4/5GHz Wi-Fi and Bluetooth 5.0</li>
  <li>GbE LAN to work without latency under heavy load</li>
  <li>Dual Display output with mirror or extended modes</li>
  <li>Color-coded 40-pin GPIO header to interface with a range of sensors</li>
</ul>

<p>ROCK Pi 4 Model C is a Rockchip RK3399 based SBC(Single Board Computer) by <a href="https://wiki.radxa.com/Special:SpecialContact/">Radxa</a>. It can run android or some Linux distributions. It features a six-core ARM processor, 64bit dual channel 3200Mb/s 4GB LPDDR4, up to 4K@60 HDMI, MIPI DSI, MIPI CSI, 3.5mm jack with mic, 2.4/5GHz WIFI, Bluetooth 5.0, USB Ports, GbE LAN, 40-pin color-coded expansion header, RTC. Also, ROCK Pi 4 model C supports USB PD and QC powering.</p>

<p>ROCK Pi has a modern and powerful hexa-core ARM-based processor, RK3399 inside, it offers significantly improved performance versus other popular SBC boards. All models are equipped with LPDDR4 3200Mb/s RAM. Furthermore, you can add high-performance <a href="https://www.seeedstudio.com/tag/EMMC.html">eMMC modules</a>, to boost all applications performance.</p>

<p>ROCK Pi features maker friendly expansion options, including a 40-pin GPIO interface that allows for interfacing with range inputs from buttons, switches, sensors, LEDs, and much more. ROCK Pi also features a Gbit LAN for the network, with dedicated bus and controller, it works without latency under heavy load network applications. Onboard 802.11 ac wifi offers 2.4G&amp;5G WLAN connectivity. With Bluetooth 5.0, ROCK Pi benefits-improved Bluetooth speed and greater range. ROCK Pi also features one USB 3.0 host and one USB 3.0 OTG ports, each 5Gbps/s, working independently. The USB 3.0 OTG can work as a USB device such as Android ADB or USB gadgets. A hardware switch is provided for OTG mode switch.</p>

<p>ROCK Pi supports mainstream AI stack with GPU acceleration. Furthermore, a dedicated hardware NPU accelerator coming up next for ROCK Pi will boosts complex Machine Learning algorithm and reduce the power. Industrial standard MIPI CSI connector makes it easy to connect existing cameras to ROCK Pi and ROCK Pi also supports industrial standard MIPI DSI for LCD and touch screen. With the hardware-accelerated algorithm, it’s great for Computer Vision application, Robotics and much more</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/ROCK-PI-4-Model-C-p-4658.html">seeedstudio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 06 Apr 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/rock_pi_4c/</guid>
    </item>

    <item>
      <title>Rock Pi E</title>
      <link>https://circuitpython.org/blinka/rock_pi_e/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/rock_pi_e.jpg 300w,
               /assets/images/boards/large/rock_pi_e.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/rock_pi_e.jpg" alt="Image of Board" loading="lazy">
<p>By Radxa Limited</p> <p>E for Ethernets.</p>

<p>This is the documentation for ROCK Pi E, written by Radxa Team with community contributions.</p>

<p>ROCK Pi E is a Rockchip RK3328 based SBC(Single Board Computer) by Radxa. It equips a 64bits quad core processor, USB 3.0, dual ethernets, wireless connectivity at the size of 2.5x2.2 inch(56x65mm), making it perfect for IoT and network applications. ROCK Pi E comes in various ram sizes from 512MB to 4GB DDR3, and uses uSD card for OS and storage as well as supporting eMMC module. Optionally, ROCK Pi E supports PoE, additional HAT is required.</p>

<ul>
  <li>Processor: SoC RK3328 Quad Cortex-A53 ARM 64bits processor, frequency up to 1.3GHz</li>
  <li>Memory: 1GB DDR3</li>
  <li>Storage MicroSD(TF) up to 128GB</li>
  <li>High performance eMMC module 16GB / 32GB / 64GB / 128GB</li>
  <li>Wireless: 802.11 b/g/n wifi</li>
  <li>Bluetooth 4.0(rtl8723du/rtl8821cu)</li>
  <li>external antenna</li>
  <li>USB: USB3.0 Type-A HOST x1</li>
  <li>Key: Reset key x1</li>
  <li>Maskrom key x1</li>
  <li>Ethernet: 1x 1000Mbit ethernet, optional PoE(additional HAT required)</li>
  <li>1x 100Mbit ethernet</li>
  <li>IO: 40-pin expansion header</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.amazon.com/Rockchip-RK3328-Computer-Support-OpenWRT/dp/B08DG3S7K6">Amazon</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 20 May 2021 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/rock_pi_e/</guid>
    </item>

    <item>
      <title>Rock Pi S</title>
      <link>https://circuitpython.org/blinka/rock_pi_s/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/rock_pi_s.jpg 300w,
               /assets/images/boards/large/rock_pi_s.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/rock_pi_s.jpg" alt="Image of Board" loading="lazy">
<p>By Radxa Limited</p> <p>S is for Small Square.</p>

<p>ROCK Pi S is a Rockchip RK3308 based SBC(Single Board Computer) by Radxa. It equips a 64bits quad core processor, USB, ethernet, wireless connectivity and voice detection engine at the size of 1.7 inch, make it perfect for IoT and voice applications. ROCK Pi S comes in two ram sizes 256MB or 512MB DDR3, and uses uSD card for OS and storage. Optionally, ROCK Pi S can provide on board storage version with 1Gb/2Gb/4Gb/8Gb NAND flash.</p>

<p>The Rockchip RK3308 Soc used in ROCK Pi S RK3308 is a high-performance Quad-core application processor designed for intelligent voice interaction, audio input/output processing, and other digital multimedia applications. Embedded rich audio interfaces, such as I2S, PCM, TDM, PDM, SPDIF, HDMI ARC and so on, can meet different audio application development, reduce hardware development complexity and development cost.</p>

<ul>
  <li>Quad-core ARM Cortex-A35CPU</li>
  <li>Full implementation of the ARM architecture v8-A instruction set</li>
  <li>ARM Neon Advanced SIMD (single instruction, multiple data) support for accelerated media and signal processing computation</li>
  <li>ARMv8 Cryptography Extensions</li>
  <li>In-order pipeline with symmetric dual-issue of most instructions</li>
  <li>256KB unified system L2 cache</li>
  <li>Includes VFP v3 hardware to support single and double-precision operations</li>
  <li>Integrated 32KB L1 instruction cache, 32KB L1 data cache with 4-way set associative
TrustZone technology support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/ROCK-PI-S-Mini-Computer-with-Rockchip-RK3308-512MB-RAM-4Gb-NAND-Flash-p-4282.html">seeedstudio</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 29 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/rock_pi_s/</guid>
    </item>

    <item>
      <title>SIMATIC IOT2050</title>
      <link>https://circuitpython.org/blinka/siemens_simatic_iot2050/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/siemens_simatic_iot2050.jpg 300w,
               /assets/images/boards/large/siemens_simatic_iot2050.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/siemens_simatic_iot2050.jpg" alt="Image of Board" loading="lazy">
<p>By Siemens</p> <p>SIMATIC IOT2050 is a versatile IOT edge device that allows you to connect PLCs on the factory floor to the cloud. A dual core or quad core processor gives you enough horse power to run analytics and decision making on the edge before you send off the data to the Cloud.</p>

<p>SIMATIC IOT2050, 2x Gbit Ethernet RJ45; Display port; 2x USB2.0, SD card slot, 1GB RAM, Dual Core Processor ARM TI AM6528 GP</p>

<p>Requires 24 V DC industrial power supply</p>

<p>Siemens Part Number: 6ES76470BA000YA2</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://iot2050.com/products/simatic-iot2050">iot2050.com</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/siemens_simatic_iot2050/</guid>
    </item>

    <item>
      <title>SIMATIC IOT2050 Advance</title>
      <link>https://circuitpython.org/blinka/siemens_simatic_iot2050_advance/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/siemens_simatic_iot2050.jpg 300w,
               /assets/images/boards/large/siemens_simatic_iot2050.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/siemens_simatic_iot2050.jpg" alt="Image of Board" loading="lazy">
<p>By Siemens</p> <p>SIMATIC IOT2050 Advance is a versatile IOT edge device that allows you to connect PLCs on the factory floor to the cloud. A quad core ARM processor, 20 digital IOs and 6 analog inputs gives you enough horse power to run analytics and decision making on the edge before you send off the data to the Cloud.</p>

<p>SIMATIC IOT2050 Advance; 2x Gbit Ethernet RJ45; 2GB RAM, Quad Core ARM TI AM6548 HS Processor; Display port; 2x USB2.0; 16 GB eMMC; SD card slot; Siemens Industrial OS</p>

<p>Requires 24 V DC industrial power supply</p>

<p>Siemens Part Number: 6ES76470BA001YA2</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://iot2050.com/products/simatic-iot2050-advance">iot2050.com</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 06 Oct 2022 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/siemens_simatic_iot2050_advance/</guid>
    </item>

    <item>
      <title>SOPINE A64</title>
      <link>https://circuitpython.org/blinka/sopine_a64/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/sopine_a64.jpg 300w,
               /assets/images/boards/large/sopine_a64.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/sopine_a64.jpg" alt="Image of Board" loading="lazy">
<p>By Pine64</p> <p>SOPINE A64 is a compute module powered by the same Quad-Core ARM Cortex A53 64-Bit Processor used in the PINE A64 with 2G LPDDR3 RAM memory, Power Management Unit, SPI Flash and integrated MicroSD Slot (for bootable OS images microSD card). The SOPINE module has a 5 years LTS (Long Term Supply) status, which means that it will be supplied to 2022 at the very least. There is a one year warranty period for the SOPINE module.</p>

<p>This tiny compute module uses SODIMM-DDR3 form-factor and can be paired with either the Clusterboard, the Baseboard or a custom host PCB for industrial or other embedded applications. It is fully compatible with the PINE A64-LTS in terms of software support</p>

<ul>
  <li>Allwinner A64 Quad Core SOC with Mali 400 MP2 GPU</li>
  <li>LPDDR3 RAM (up to 2GB)</li>
  <li>Micro SD</li>
  <li>SPI Flash 128Mbit</li>
  <li>CMOS Sensor Interface Port</li>
  <li>SODIMM Form-Factor</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://pine64.com/product-category/sopine/">Pine64 Store</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 17 Nov 2020 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/sopine_a64/</guid>
    </item>

    <item>
      <title>STM32MP1 Discovery Kit 2</title>
      <link>https://circuitpython.org/blinka/stm32mp157c_dk2/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/stm32mp157c_dk2.jpg 300w,
               /assets/images/boards/large/stm32mp157c_dk2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/stm32mp157c_dk2.jpg" alt="Image of Board" loading="lazy">
<p>By STMicroelectronics</p> <p>The STM32MP157A-DK1 and STM32MP157C-DK2 Discovery kits leverage the capabilities of STM32MP1 Series microprocessors to allow users easily develop applications using STM32 MPU OpenSTLinux Distribution software for the main processor and STM32CubeMP1 software for the co-processor.</p>

<p>They include an ST-LINK embedded debug tool, LEDs, push-buttons, one Ethernet 1-Gbps connector, one USB-C OTG connector, four USB Type-A Host connectors, one HDMI transceiver, one stereo headset jack with analog microphone, and one microSD connector.</p>

<p>To expand the functionality of the STM32MP157A-DK1 and STM32MP157C-DK2 Discovery kits, two GPIO expansion connectors are also available for ARDUINO® and Raspberry Pi shields.</p>

<p>Additionally, the STM32MP157C-DK2 Discovery kit features an LCD display with a touch panel, and Wi-Fi and Bluetooth Low Energy capability.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>STM32MP157 Arm®-based dual Cortex®-A7 32 bits + Cortex®-M4 32 bits MPU in TFBGA361 package</li>
  <li>ST PMIC STPMIC1</li>
  <li>4-Gbit DDR3L, 16 bits, 533 MHz</li>
  <li>1-Gbps Ethernet (RGMII) compliant with IEEE-802.3ab</li>
  <li>USB OTG HS</li>
  <li>Audio codec</li>
  <li>4 user LEDs</li>
  <li>2 user and reset push-buttons, 1 wake-up button</li>
  <li>5 V / 3 A USB-C power supply input (not provided)</li>
  <li>Board connectors:
    <ul>
      <li>Ethernet RJ45</li>
      <li>4x USB Host Type-A and USB-C</li>
      <li>HDMI Stereo headset jack including analog microphone input</li>
      <li>microSD card</li>
      <li>GPIO expansion connector (Raspberry Pi shields capability) and Arduino Uno V3 expansion connectors</li>
    </ul>
  </li>
  <li>On-board ST-LINK/V2-1 debugger/programmer with USB re-enumeration capability: Virtual COM port and debug port</li>
  <li>STM32 CubeMP1 and full mainline open-source Linux STM32 MPU OpenSTLinux Distribution (such as STM32MP1Starter) software and examples</li>
  <li>Support of a wide choice of Integrated Development Environments (IDEs) including IARTM, Keil, GCC-based IDEs</li>
  <li>4” TFT 480×800 pixels with LED backlight, MIPI DSISM interface, and capacitive touch panel</li>
  <li>Wi-Fi 802.11b/g/n</li>
  <li>Bluetooth Low Energy 4.1</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://estore.st.com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-discovery-kits/stm32mp157c-dk2.html">STMicroelectronics</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 10 Sep 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/stm32mp157c_dk2/</guid>
    </item>

    <item>
      <title>X86 II ULTRA</title>
      <link>https://circuitpython.org/blinka/udoo_x86_ii_ultra/</link>
      <description><![CDATA[   
  
  <img srcset="/assets/images/boards/small/udoo_x86_ii_ultra.jpg 300w,
               /assets/images/boards/large/udoo_x86_ii_ultra.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/large/udoo_x86_ii_ultra.jpg" alt="Image of Board" loading="lazy">
<p>By UDOO</p> <p>UDOO X86 II is the New PC: the most powerful x86 maker board ever and an Arduino™ Leonardo-compatible platform, all embedded on the same board.</p>

<p>On UDOO X86 II you can run all the software available for the PC world, from gaming to video streaming, from graphical editors to professional development platforms, plus all the software or the Arduino™ Leonardo world, including all the sketches, libraries and the official Arduino™ Leonardo IDE.</p>

<p>You won’t ever worry about lack of drivers or stuff like that. This is a true next-generation computer.</p>

<p>It is based on Quad Core 64-bit new-generation x86 processors made by Intel®, designed for the PC domain. Prodigious processors concentrated in 14 nm, with an amount of energy consumption of 5 or 6 Watt.</p>

<p>The board can be powered by a DC-jack with a standard 5.5mm/2.1mm barrel jack, internal positive, Voltage 12V ± 5%. This is not included. Alternatively, power can be provided though the VIN pin located on the header.</p>

<p>Screw/Spacers for M.2 SSD and Wifi/BT already included.</p>

<ul>
  <li>CPU Intel Pentium N3710 2.56 GHZ</li>
  <li>8 GB DDR3L Dual Channel</li>
  <li>Intel HD Graphics 405. Up to 700 MHz</li>
  <li>32GB eMMC storage</li>
  <li>Standard SATA connector</li>
  <li>M.2 Key B SSD slot</li>
  <li>Micro SD card slot</li>
  <li>Gigabit Ethernet connector</li>
  <li>M.2 Key E slot for optional Wireless modules</li>
  <li>3 x USB 3.0 type-A sockets</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.udoo.org/udoo-x86-ii-ultra.html">UDOO</a></li>
</ul>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Aug 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/udoo_x86_ii_ultra/</guid>
    </item>


  </channel>
</rss>
